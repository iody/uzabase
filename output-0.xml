<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<rss version="2.0">
    <channel>
        <title>UZABASE Tech Blog</title>
        <link>http://tech.uzabase.com/</link>
        <description>株式会社ユーザベースの技術チームブログです。 主に週次の持ち回りLTやセミナー・イベント情報について書きます。</description>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Hatena::Blog</generator>
        <item>
            <title> Hinemos5.0.1移行記（その2：保守サービスとエンタープライズオプションを契約） </title>
            <link>http://tech.uzabase.com/entry/2016/04/28/121633</link>
            <description>&lt;p&gt;ユーザベース インフラチームの小林です。&lt;/p&gt;

&lt;p&gt;だいぶ時間が空いてしまいましたが、「&lt;a href=&quot;http://tech.uzabase.com/entry/2016/03/11/155758&quot;&gt;Hinemos5.0.1移行記（その1：理想と現実の葛藤）&lt;/a&gt;」の記事から引き続き、Hinemos5.0.1への移行のお話です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;前回のおさらい&lt;/h2&gt;

&lt;p&gt;Hinemos環境をバージョンアップするために、以下の流れで行うことを考えていました。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;   Hinemos5Managerを新規構築 、動作検証&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;   Hinemos3のデータをHinemos5に移行&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;   Hinemos3からHinemos5への順次切り替え&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;しかし、実際には思っていた通りにいかないことが判りました。&lt;/p&gt;

&lt;p&gt;具体的には、3番目の「Hinemos3からHinemos5への順次切り替え」の部分で、以下の問題がでてきたというお話でした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Agent用にサポート対象バージョンのOpenJDKを入れるか、OracleJDK1.8を使い続けるか。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hinemos3とHinemos5のAgentが同居できるといっても、どちらかのインストールディレクトリを変えないといけない。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;救世主が現る&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.uzabase.com/entry/2016/03/11/155758&quot;&gt;前回の記事&lt;/a&gt;にも書いてありますが、&lt;A Href=&quot;http://atomitech.jp/&quot;&gt;アトミテック&lt;/A&gt;さんが上記の問題を解決してくれました。&lt;br&gt;
もともと、Hinemos5が出る前から、データ移行の相談を何回かしておりました。
その際に、すごく頼りになりそうだったので&lt;br&gt;
「データ移行＋移行時のトラブルサポート」という形で、今回依頼をいたしました。&lt;br&gt;
結果的にそれが大正解で、本当にいろいろなことをサポートしていただきました。&lt;br&gt;
&lt;br&gt;
特に、OpenJDKを入れるかOracleJDK1.8を使い続けるかという問題を解決するうえで、非常に助かりました。
既存の環境で使用しているOracleJDK1.8を使い続けたかったのですが、これを短時間で動作検証するのは私達には不可能でした。&lt;br&gt;
しかし、快く&lt;A Href=&quot;http://atomitech.jp/&quot;&gt;アトミテック&lt;/A&gt;さんにご対応いただけたおかげで、OracleJDK1.8でもHinemos5.0の動作が一通り問題ないことが判りました。&lt;br&gt;
当然ながら自己責任の上で、弊社環境ではOracleJDK1.8でHinemos5.0のAgentを動かしてます（今のところ不具合はありません）。&lt;br&gt;
&lt;br&gt;
OracleJDK1.8でHinemos5.0のAgentを動かすにあたって、何個か落とし穴がありましたが、そこら辺もご対応をいただいてます（起動shellにJavaのバージョンチェックがあったりなど）。
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;移行できたよ！&lt;/h2&gt;

&lt;p&gt;問題を踏まえた上で、HinemosのAgentは以下の手順で切り替えることになりました。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;   Hinemos3.1のAgentのインストールディレクトリ変更&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;   Hinemos5.0のAgentをOracleJDK1.8で起動&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;   Hinemos3.1からHinemos5.0への順次切り替え&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;br&gt;
Hinemos3.1のAgentの変更に当たっては、Agentの再起動が入るのでできるだけ既存のジョブに影響が出ないように調整しながら行いました。
Hinemos5.0のAgentは既存のジョブがないので、一括で作業をしました。&lt;br&gt;
ジョブの順次切り替えは、前回書いたように各ジョブネットは簡単な仕組みで連携していたため、一つのジョブネットがうまくいったら、Hinemos3側のスケジュールを無効化、Hinemos5側のスケジュールを有効化しながら、代替1ヶ月くらいかけて切り替えることができました。
&lt;br&gt;
&lt;br&gt;その途中でもいろいろとあったのですが（Nagiosの監視用スクリプトのVerUpや、エラー時のジョブの挙動が変わってた事など）、一つ一つ真摯にご対応いただけたおかげで、非常にスムーズに作業が進みました。
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;結果、保守サービスとエンタープライズオプションの契約を結ぶ事に&lt;/h2&gt;

&lt;p&gt;おかげで、無事にHinemos5への移行ができたのですが、あまりにも真摯に対応していただいたので、&lt;A Href=&quot;http://atomitech.jp/&quot;&gt;アトミテック&lt;/A&gt;さん経由でHinemosの保守サービスとエンタープライズオプションの契約を結ばせていただきました。&lt;br&gt;
&lt;br&gt;
保守サービスとエンタープライズオプションを契約すると、以下のメリットがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;修正パッチを提供してもらえる&lt;br&gt;
&lt;span style=&quot;color: #1464b3&quot;&gt;→今回で言うと、Hinemos5.0.2のリリース前に、Hinemos5.0.1のメモリリークの修正パッチが提供されて、事前にその不具合を解消する事ができました。
&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;エンタープライズオプションが使えるようになる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hinemosでわからない事を相談できる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;分からない事を相談できるという点が有難く、Hinemosの情報を検索しても出てこないことが多いのですが、何が起きても聞ける環境があると思えるだけで大きな安心感があります。&lt;br&gt;
&lt;br&gt;
個人的に嬉しいのは、エンタープライズオプションを使って、更にHinemosの使える幅が広がりそうなので、いろいろ試していきたいと思ってます。&lt;br&gt;
Hinemosの情報が意外と少ないので、弊社ブログでもHinemosユーザーの皆さんに有益な情報を発信できればと思っています。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;今回の移行で思った事&lt;/h2&gt;

&lt;p&gt;今回移行をしてみてすごく実感したのが、「やはり、あまり一つの製品で凝った仕組みを作らない方が良いな」ということでした。&lt;br&gt;
Hinemosの機能を試したいと言っておきながら矛盾する話ではありますが、うちはHinemosを使いこなしていなかったおかげで、移行に大きな工数がかからずに済んだと思っています。&lt;br&gt;
Hinemosは確かに便利でまだまだ使いこなせる余地があると思っていますし、他の有償版のジョブ監視ツールももっと細かいところができるかもしれません。&lt;br&gt;
この「細かいところ」が肝で、このせいで移行が大規模や製品選定のネックになる事が多い気がしています。&lt;br&gt;
&lt;br&gt;
弊社のジョブの組み方は、最低限のジョブネットを作って、各ジョブネット間はファイル連携という単純な仕組みを用いています。&lt;br&gt;
このファイル連携も、shellでファイル作成とファイル監視をしているので、Hinemosからみたらジョブの実行をしているだけになります。&lt;br&gt;
おかげで、ジョブの切り替えタイミングに余裕を持たせることができたので、私を含めて2～3人程度でも余裕を持って切り替えることができたと思っています。&lt;br&gt;
もし、この組み方がジョブ監視ツールの機能で、全部ジョブの前後関係を組んでいた場合、異なるHinemos間での先行条件はできないので、一括で変更をしないといけない状態でした。&lt;br&gt;
&lt;br&gt;
極端な話をすれば、Hinemosから別製品に載せ替えることもできたと思います（ジョブデータの変換できればですが）。&lt;br&gt;
&lt;br&gt;
そこら辺の自由度は最大限残しておくためにも、あまり凝った機能を使わずに、できるだけ単純な部分を組み合わせるのが良いのではないか、と実感した次第です。&lt;br&gt;
&lt;br&gt;
そうはいっても、便利な機能は使うべきだと思うので、そこら辺を意識しながら、あまり依存しすぎることのないように使っていくことが大事かなと考えています。&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;今後の要望&lt;/h2&gt;

&lt;p&gt;上でいろいろ書きましたが、私自身はHinemosと末永く付き合うつもりでいます。&lt;br&gt;
今後も長くおつきあいする上で、今回の移行で引っかかった以下の点を実現してもらえると、次回（何年後か判りませんが）のHinemosバージョンアップ作業のハードルがだいぶ下がるはずなので是非お願いしたいところです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;インストールディレクトリを/opt/hinemos_XXXみたいなバージョンごとに分けてほしい&lt;/li&gt;
&lt;li&gt;Agentをインストールするときに、OpenJDKを/opt/hinemos_XXX以下に一緒に入れてほしい&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;エンタープライズオプションのExp/Imp機能の画面紹介&lt;/h2&gt;

&lt;p&gt;簡単に、エンタープライズオプションで使いたかったExp/Impについて紹介します。&lt;br&gt;
このおかげで、ジョブの修正の工数が大幅に縮小されました。&lt;br&gt;
&lt;br&gt;
オプションをインストールすると、こんな感じでメニューが増えます。
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160420/20160420202629.png&quot; alt=&quot;f:id:manabu-kobayashi:20160420202629p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160420202629p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
エクスポート・インポートの設定は、クライアント設定の画面から確認や変更ができます。&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160420/20160420202656.png&quot; alt=&quot;f:id:manabu-kobayashi:20160420202656p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160420202656p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;実際の画面はこんな感じ。ここらへんで、エクスポート・インポート・差分比較ができます。&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160420/20160420202707.png&quot; alt=&quot;f:id:manabu-kobayashi:20160420202707p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160420202707p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;変更用のExcelの画面はこんな感じで、&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160420/20160420202717.png&quot; alt=&quot;f:id:manabu-kobayashi:20160420202717p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160420202717p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;出力した内容との差分比較は、このようなCSVファイルで出力されて、変更されたところが一目でわかります
（自分の作業が想定通りか一目でわかって便利です）。&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160420/20160420202911.png&quot; alt=&quot;f:id:manabu-kobayashi:20160420202911p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160420202911p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>：記事をオススメするLINE BOTをつくってみた</title>
            <link>http://tech.uzabase.com/entry/2016/04/15/140513</link>
            <description>&lt;p&gt;はじめまして。技術チームの井原です。&lt;/p&gt;

&lt;p&gt;チャットボット（Bot）という言葉を聞いたことがあるでしょうか。スマホやWebのメッセンジャー上で動く自動会話ロボットで、4/7にLINEが&lt;a href=&quot;https://business.line.me/ja/products/4/introduction&quot;&gt;BOT API Trial&lt;/a&gt;を公開したことでエンジニア界隈で一躍ホットなトピックとなりました。今週にはFacebookが対応を発表し、でも話題になりました。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fnewspicks.com%2Fnews%2F1496965&quot; title=&quot;FacebookがMessengerのチャットボットのプラットフォームを発表&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://newspicks.com/news/1496965&quot;&gt;newspicks.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;私もBOT API Trialの公開で大喜びしたクチで、さっそく週末と帰宅後の時間でLINE BOTを作ってみました。&lt;/p&gt;

&lt;h1&gt;うま&lt;/h1&gt;

&lt;p&gt;こちらが作成したBotです。「うま」（非公式Bot）といいます。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/r/ryoju/20160414/20160414174014.png&quot; alt=&quot;f:id:ryoju:20160414174014p:plain&quot; title=&quot;f:id:ryoju:20160414174014p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ユーザーが知りたいことをうまに伝えると、良さそうなの記事を探してお教えします。記事の内容が気になったら、画像をタップするとページが開きます。&lt;/p&gt;

&lt;p&gt;さて、うまがどういうふうにできているのかご説明いたしましょう。&lt;/p&gt;

&lt;h1&gt;インフラ環境&lt;/h1&gt;

&lt;p&gt;うまはAWSで動いています。EC2（w/ Elastic IP） + ELB + CloudFront + Certificate Manager + Route 53という構成です。Certificate Managerを使うためにバージニア北部のリージョンで動かしています。&lt;/p&gt;

&lt;p&gt;LINE BOTを動かすために以下の対応が必要でした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;LINE BOTのコールバックを受けるためにはSSLが必須で、かつ&lt;a href=&quot;http://qiita.com/git6_com/items/008404506836011af33b&quot;&gt;証明書を選り好みする&lt;/a&gt;ため、Certificate Managerの証明書を使っています。私が所有しているドメインに対して作成した証明書をCloudFrontに紐付けて、さらにCloudFrontのエンドポイントをRoute 53のAレコードで設定しています。ここの設定に苦労したので、キャプチャを貼付しておきます。よかったら参考にしてください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Certificate Manager&lt;br&gt;コールバックURLに使いたいドメインで証明書を作成します。ワイルドカードである必要はありません。&lt;Br&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/r/ryoju/20160414/20160414202224.png&quot; alt=&quot;f:id:ryoju:20160414202224p:plain:w400&quot; title=&quot;f:id:ryoju:20160414202224p:plain:w400&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:400px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;CloudFront&lt;br&gt;ディストリビューションを作成し、証明書を設定します。CNAMEにもコールバックURLのドメインを設定します。&lt;br&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/r/ryoju/20160414/20160414202227.png&quot; alt=&quot;f:id:ryoju:20160414202227p:plain:w400&quot; title=&quot;f:id:ryoju:20160414202227p:plain:w400&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:400px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Route 53&lt;br&gt;ドメインのAタグにディストリビューションを設定します。&lt;br&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/r/ryoju/20160414/20160414202230.png&quot; alt=&quot;f:id:ryoju:20160414202230p:plain:w200&quot; title=&quot;f:id:ryoju:20160414202230p:plain:w200&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:200px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LINE BOTはAPIの呼び出し元のIPアドレスを事前に登録しておく必要があり、固定グローバルIPが必要となります（可変だと突然呼び出しが通らなくなるおそれがある）。そのためにElastic IPをEC2インスタンスに付けています。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ちなみに、私はさくらのVPSを1台契約しており、最初はそれを使おうとしたのですが、証明書の問題でうまくいきませんでした。仕方なくAWSに環境を作って、開発中のプログラム一式も移したという経緯がありました。おそらくLINE BOT APIのサーバ側でチェックしているのでしょうが、無償で取れるSSL証明書ではこちらの用意したコールバックURLを呼んでくれない（？）ようで、GMO GlobalSignの試用証明書、EcoCertの試用証明書と試したのですが、いずれもうまくいきませんでした。SSL証明書はLINE BOTを作ろうとする趣味プログラマのハードルとなっていて、BOT API Trialの公開から数日は「この証明書なら大丈夫」「これはダメ」みたいな話題が多かったです。&lt;/p&gt;

&lt;h1&gt;メッセージの処理と記事推薦&lt;/h1&gt;

&lt;p&gt;ユーザーが知りたいことを送信してから、うまが記事を提示するまでの流れは以下のようになっています。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;形態素解析&lt;/li&gt;
&lt;li&gt;特徴語抽出&lt;/li&gt;
&lt;li&gt;記事の検索&lt;/li&gt;
&lt;li&gt;記事の選択&lt;/li&gt;
&lt;li&gt;記事の提示&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;また、大まかなデータのやりとりはこのような形になります。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/r/ryoju/20160414/20160414213825.png&quot; alt=&quot;f:id:ryoju:20160414213825p:plain&quot; title=&quot;f:id:ryoju:20160414213825p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;1. 形態素解析&lt;/h3&gt;

&lt;p&gt;ユーザーがLINEでうまとのトークを開始し、知りたいことを入力すると、LINEのサーバを経由してコールバックURLへ&lt;a href=&quot;https://developers.line.me/bot-api/api-reference#receiving_messages&quot;&gt;テキストメッセージ&lt;/a&gt;がPOSTされます。テキストメッセージからユーザーの入力した知りたいことを取り出して形態素解析を行い、単語に切り分けます。
形態素解析エンジンにはMeCabとIPA辞書（オフィシャルサイトで配布されているもの）を使っています。&lt;/p&gt;

&lt;h3&gt;2. 特徴語抽出&lt;/h3&gt;

&lt;p&gt;ユーザーは自然な（口語的な）表現で知りたいことを入力するため、検索の前処理として不要な単語を落としています。ここはバリエーションの考えられる処理ですが、現状では単純に名詞だけを残し、それ以外の品詞はすべて落としています。&lt;/p&gt;

&lt;p&gt;ただ、ログを見るとやはり適切ではない分割をされているケースが多いです。が経済ニュースアプリであるためか、企業名等の固有名詞をメッセージに含む場合が多いのですが、分割しすぎているケースが頻繁に見られます。提示するニュースの適切さをあげるには、ここの改善が大事だなという印象があります。企業・業界情報プラットフォームである&lt;a href=&quot;https://www.uzabase.com/speeda/&quot;&gt;SPEEDA&lt;/a&gt;の辞書を使えばもっと良くなるかもしれません。&lt;/p&gt;

&lt;h3&gt;3. 記事の検索&lt;/h3&gt;

&lt;p&gt;抽出された特徴語を用いての記事を検索します。ここではの検索機能は使わず、Google検索を使っています。の検索機能は有料会員にだけ開放されている機能なので、誰にでもオープンなGoogle検索にしました。GoogleのWeb検索で上位10件を取得しています。&lt;/p&gt;

&lt;h3&gt;4. 記事の選択&lt;/h3&gt;

&lt;p&gt;うまは、1つの知りたいことに対して1件だけ記事を提示するため、検索結果の中から提示する記事を選択する必要があります。画像を合わせて提示したいので、検索結果の上位から画像があるかをチェックしていき、画像があるものが見つかればそれを選択しています。&lt;/p&gt;

&lt;p&gt;ここも将来的な改善の余地が大きい箇所です。たとえば、検索結果の記事ごとにPick数を取得して重み付けをする、みたいなことはすぐに思いつきます。ただ、やりだすと終わりがありませんし、記事の内容を判定に使うためにはクローリングやページの処理が必要で、レスポンスタイムがそのぶん伸びてしまうこともあり、このような処理としています。&lt;/p&gt;

&lt;h3&gt;5. 記事の提示&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.line.me/bot-api/api-reference#sending_rich_content_message&quot;&gt;リッチメッセージ&lt;/a&gt;を作ってLINEサーバにPOSTすると、ユーザーに記事が提示されます。&lt;/p&gt;

&lt;p&gt;以上の処理がワンセットで、テキストメッセージを受け付けるたびにこれを実行します。&lt;/p&gt;

&lt;h1&gt;社内公開&lt;/h1&gt;

&lt;p&gt;だいたい動くようになったところで、社内(ニューズピックス/ユーザベース)のSlackでうまを公開しました。けっこう好評で皆に使ってもらえたのですが、やっぱりユーザーの実際の使い方というのは、開発者に様々な気づきやアイディアを与えてくれるものです。以下はのメンバーがSlackにポストしてくれたキャプチャです。&lt;/p&gt;

&lt;h3&gt;時間の指定&lt;/h3&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/r/ryoju/20160414/20160414204703.jpg&quot; alt=&quot;f:id:ryoju:20160414204703j:plain:w250&quot; title=&quot;f:id:ryoju:20160414204703j:plain:w250&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:250px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/r/ryoju/20160414/20160414204706.png&quot; alt=&quot;f:id:ryoju:20160414204706p:plain:w250&quot; title=&quot;f:id:ryoju:20160414204706p:plain:w250&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:250px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;いまの処理方法では、時間（記事の公開時刻）をまったく考慮していません。「今日の」「昨日の」のような時間指定のあるメッセージだと、ユーザーの意図を踏まえないイマイチな答えになってしまいます。改善ポイントですね。&lt;/p&gt;

&lt;h3&gt;形容詞の使用&lt;/h3&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/r/ryoju/20160414/20160414204734.png&quot; alt=&quot;f:id:ryoju:20160414204734p:plain:w250&quot; title=&quot;f:id:ryoju:20160414204734p:plain:w250&quot; class=&quot;hatena-fotolife&quot; style=&quot;width:250px&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;現在の処理方式では特徴語抽出で名詞だけを残しており、「盛り上がった」は形容詞なので、検索結果に何ら反映されません。この場合は「ニュース」だけで検索した結果を返すことになっています。&lt;/p&gt;

&lt;p&gt;まあ、うまは生まれたばかりだからね……。開発者としてはがんばって賢くしてやりたいものです。&lt;/p&gt;

&lt;h1&gt;ソースコード&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ryoju/newspicks_bot&quot;&gt;現状のソースコードをGithubに上げた&lt;/a&gt;ので、よろしければご覧ください。まだα版くらいの感じなので、ごちゃごちゃ弄っている最中でコメントも皆無と、綺麗とは言いがたいのですが。そのうち整理されてくるはず……たぶん。&lt;/p&gt;

&lt;p&gt;実装にはPythonを使っています。フレームワークはDjango(w/ Django REST Framework)です。 どこかで動かしてみる時には、newspicks/settings_line.pyにあなたのLINE BOTのChannel ID, Channel Secret, MIDを記載してください。&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>Slackを全社導入したので、社内向け利用マニュアルを公開してみた</title>
            <link>http://tech.uzabase.com/entry/2016/03/17/145415</link>
            <description>&lt;p&gt;はじめまして。ユーザベース Cultureチームの木村です。先月、インターンとして入社し、就職活動と二足の草鞋でやっています。
&lt;br&gt;
&lt;br&gt;
今回、ユーザベース全体として「Slack」の全面導入が決まりました！
これまで、社内でのチャットコミュニケーションはチームごとにLINE・チャットワーク・Skypeを使用し混在していましたが、今後はSlackに統一をしていきます。
&lt;br&gt;
&lt;br&gt;
全社導入時に使用した&lt;span style=&quot;color: #F5A2A2&quot;&gt;Slackのご紹介&lt;/span&gt;と&lt;span style=&quot;color: #F5A2A2&quot;&gt;簡易マニュアル&lt;/span&gt;を公開します。Slackが気になっていた方や初めて知る方に、他のコミュニケーションツールと違う点についてお伝えしたいと思います。
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;What’s Slack？&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316161207.png&quot; alt=&quot;f:id:uzabase:20160316161207p:plain&quot; title=&quot;f:id:uzabase:20160316161207p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&gt;
&lt;br&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Slack（スラック）は、スチュワート・バターフィールドによって開発された、チームコミュニケーションツール。2013年8月に公開され、公開から24時間以内に8000の顧客にサインアップされた。現在Slackは世界中で急速に普及しており、1日に利用するアクティブユーザー数は125万人で、有料会員が37万人(2015年9月時点)。利用者数は90日ごとに倍増するペースで伸び続けている。&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;u&gt;&lt;b&gt;ざっくり言えば、「ビジネス用途のLINE」です。&lt;/b&gt;&lt;/u&gt;
&lt;br&gt;メールで堅苦しくやり取りをするよりも、チャットツールで簡単にコミュニケーションをとる方が、精神的にも楽ですし、効率的ですよね。LINEはプライベートと混同されてしまうし・・というわけで、Slackになりました。
&lt;br&gt;
ですが、チャットワークを始め、数ある企業向けコミュニケーションツールの中から、どうしてSlackが選ばれたのか？
&lt;br&gt;
ということで、以下にSlackを利用する5つのメリットをあげてみました！
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;Slackのイケてる点&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;b&gt;情報の抽出が簡単＆網羅的&lt;/b&gt;
&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316163128.png&quot; alt=&quot;f:id:uzabase:20160316163128p:plain&quot; title=&quot;f:id:uzabase:20160316163128p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
検索機能で、チャンネル(LINEのグループチャットの概念)をまたいで、過去ログ全ての検索ができます。
&lt;br&gt;また、ファイルやまとまった文章を投稿するPost機能は、それ自体にコメントをつけることができるので、返答や意見が一か所にまとまりやすいです。Postは複数人での共同編集にも対応しています。
&lt;br&gt;
&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;連携できる外部サービスが豊富&lt;/b&gt;
&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316163143.png&quot; alt=&quot;f:id:uzabase:20160316163143p:plain&quot; title=&quot;f:id:uzabase:20160316163143p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
Slackと言えば拡張性。例えばGmailからメールが来たらSlackに通知され、そのままSlack上で内容の確認ができるなど、あらゆる通知や情報がSlackを見るだけで確認ができるようになります。TwitterやRSS、Google Calendarといった一般的なサービスから、GitHubなどエンジニア向けのサービスまで、幅広く連携することができます。
&lt;br&gt;
&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;UIがシンプルでスタイリッシュ&lt;/b&gt;
&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316170627.png&quot; alt=&quot;f:id:uzabase:20160316170627p:plain&quot; title=&quot;f:id:uzabase:20160316170627p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
個人的な好みにはなりますが、とにかくお洒落でシンプル。洗練されたUIは、SPEEDAと共通する部分があるように思えます。コミュニケーションツールは毎日使うものですので、やはりごちゃごちゃしたUIよりも、シンプルで分かり易いものの方が捗ります。
&lt;br&gt;
&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;各端末用のアプリがある&lt;/b&gt;
&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316162310.jpg&quot; alt=&quot;f:id:uzabase:20160316162310j:plain&quot; title=&quot;f:id:uzabase:20160316162310j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
ブラウザ版の他、Mac、Windowsのデスクトップ版、iOS、Androidのアプリ版もあり、いつでもどこでも使うことができます。
&lt;br&gt;
&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;各種コードをアップロードできるsnippet機能がある。&lt;/b&gt;
&lt;br&gt;
この点が、とりわけエンジニアライクな設計になっています。Tech Blogということで、少し詳しくご説明します。
&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316163202.png&quot; alt=&quot;f:id:uzabase:20160316163202p:plain&quot; title=&quot;f:id:uzabase:20160316163202p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
左上の入力画面にコードの名前を打ち込み、右上のプルダウンでコードの言語種類を選ぶと、中央のプログラムコードが色付けされたり、自動でインデントがつけられます。
&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316163221.png&quot; alt=&quot;f:id:uzabase:20160316163221p:plain&quot; title=&quot;f:id:uzabase:20160316163221p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
実際に投稿すると、このように見えます。これまで、他のチャットサービスでコードをベタ貼りしていた時と比べて、かなり見違えると思います。色付け、インデントに加えて行番号も書いてあるため、他のエンジニアとのコミュニケーションもとりやすくなっています。
&lt;br&gt;
&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316163243.png&quot; alt=&quot;f:id:uzabase:20160316163243p:plain&quot; title=&quot;f:id:uzabase:20160316163243p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
投稿されたSnippetには、Post機能と同じようにコメントを付けられるだけではなく、検索でコードやコメントの中身まで引っかかります！
&lt;br&gt;
&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316163304.png&quot; alt=&quot;f:id:uzabase:20160316163304p:plain&quot; title=&quot;f:id:uzabase:20160316163304p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
ちなみに、これは「in:helloslack during:2016 helloWorld」と検索しており、『「helloslack」チャンネルの2016年に投稿された中で、helloWorldの文字列が存在する』メッセージもしくはファイルを抽出しています。
&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;How to Slack&lt;/h3&gt;

&lt;h4&gt;1.コミュニケーション&lt;/h4&gt;

&lt;p&gt;Slackでのコミュニケーション方法は、以下の3通りです。
&lt;br&gt;
・メンバー全体に特定の情報を送信する「チャンネル」
&lt;br&gt;
・個々のメンバーに向けた「ダイレクトメッセージ」
&lt;br&gt;
・特定のメンバーのみが閲覧できる「プライベートグループ」
&lt;br&gt;&lt;/p&gt;

&lt;h5&gt;1-1.チャンネル&lt;/h5&gt;

&lt;p&gt;チャンネルとは、関連する話題を部屋別に分ける機能で、LINEのグループチャットと同じようなものです。ただし、このチャンネルに表示している内容は、Slack全体に共有されるので、チャンネルに参加していない人でも自由に閲覧することが可能です。(チャンネルに参加していないメンバーは、発言することはできません。)
&lt;br&gt;
&lt;br&gt;
【新規チャンネル作成】
&lt;br&gt;
新規チャンネルは「CHANNELS」の「＋ボタン」をクリックして作成をします。お好みのチャンネル名と招待したいメンバー(後からでも追加可能)、チャンネルの説明をいれたら、「Create channel」をクリックしてください。
&lt;br&gt;
 &lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316163337.png&quot; alt=&quot;f:id:uzabase:20160316163337p:plain&quot; title=&quot;f:id:uzabase:20160316163337p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
＋ボタンの左にある「CHANNELS」からは既存のCHANNELを検索することができます。
&lt;br&gt;
&lt;br&gt;
【チャット】
&lt;br&gt;
通常の会話は、チャットツールと同様でテキストを入力し、Enterで送ることができます。編集したい場合には、テキスト入力欄の右に「･･･」がでますので、そこから「Edit message」で編集してください。
&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316163821.png&quot; alt=&quot;f:id:uzabase:20160316163821p:plain&quot; title=&quot;f:id:uzabase:20160316163821p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
コメントにPinやStarを付けて、後から見やすくすることもできます。
&lt;br&gt;
&lt;br&gt;
【メンション】
&lt;br&gt;
投稿時に、以下のコマンドを入力すると、特定のユーザー名を記載したメッセージが送れるようになります。初期設定では、メンションのみがポップアップ通知されるようになっているため、これを使うことで相手にメッセージが伝わりやすくなります。
&lt;br&gt;
@username → 特定の個人へのメンションは、@を入れて一覧の予測変換より選択出来ます。
&lt;br&gt;
@everyone or @group → チャンネル関係なく、全てのメンバーへのメンション
&lt;br&gt;
@here → オンラインのメンバーへのメンション
&lt;br&gt;
@channel → チャンネルのメンバー全員へのメンション
&lt;br&gt;
&lt;br&gt;
【ファイル共有】
&lt;br&gt;
テキスト入力欄左部の＋ボタンから、「Upload a file」、もしくはドラッグアンドドロップで、テキスト入力エリアに画像やファイルを持ってくると、アップロードが可能です。gif・jpg・png・pdf・textなど、どんなファイルでも送ることができます。
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h5&gt;1-2.ダイレクトメッセージ&lt;/h5&gt;

&lt;p&gt;ダイレクトメッセージは、名前の通り直接連絡のやり取りができます。
一対一の会話なので、他の参加者が内容を確認することはできません。
&lt;br&gt;
 &lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316163348.png&quot; alt=&quot;f:id:uzabase:20160316163348p:plain&quot; title=&quot;f:id:uzabase:20160316163348p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
画面左部「DIRECT MESSAGES」からユーザーの検索ができます。
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h5&gt;1-3.プライベートグループ&lt;/h5&gt;

&lt;p&gt;プライベートグループは、チャンネルとほぼ同じ機能ですが、このチャンネルに書かれた内容は参加メンバーのみに共有され、同じチーム内でも閲覧はできません。クローズドな環境なのでサプライズ等の計画に使えそうです！
&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316163925.png&quot; alt=&quot;f:id:uzabase:20160316163925p:plain&quot; title=&quot;f:id:uzabase:20160316163925p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
通常のチャンネル作成と同様、「CHANNNELS」の「＋ボタン」から作成画面へ
→上部の「Public」タブをクリックすると「Private」となります。
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;2.別アプリとの連携&lt;/h4&gt;

&lt;p&gt;【Google Driveとの連携】
Google DriveとSlackを連携しておくと、Google DriveのファイルURLをSlackに貼り付けた際に、Slack上にファイルとして認識される（検索対象になる） ようになります。スプレッドシートなどを頻繁に触る方は設定しておくと、Slack内から検索できたり、直にファイルが開けたりしてとても便利になります。
&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316164158.png&quot; alt=&quot;f:id:uzabase:20160316164158p:plain&quot; title=&quot;f:id:uzabase:20160316164158p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
画面左部の自分のユーザーネームをクリック
&lt;br&gt;
→右部「Account」をクリック
&lt;br&gt;
→左部「Configure Apps」をクリック
&lt;br&gt;
→一覧から「Google Drive」をクリック
&lt;br&gt;
→「Authenticate」から連携許可
&lt;br&gt;
&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20160316/20160316173141.png&quot; alt=&quot;f:id:uzabase:20160316173141p:plain&quot; title=&quot;f:id:uzabase:20160316173141p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
URLではなく、ファイル形式で表示されるようになった上、Slack上でコメントを付けられるようになりました！
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;感想&lt;/h3&gt;

&lt;p&gt;長々と書いてしまいましたが、何か一つでもご参考になるものがあれば幸いです。スラッシュコマンドやPin機能など、Slackにはまだまだ可能性が秘められております。皆さまもぜひお試しください。&lt;br&gt;
私個人としても、全社へのSlack導入のお仕事をいただいてから、半信半疑で使い始めたのですが、今はすっかりSlackの虜です。連携サービスやチャンネルの運用を駆使して&lt;span style=&quot;color: #F5A2A2&quot;&gt;「社内のコミュニケーション全てをSlackで完結させる」&lt;/span&gt;と考えはじめたら、もうワクワクの極みです。&lt;br&gt;
そして就活生である身としては、Slackを全社的に有効活用させて&lt;b&gt;「はい！私は、インターン先の企業において、社内コミュニケーションの活性化に尽力しました！」&lt;/b&gt;的なことを言えるようになりたいものです。&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>Hinemos5.0.1移行記（その１：理想と現実の葛藤）</title>
            <link>http://tech.uzabase.com/entry/2016/03/11/155758</link>
            <description>&lt;p&gt;ユーザベース インフラチームの小林です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.uzabase.com/entry/2016/02/18/165541&quot;&gt;前回の記事&lt;/a&gt;から引き続き、今回からHinemos5.0.1への移行のお話です。&lt;/p&gt;

&lt;h2&gt;が、その前に1箇所訂正があります&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.uzabase.com/entry/2016/02/18/165541&quot;&gt;前回のブログで書いた&lt;/a&gt;ジョブスケジュール日跨ぎの件ですが、&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160226/20160226221222.jpg&quot; alt=&quot;f:id:manabu-kobayashi:20160226221222j:plain&quot; title=&quot;f:id:manabu-kobayashi:20160226221222j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;0:00～48:00に設定する事で、日跨ぎができました！&lt;br&gt;
先日Hinemosセミナーに出た際に、NTTデータさんに教えてもらいました。ありがとうございます。&lt;br&gt;
（けれど、日付の指定が年・月・日をいちいち選ばないといけないので、やっぱり不便です。
日付選択を、カレンダーから選択できる機能もつけてしてほしい・・・と思ってます。）
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;移行の流れ&lt;/h2&gt;

&lt;p&gt;さて、話を本題に。
&lt;br&gt;
弊社のHinemos環境をバージョンアップするにあたり、おおざっぱに以下の流れで行いました。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Hinemos5Managerを新規構築 、動作検証&lt;/li&gt;
&lt;li&gt;Hinemos3のデータをHinemos5に移行&lt;/li&gt;
&lt;li&gt;Hinemos3からHinemos5への順次切り替え&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;（正確にはHinemos3.1.2とHinemos5.0.1ですが、省略します。）&lt;/p&gt;

&lt;h2&gt;では、動作検証の話&lt;/h2&gt;

&lt;p&gt;新規構築は、マニュアル通りに行えば特に問題はありません。
動作検証においては、Hinemos3ではあまり高度な機能を使っていなかったこともあり、&lt;br&gt;
ジョブスケジューラとして、以下のような基本的な部分だけの検証で十分でした。(新機能は移行後に順次追加。)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;指定した通りにコマンド実行ができるか&lt;/li&gt;
&lt;li&gt;きちんと先行条件が効くか&lt;/li&gt;
&lt;li&gt;スケジューラが機能するか&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;上の部分について全然問題はなかったのですが、Hinemos3と違うところがあったので、思いついた部分を列挙します。&lt;br&gt;
&lt;br&gt;
&lt;b&gt;先行条件が自動で変わって便利！&lt;/b&gt;&lt;br&gt;
Himemos3の時、ジョブIDを変更したいと思っても、後続のジョブの先行条件も変更しなければならず、すごく億劫でした。&lt;br&gt;
ところが、今回のバージョンアップで試してみたところ、下記のようにジョブIDを変更すると、それに紐付く後続ジョブの先行条件が自動で変わってくれます！&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160229/20160229170138.jpg&quot; alt=&quot;f:id:manabu-kobayashi:20160229170138j:plain&quot; title=&quot;f:id:manabu-kobayashi:20160229170138j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br&gt;
&lt;b&gt;デフォルトのチェックが余計？&lt;/b&gt;&lt;br&gt;
新規ジョブ作成時、デフォルトで【条件を満たさなければ終了する】にチェックが入っているのですが、これにチェックが入っていると、前のジョブが異常終了した際などに終了してしまうので、弊社の環境では不便でした。&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160229/20160229170136.jpg&quot; alt=&quot;f:id:manabu-kobayashi:20160229170136j:plain&quot; title=&quot;f:id:manabu-kobayashi:20160229170136j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;また、&lt;b&gt;ジョブをコピーして追加したい時に、うまくコピーができる場合と、できない場合（実行コマンド等が空になる）があるので、その謎を解きたいと思ってます。&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;データ移行は、&lt;A Href=&quot;http://atomitech.jp/&quot;&gt;アトミテック&lt;/A&gt;さんに依頼&lt;/h2&gt;

&lt;p&gt;次に、2点目の「Hinemos3のデータをHinemos5に移行」では、弊社の環境でノード数は約70、ジョブの登録数は約3000とありました。
これを人力で、ミスなく再設定する自信がない・・・&lt;br&gt;
という事で、Hinemosのデータ変換は、Hinemosソリューションパートナーの&lt;A Href=&quot;http://atomitech.jp/&quot;&gt;アトミテック&lt;/A&gt;さんに依頼をさせていただきました。
今回はデータの変換だけではなく、Hinemos5移行後のサポートも含めて契約をさせていただき、
後々それが大きな助けとなりました。&lt;/p&gt;

&lt;p&gt;ちなみに、アトミテックさんは、&lt;a href=&quot;http://atomitech.jp/hinemos/blog/:title&quot;&gt;ブログ&lt;/a&gt;でHinemosの情報発信をしており、いろいろな機能の検証をされてます。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Hinemos3-&gt;5へのデータ変換は、アトミテックさんにお願いしたことで、
弊社側での残作業は3つ目の「Hinemos3からHinemos5への順次切り替え」になります。&lt;/p&gt;

&lt;h2&gt;目指す移行方法&lt;/h2&gt;

&lt;p&gt;「順次切り替え」と書かせていただきましたが、
以下の要因から、一括切り替えではなく、順次確認をしながらの切り替えが可能でした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hinemos3とHinemos5のエージェントは同居可能(Windows環境は除く)&lt;/li&gt;
&lt;li&gt;ジョブの組み方を単純にしているため、機能検証をする項目が少ない&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;後者について、もう少し詳しく説明します。&lt;br&gt;
一般的なジョブの組み方としては、以下のようにジョブネット間を先行条件で繋ぐことが多いと思います。（Hinemosに限らず）&lt;br&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160227/20160227013446.jpg&quot; alt=&quot;f:id:manabu-kobayashi:20160227013446j:plain&quot; title=&quot;f:id:manabu-kobayashi:20160227013446j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
ところが、弊社環境では、ジョブネット間の連携において、先行条件で繋いでいませんでした。
どういうことかというと、各ジョブネットの最後にファイルを作成させて、
次のジョブは、そのファイルがあると動くようにしており、ファイルの作成・監視もshellで動かしています。
こんな感じです。
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160227/20160227013915.jpg&quot; alt=&quot;f:id:manabu-kobayashi:20160227013915j:plain&quot; title=&quot;f:id:manabu-kobayashi:20160227013915j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;このおかげで、こんなことが可能になります。
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160227/20160227013500.jpg&quot; alt=&quot;f:id:manabu-kobayashi:20160227013500j:plain&quot; title=&quot;f:id:manabu-kobayashi:20160227013500j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;こうする事で、&lt;span style=&quot;color: #ff5252&quot;&gt;&lt;b&gt;一度に全部を切り替えるのではなく、ジョブネット一つずつの動作確認をしながら切り替えができるので、
スケジュールに余裕を持たせた移行が可能な状況でした。
&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;と思ったら単純にはAgentが同居できなかったよ！&lt;/h2&gt;

&lt;p&gt;Agentで使うJavaをマニュアルから抜粋すると、&lt;/p&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt; Hinemosエージェントを利用する場合
 以下のいずれかのopenjdkをインストールしてください。
   java-1.7.0-openjdk
   java-1.6.0-openjdk
&lt;/pre&gt;


&lt;p&gt;という事になっているのですが、弊社ではOracleJDK1.8を使ってました。&lt;br&gt;
Agentにいれるために、既存のサービスに影響が出そうなことをしたくない。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;そしてもう一つ。
インストールディレクトリ
/opt/hinemos
って、バージョンが違ってもインストール先が一緒だということ。&lt;br&gt;
（rpmコマンドでのインストールなので、オプションを付ければ変更もできるかもしれませんが、デフォルトはこのまま）&lt;br&gt;
&lt;br&gt;
つまり、異なるバージョンが同居できるといっても、インストール先をデフォルトから変更をしないといけないのです。&lt;/p&gt;

&lt;h2&gt;状況の整理&lt;/h2&gt;

&lt;p&gt;状況を整理すると、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Agent用にサポート対象バージョンのOpenJDKを入れるか、OracleJDK1.8を使い続けるか。&lt;/li&gt;
&lt;li&gt;Hinemos3とHinemos5のAgentが同居できるといっても、どちらかのインストールディレクトリを変えないといけない。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;という問題にぶつかりました。&lt;/p&gt;

&lt;p&gt;前者ですが、当初は簡単に考えていて、
OpenJDKのバイナリファイルをダウンロードして、Agentのインストールディレクトリに展開をすればいいのでは、と思っていましたが、
&lt;a href=&quot;http://openjdk.java.net/&quot;&gt;http://openjdk.java.net/&lt;/a&gt;をみると、yumからしかインストールができないようです。
yumでインストールした場合、万が一環境変数に変更があったりすると、既存のジョブに影響が出てしまう。
うーん、困った。&lt;/p&gt;

&lt;p&gt;そこで、後者。&lt;br&gt;
新規でインストールをするHinemos5のAgentのインストールディレクトリを変える&lt;br&gt;
or&lt;br&gt;
既存サービスで利用をしているHinemos3のAgentのインストールディレクトリを変える&lt;br&gt;
&lt;br&gt;
という２択ですが、これから使う方を大事にしたいと思い、Hinemos3の方を変えることにしました。&lt;/p&gt;

&lt;p&gt;ここで登場をするのが、やはり&lt;A Href=&quot;http://atomitech.jp/&quot;&gt;アトミテック&lt;/A&gt;さんなのでした。
意外と長くなったので次回へ続く。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;新機能のジョブのリトライ間隔の検証&lt;/h2&gt;

&lt;p&gt;ちょっと話題を変えまして、小ネタを一つ。&lt;br&gt;
&lt;br&gt;
ジョブのリトライ機能が追加されましたが、&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;リトライ間隔ってどれくらいなんだろう？&lt;/li&gt;
&lt;li&gt;それは変更ができるか？&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;というのが気になり、検証をしてみました。
管理者マニュアルには、他のリトライに関する説明はあったのですが、上の点については書いてないんだもの。。。。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;では、検証開始。&lt;br&gt;&lt;/p&gt;

&lt;p&gt;1．エラーになるジョブを作る
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160304/20160304212735.png&quot; alt=&quot;f:id:manabu-kobayashi:20160304212735p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160304212735p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br&gt;
2．あたりまえだけどすぐ終わる。
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160304/20160304210055.png&quot; alt=&quot;f:id:manabu-kobayashi:20160304210055p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160304210055p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
3．リトライ回数を2で設定してみたら、落ちるまで20秒かかった。
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160304/20160304210103.png&quot; alt=&quot;f:id:manabu-kobayashi:20160304210103p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160304210103p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
4．ソースを見てみた。&lt;br&gt;
というか、retryって言葉でgrepをかけてみて探してみた。そして、下の情報にたどり着く。&lt;br&gt;
どうやら、「job.retry.interval」という値で管理ができる。デフォルトは10*1000で、実際は10秒なので、msで設定しているっぽい。
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160304/20160304210111.png&quot; alt=&quot;f:id:manabu-kobayashi:20160304210111p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160304210111p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
5．プロパティ画面で、job.retry.intervalを60000で設定してみた。
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160304/20160304210115.png&quot; alt=&quot;f:id:manabu-kobayashi:20160304210115p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160304210115p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
6．ちゃんと2分伸びた！
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160304/20160304210125.png&quot; alt=&quot;f:id:manabu-kobayashi:20160304210125p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160304210125p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;
&lt;br&gt;
というわけで、&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;リトライ間隔のデフォルトは10秒&lt;/li&gt;
&lt;li&gt;job.retry.intervalで変更可能&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;というお話でした。
&lt;br&gt;&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>RxJava + Vert.x + jOOλ で Microservice 的な何かを作ってみた</title>
            <link>http://tech.uzabase.com/entry/2016/03/08/140142</link>
            <description>&lt;p&gt;技術チームの竹内(@chimerast)です。&lt;/p&gt;

&lt;p&gt;先日、&lt;a href=&quot;http://connpass.com/event/25532/&quot;&gt;Rx Ja Night 2016 #1&lt;/a&gt;という勉強会で、「RxJava + Vert.x + jOOλ で Microservice 的な何かを作ってみた」という題でLTしてきたので内容を少し書いてみようと思います。&lt;/p&gt;

&lt;p&gt;当日は自分以外基本Android勢の発表で、サーバサイドの自分にとっては、とてもアウェイな雰囲気でしたがめげずに発表してきました。RxJavaっていうとサーバサイドでは普通は使う機会がないですからね。&lt;/p&gt;

&lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;2745f52212ba4e678b9d37f172c9ebdb&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;


&lt;h2&gt;今回作ったものとその問題点&lt;/h2&gt;

&lt;p&gt;ブラウザでチャートを描画するための元データとなるJSONを返すREST APIを作りました。&lt;/p&gt;

&lt;p&gt;現在UZABASEではマイクロサービスアーキテクチャ的な何かのように、複数のREST APIを提供するサービスをぽこぽこ立ち上げており、その中の一つという位置づけです。&lt;/p&gt;

&lt;p&gt;今回作ったChart APIの裏では、企業情報を扱う「Companies API」、統計情報を扱う「Stats API」、チャートそれぞれの線のデータ指定情報を管理する「Media API」という3つのAPIが動いています。これらにリクエストを投げて得たデータを元に最終的なチャートのJSONを構築します。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/c/chimerast/20160227/20160227154832.jpg&quot; alt=&quot;f:id:chimerast:20160227154832j:plain&quot; title=&quot;f:id:chimerast:20160227154832j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;今回作る前から問題点として上がっていたのは、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chart APIだけがAWS上に配置され、それ以外がオンプレのデータセンター上にありデータセンター間通信となってしまうこと&lt;/li&gt;
&lt;li&gt;最終的なレスポンスを返すまでに複数回（多いときには20回以上）バックエンドのAPIにリクエストを投げる必要があるということ&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;という二点です。&lt;/p&gt;

&lt;p&gt;この状態で最速でレスポンスを返すためには、並列でバックエンドのAPIにリクエストを投げる必要がありますが、それを普通にブロッキングI/Oでやろうとすると、Chart APIへの1リクエストが10スレッド以上立ち上げてバックエンドAPIの返りを待つ必要があるという残念な状態になってしまします。&lt;/p&gt;

&lt;h2&gt;使ったもの&lt;/h2&gt;

&lt;h3&gt;Vert.x &lt;a href=&quot;http://vertx.io/&quot;&gt;http://vertx.io/&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Nettyの上に作られ、ノンブロッキングI/Oで通信を行う事のできる高レベルAPI群です。サブプロジェクトがたくさんありDBとの通信を行うことの出来るモジュールなんかもあります。&lt;/p&gt;

&lt;p&gt;これのサブプロジェクトの一つである、Vert.x-WebをつかってRESTなAPIをつくりつつ、バックエンドAPIに対して１スレッドからノンブロッキングで複数リクエストを投げるみたいな使い方をしました。&lt;/p&gt;

&lt;p&gt;Vert.xの問題点として、全てがコールバックで返る非同期APIなため、例えば単純なDBのSELECT&amp;amp;UPDATEをするだけでも何段ものインデントが必要な書き方になります。メソッドを分けるという単純な解決法もありますが宣言的に書けるところは宣言的に書きたいです。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/c/chimerast/20160227/20160227160730.jpg&quot; alt=&quot;f:id:chimerast:20160227160730j:plain&quot; title=&quot;f:id:chimerast:20160227160730j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;これを解決するためにRxJavaを使います。&lt;/p&gt;

&lt;h3&gt;RxJava &lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot;&gt;https://github.com/ReactiveX/RxJava&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;RxJavaは、Streamとしての側面とPromiseとしての側面を併せ持ったライブラリです。いろいろな使い方ができ自分も全てのメソッドの使い道をうまく把握出来ていません。Android勢はJava8がまだ使えないためStreamの代わりとして使っていたり、非同期処理も多いのでPromiseとしての使い方をしたり色々しているようです。&lt;/p&gt;

&lt;p&gt;今回のサーバサイドの開発では、Promiseとしての側面しか使っていません。コールバック地獄から抜け出すため(flatMap)、そして、複数の非同期処理をひとまとめにするため(zip)に主に使っています。&lt;/p&gt;

&lt;p&gt;最終的には組み合わせて以下みたいなコードになっています。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/c/chimerast/20160229/20160229075644.jpg&quot; alt=&quot;f:id:chimerast:20160229075644j:plain&quot; title=&quot;f:id:chimerast:20160229075644j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;感想&lt;/h2&gt;

&lt;p&gt;あまり長い文を書いても読みづらくなるだけなので、あとの細かい所はスライドを見てみてください。&lt;/p&gt;

&lt;p&gt;Vert.xは巨大なモノリシックなサービスを作るのにはあまり向いていない気がしていますが、今回のように小さいサービスを作るには軽くて向いていると思えました。特に並列でバックエンドのAPIに丸投げして待つみたいなものを作る時にはスレッドの数を考える必要が無いという大きな利点があると思います。&lt;/p&gt;

&lt;p&gt;RxJavaは非同期処理を気持ちよく書けるライブラリです。Vert.x、RxJavaともにJava8に対応しているためラムダ式でがしがし書くことができます。&lt;/p&gt;

&lt;h2&gt;エンジニア募集&lt;/h2&gt;

&lt;p&gt;株式会社ユーザベース、および、株式会社ニューズピックスではエンジニアを募集しています。ご興味があればお気軽にご連絡ください。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.wantedly.com%2Fcompanies%2Fuzabase-inc%2Fprojects&quot; title=&quot;株式会社ユーザベースの採用/求人一覧 - Wantedly&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/companies/uzabase-inc/projects&quot;&gt;www.wantedly.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.wantedly.com%2Fcompanies%2Fnewspicks%2Fprojects&quot; title=&quot;株式会社ニューズピックスの採用/求人一覧 - Wantedly&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/companies/newspicks/projects&quot;&gt;www.wantedly.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>Hinemos3.1.2→Hinemos5.0.1に移行しました</title>
            <link>http://tech.uzabase.com/entry/2016/02/18/165541</link>
            <description>&lt;p&gt;&lt;a href=&quot;http://tech.uzabase.com/entry/2015/01/29/102935&quot;&gt;前回の投稿&lt;/a&gt;から約1年と、だいぶ時間が空いてしまいました。&lt;br&gt;
ご無沙汰しておりますユーザベース インフラチームの小林です。&lt;/p&gt;

&lt;p&gt;当時海外留学していたメンバーも無事帰国し、新メンバーも増え、インフラチームはだいぶにぎやかになっております。&lt;/p&gt;

&lt;h2&gt;Hinemos3.1.2→Hinemos5.0.1に移行！&lt;/h2&gt;

&lt;p&gt;さて、本題なのですが、昨年5月にHinemos5が発表されました。&lt;br&gt;
すぐに導入したかったのですが、昨年9月の5.0.1の公開を待って、満を持してHinemos3.1.2→Hinemos5.0.1への移行を行いました。
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160215/20160215231044.png&quot; alt=&quot;f:id:manabu-kobayashi:20160215231044p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160215231044p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;br&gt;&lt;br&gt;&lt;br&gt;
この移行時の顛末については、次回にさせていただくとして、今回はHinemos5にしてみて、実際どうだったかというところを紹介させていただきます。&lt;/p&gt;

&lt;h2&gt;Hinemos5.0.1で大幅な運用改善を実現！&lt;/h2&gt;

&lt;p&gt;おさらいですが、Hinemos3の運用での困っていた点は以下の通りです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hinemosエージェントが、Windows8だと動かない&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;⇒そもそもWindows対応のみで、Mac作業者が作業できない。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;画面を開くの重い、ジョブの登録はもっと重い&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;⇒あまりに重くて、常時PC開きっぱなし。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ジョブ管理ツールとしては問題なく動いてくれていたのですが、パフォーマンス面でどうしても運用メンバーの負荷が上がっている状態でした。&lt;/p&gt;

&lt;p&gt;では、これらが、Hinemos5になって解決されたかというと、、&lt;br&gt;
&lt;span style=&quot;color: #000000&quot;&gt;&lt;b&gt;はい、ばっちりです！&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
Webクライアントについては、下のブログで詳しく紹介されているのでそちらをご確認いただきたいですが、リッチクライアントと遜色ない仕上がりで、&lt;br&gt;
&lt;b&gt;ようやくジョブ監視のWindows縛りから解放されたのであります！&lt;/b&gt;&lt;br&gt;
&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=http%3A%2F%2Ftech-sketch.jp%2F2015%2F09%2Fhinemos5-0_part1.html&quot; title=&quot;Hinemos5.0新機能紹介Part1「Webクライアント」 | Tech-Sketch&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://tech-sketch.jp/2015/09/hinemos5-0_part1.html&quot;&gt;tech-sketch.jp&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
次に、画面が開くまで時間ですが、僕の実測ベースで、&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hinemos3の時

&lt;ul&gt;
&lt;li&gt;ログインするまで：2分7秒（そのあとに、ジョブ履歴の画面を開くのにまた待ち時間）&lt;/li&gt;
&lt;li&gt;ジョブの登録時の待ち時間：2分30秒&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Hinemos5の時

&lt;ul&gt;
&lt;li&gt;ログインするまで：30秒（更にジョブ履歴の画面まで開いてる！！）&lt;/li&gt;
&lt;li&gt;ジョブの登録時の待ち時間：10秒位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;と大幅改善されていて、&lt;b&gt;常時画面を開いている状態からも解放されました。&lt;/b&gt;&lt;br&gt;
毎日Hinemos開いていたので、待ち時間だけで1年で約10時間の削減効果です(笑&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
それ以外にも、&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ジョブのスケジュール予定がわかるようになった&lt;/b&gt;り、&lt;br&gt;（新規でスケジュールしたときに想定通り動くか確認できて超便利！）
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160217/20160217225235.png&quot; alt=&quot;f:id:manabu-kobayashi:20160217225235p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160217225235p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;祝日のパターンなどを複数のカレンダで共有できた&lt;/b&gt;り（デフォルトで祝日入ってるし！）&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;ジョブのエラー時にSlackに通知出るようにした&lt;/b&gt;り
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160215/20160215215536.png&quot; alt=&quot;f:id:manabu-kobayashi:20160215215536p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160215215536p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;と、いろいろと運用負荷が下がっています。（通知の機能は、Hinemos3からあった機能を使ってます。）&lt;/p&gt;

&lt;h2&gt;Hinemos5.0.1のちょっといけていない点&lt;/h2&gt;

&lt;p&gt;で、いいことばかりでもなく、ちょっといけてない点もあったりしてます。&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hinemos5.0.1でも若干不安定。

&lt;ul&gt;
&lt;li&gt;→なんかメモリリークしてそうな感じ。月に何回かサービス再起動してます。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ジョブスケジュールを臨時で停止したい時、日跨ぎしたいとき不便。（例えば、今日の12時から、明日の12時まで止めたい時とかは2度登録必要。）&lt;br&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160215/20160215225823.png&quot; alt=&quot;f:id:manabu-kobayashi:20160215225823p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160215225823p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;ジョブ履歴画面から落ちたジョブのコマンド確認したい時に、グレーアウトされてて見れない。&lt;br&gt;（下の例だと短いコマンドですが、長いコマンドだと途中で切れる。）&lt;br&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/m/manabu-kobayashi/20160215/20160215225116.png&quot; alt=&quot;f:id:manabu-kobayashi:20160215225116p:plain&quot; title=&quot;f:id:manabu-kobayashi:20160215225116p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;下の２つは、Hinemos3とHinemos5で操作が違って慣れてないだけの気もしますが・・・&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;HInemos5.0.0→5.0.1へのアップグレード手順&lt;/h2&gt;

&lt;p&gt;最後に、開発環境にあった、5.0.0環境を5.0.1にアップグレードしてみましたので、簡単に手順を載せておきます。
（そんな難しいことはしてませんが。。）&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;1. DBのバックアップを取得&lt;/h3&gt;

&lt;p&gt;念のため、jvmを停止後バックアップを取得します。&lt;/p&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# /opt/hinemos/bin/jvm_stop.sh&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# /opt/hinemos/sbin/mng/hinemos_backup.sh&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# /opt/hinemos/bin/jvm_start.sh&lt;/span&gt;
&lt;/pre&gt;


&lt;h3&gt;2. それぞれサービス停止&lt;/h3&gt;

&lt;p&gt;弊社環境では、ManagerとWebクライアントが同居しています。&lt;/p&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# service hinemos_web stop&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# service hinemos_manager stop&lt;/span&gt;
&lt;/pre&gt;


&lt;h3&gt;3. さらに念をおしてHinemosマネージャver.5.0.0のバックアップを取得&lt;/h3&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# cp -rp /opt/hinemos /tmp/hinemos_500_backup&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# cp -rp /opt/hinemos_web /tmp/hinemos_web_500_backup&lt;/span&gt;
&lt;/pre&gt;


&lt;h3&gt;4. rpmコマンドでUpdate&lt;/h3&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# rpm -Uvh hinemos-manager-5.0.1-1.el7.x86_64.rpm&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# rpm -Uvh hinemos-web-5.0.1-1.el7.x86_64.rpm&lt;/span&gt;
&lt;/pre&gt;


&lt;h3&gt;5. serviceファイルをリロードする&lt;/h3&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# systemctl daemon-reload&lt;/span&gt;
&lt;/pre&gt;


&lt;h3&gt;6. それぞれサービス起動&lt;/h3&gt;

&lt;pre class=&quot;code lang-sh&quot; data-lang=&quot;sh&quot; data-unlink&gt;&lt;span class=&quot;synComment&quot;&gt;# service hinemos_manager start&lt;/span&gt;
&lt;span class=&quot;synComment&quot;&gt;# service hinemos_web start&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;って、この記事準備してたら、2016/2/15にHinemos5.0.2が公開されたので、さっそくもう一度試す羽目に。。&lt;/p&gt;

&lt;p&gt;Hinemos5への移行記は今後も続きますので楽しみにお待ちください！&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>えびスタ！#3 特別編「ウェブ版リニューアルの裏側」を開催します</title>
            <link>http://tech.uzabase.com/entry/2015/08/07/123741</link>
            <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150807/20150807105606.png&quot; alt=&quot;f:id:uzabase:20150807105606p:plain&quot; title=&quot;f:id:uzabase:20150807105606p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;皆さまこんにちは。&lt;/p&gt;

&lt;p&gt;恵比寿のイケてるスタートアップが集まるエンジニア向けの技術勉強会「えびスタ！」の第3回を開催します。
第3回は特別編として1社での単独開催です。先日リニューアルしたばかりのウェブ版の開発の裏側についてお届けします。&lt;/p&gt;

&lt;p&gt;もちろん今回もLT枠を用意しています。自社の技術についてアピールしたいという方はぜひLT枠でご参加ください！懇親会ではエビスビールとピザも用意してお待ちしています！&lt;/p&gt;

&lt;p&gt;エビスビールを飲みながら、テクノロジーとデザインの未来について語り合いましょう！&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=http%3A%2F%2Febista.connpass.com%2Fevent%2F18581%2F&quot; title=&quot;えびスタ！#3 特別編「ウェブ版リニューアルの裏側」 (2015/08/24 19:00〜)&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://ebista.connpass.com/event/18581/&quot;&gt;えびスタ！#3 特別編「ウェブ版リニューアルの裏側」 (2015/08/24 19:00〜)&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://ebista.connpass.com/event/18581/&quot;&gt;ebista.connpass.com&lt;/a&gt;&lt;/cite&gt;
&lt;iframe src=&quot;http://blog.newspicks.com/embed/2015web_renewal&quot; title=&quot; ウェブ版リニューアルのお知らせ -  Blog&quot; class=&quot;embed-card embed-blogcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://blog.newspicks.com/entry/2015web_renewal&quot;&gt; ウェブ版リニューアルのお知らせ -  Blog&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://blog.newspicks.com/entry/2015web_renewal&quot;&gt;blog.newspicks.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h2&gt;イベント情報&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;日時：8/24（月）19:00（18:30 開場）&lt;/li&gt;
&lt;li&gt;場所：株式会社ニューズピックス（東京都渋谷区恵比寿 1-18-14 恵比寿ファーストスクエア 10 階）&lt;/li&gt;
&lt;/ul&gt;


&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left;&quot;&gt;時間&lt;/th&gt;
&lt;th style=&quot;text-align:left;&quot;&gt;発表者&lt;/th&gt;
&lt;th style=&quot;text-align:left;&quot;&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;18:30 ~ 19:00&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;開場&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;19:00&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;乾杯（エビスビールで）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;19:00 ~ 19:30&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;甲斐 琢巳（ エクスペリエンスエディター）&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;が目指す新しいニュース体験について&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;19:30 ~ 20:00&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;戸辺 淳一郎（ ウェブリニューアルプロジェクトリーダー）&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;ウェブリニューアルを成功させたチーム体制「Holacracy（ホラクラシー）」、およびエンジニアとデザイナーの協業について&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;20:00 ~ 20:20&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;発表者募集中！&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;LTタイム（5分×4人）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;20:20 - 21:30&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align:left;&quot;&gt;懇親会（エビスビールとピザを用意しています！）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=http%3A%2F%2Febista.connpass.com%2Fevent%2F18581%2F&quot; title=&quot;えびスタ！#3 特別編「ウェブ版リニューアルの裏側」 (2015/08/24 19:00〜)&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://ebista.connpass.com/event/18581/&quot;&gt;えびスタ！#3 特別編「ウェブ版リニューアルの裏側」 (2015/08/24 19:00〜)&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://ebista.connpass.com/event/18581/&quot;&gt;ebista.connpass.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>「日本の夏は高温化しているか？」について可視化して確かめてみた。</title>
            <link>http://tech.uzabase.com/entry/2015/08/05/185131</link>
            <description>&lt;p&gt;技術チーム竹内(@&lt;a class=&quot;twitter-user-screen-name&quot; href=&quot;http://twitter.com/chimerast&quot;&gt;chimerast&lt;/a&gt;)です。&lt;/p&gt;

&lt;p&gt;最近暑いですね。東京では猛暑日の連続が新記録だそうです。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=http%3A%2F%2Fwww.tenki.jp%2Fforecaster%2Fdiary%2Fdeskpart%2F2015%2F08%2F05%2F29061-summary.html&quot; title=&quot;猛暑日　東京新記録　仙台25年ぶり(日直予報士) - tenki.jp&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://www.tenki.jp/forecaster/diary/deskpart/2015/08/05/29061-summary.html&quot;&gt;猛暑日　東京新記録　仙台25年ぶり(日直予報士) - tenki.jp&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://www.tenki.jp/forecaster/diary/deskpart/2015/08/05/29061-summary.html&quot;&gt;www.tenki.jp&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;Twitter上でも最近暑くなったことについて、データを見つつ色々話題になっていたようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://togetter.com/li/856042&quot;&gt;&amp;#x65E5;&amp;#x672C;&amp;#x306E;&amp;#x590F;&amp;#x306F;&amp;#x9AD8;&amp;#x6E29;&amp;#x5316;&amp;#x3057;&amp;#x3066;&amp;#x308B;&amp;#x304B;&amp;#xFF1F; - Togetter&amp;#x307E;&amp;#x3068;&amp;#x3081;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://togetter.com/li/855995&quot;&gt;&amp;#xFF13;&amp;#xFF10;&amp;#x5E74;&amp;#x524D;&amp;#x3068;&amp;#x6BD4;&amp;#x3079;&amp;#x6691;&amp;#x304F;&amp;#x306A;&amp;#x3063;&amp;#x305F;&amp;#x3068;&amp;#x805E;&amp;#x304D;&amp;#x590F;&amp;#x306E;&amp;#x6C17;&amp;#x6E29;&amp;#x30C7;&amp;#x30FC;&amp;#x30BF;&amp;#x3092;&amp;#x30B0;&amp;#x30E9;&amp;#x30D5;&amp;#x306B;&amp;#x3057;&amp;#x3066;&amp;#x307F;&amp;#x305F;&amp;rarr;&amp;#x69D8;&amp;#x3005;&amp;#x306A;&amp;#x610F;&amp;#x898B;&amp;#x96C6;&amp;#x307E;&amp;#x308B; - Togetter&amp;#x307E;&amp;#x3068;&amp;#x3081;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;で、せっかくなんで自分でも最近どうなっているのか確かめてみました。&lt;/p&gt;

&lt;h3&gt;使ったデータ&lt;/h3&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=http%3A%2F%2Fwww.data.jma.go.jp%2Fgmd%2Frisk%2Fobsdl%2F&quot; title=&quot;気象庁|過去の気象データ・ダウンロード&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://www.data.jma.go.jp/gmd/risk/obsdl/&quot;&gt;気象庁|過去の気象データ・ダウンロード&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://www.data.jma.go.jp/gmd/risk/obsdl/&quot;&gt;www.data.jma.go.jp&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;気象庁から東京都の1986年1月から2015年8月4日時点までの月次データを取得してきてみました。&lt;/p&gt;

&lt;p&gt;項目は、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;平均気温(℃)&lt;/li&gt;
&lt;li&gt;降水量の合計(mm)&lt;/li&gt;
&lt;li&gt;平均湿度(％)&lt;/li&gt;
&lt;li&gt;日照時間(時間)&lt;/li&gt;
&lt;li&gt;日最高気温の平均(℃)&lt;/li&gt;
&lt;li&gt;日最低気温の平均(℃)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;をとりあえずとってきてみました。&lt;/p&gt;

&lt;h3&gt;使ったもの&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://e2d3.org/ja/&quot;&gt;E2D3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dc-js.github.io/dc.js/&quot;&gt;dc.js - Dimensional Charting Javascript Library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Excelでセルにデータを入力するとモダンな感じにビジュアライズ出来るE2D3で、データを多角的に見られるdc.jsを使える「dcjs-example」というテンプレートを使って(作って)可視化してみました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://e2d3.org/ja/&quot;&gt;E2D3&lt;/a&gt;は、Excelから気軽にデータビジュアライズできるようにしようと、現在絶賛開発中のオープンソースソフトウェアです。Excel2013以降もしくは、Excel OnlineのOfficeストアから探せるので使ってみてください。&lt;/p&gt;

&lt;h3&gt;できたもの&lt;/h3&gt;

&lt;p&gt;こんな感じです(残念ですが、スマホでは表示されません)。マウスで下のグラフを選択すると、選択した範囲でデータがフィルタリングされます。&lt;/p&gt;

&lt;p&gt;下の方の青いグラフの縦軸はデータの個数です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://s.e2d3.org/e5f3bff/be9fe63b4e1b14e8c644d62e67e9ba2e&quot; target=&quot;_blank&quot;&gt;別画面で大きく表示する&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;画像ではなくマウスクリックで動かせますよ！&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
if (document.getElementsByTagName(&quot;html&quot;)[0].getAttribute(&quot;data-globalheader-type&quot;) === 'pc') {
  document.open();
  document.write('&lt;iframe src=&quot;https://s.e2d3.org/e5f3bff/be9fe63b4e1b14e8c644d62e67e9ba2e&quot; width=&quot;100%&quot; height=&quot;1250&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;');
  documnet.close();
}
&lt;/script&gt;


&lt;h3&gt;考察&lt;/h3&gt;

&lt;p&gt;実際に自分でいろいろ触って見てもらうのが一番ですが、例えば、8月の最低気温の平均を25度以上でフィルタリングしてみると明らかに近年(緑色)の年だけが出てきてしまいますね。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/c/chimerast/20150805/20150805174130.png&quot; alt=&quot;f:id:chimerast:20150805174130p:plain&quot; title=&quot;f:id:chimerast:20150805174130p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;まとめ&lt;/h3&gt;

&lt;p&gt;データを触って見ると色々気づきがあります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://e2d3.org/ja/&quot;&gt;E2D3&lt;/a&gt;を使うとExcelでデータを簡単に入れ替えてデータ可視化を行うことが出来ます(たぶん)。&lt;/p&gt;

&lt;p&gt;東京だけでなくいろんな地点のデータを入れてみると面白いと思います。&lt;/p&gt;

&lt;h3&gt;いろいろ&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.uzabase.com/&quot;&gt;株式会社ユーザベース&lt;/a&gt;では、企業・業界・統計データやニュース記事・コメント等データを大量に抱えています。そんなデータをなんとかしてみたいエンジニアを募集しています。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.wantedly.com%2Fcompanies%2Fuzabase-inc%2Fprojects&quot; title=&quot;株式会社ユーザベースの募集一覧 - Wantedly&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/companies/uzabase-inc/projects&quot;&gt;株式会社ユーザベースの募集一覧 - Wantedly&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/companies/uzabase-inc/projects&quot;&gt;www.wantedly.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;あと、OSSで開発している&lt;a href=&quot;http://e2d3.org/ja/&quot;&gt;E2D3&lt;/a&gt;プロジェクトでは、可視化テンプレートを作成してくれるエンジニアや、基盤システムを開発してくれるエンジニアを探しています。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fgithub.com%2Fe2d3%2Fe2d3&quot; title=&quot;e2d3/e2d3&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://github.com/e2d3/e2d3&quot;&gt;e2d3/e2d3&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://github.com/e2d3/e2d3&quot;&gt;github.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>ウェブサービスの品質保証をお弁当作りに例えたら</title>
            <link>http://tech.uzabase.com/entry/2015/07/02/200356</link>
            <description>&lt;p&gt;初めまして。QA（Quality Assurance）を担当しております、えがさ（仮名）と申します。&lt;br /&gt;
QAエンジニアとして、主にBtoC向けWebサービスサイトや、プリンタ、&lt;br /&gt;
携帯電話などのテスティングや、雑誌の原稿作成のお手伝いなどをしておりました。&lt;br /&gt;
ユーザベースに参加してからだいたい半年になります。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-size: 150%&quot;&gt;&lt;b&gt;SPEEDAの簡単な概要&lt;/b&gt;&lt;br /&gt;&lt;/span&gt;
&lt;br /&gt;
私は、SPEEDAのWebサイト部分がメインの担当ですが、SPEEDAとは。&lt;br /&gt;
一言で表すと、「企業情報などを多角的に取り出せるデータベース」です。&lt;br /&gt;
お客様がSPEEDAを活用して新たな価値を生み出すための&lt;br /&gt;
ベースを支えるのがミッションです。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-size: 150%&quot;&gt;&lt;b&gt;SPEEDAって・・・。&lt;/b&gt;&lt;br /&gt;&lt;/span&gt;
&lt;br /&gt;
このお仕事をして製品を触るうちに、私はあることを思いつきました。&lt;br /&gt;
SPEEDAって・・・まるでお弁当みたいだな、と。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150630/20150630113418.png&quot; alt=&quot;f:id:uzabase:20150630113418p:plain&quot; title=&quot;f:id:uzabase:20150630113418p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
&lt;span style=&quot;color: #00cc00&quot;&gt;
お客様にお出しするためのお弁当箱：インフラ　があり&lt;br /&gt;
お客様にコアバリューを提供するデータ：主食　があり&lt;br /&gt;
データをおいしく加工するためのおかず：Webサイト　があり。&lt;br /&gt;
&lt;/span&gt;
全部がそろって活用できる。&lt;br /&gt;
&lt;br /&gt;
しかしお弁当は温かいほうがよりおいしくいただけます。&lt;br /&gt;
ホットな情報には賞味期限もあります。&lt;br /&gt;
そのためにアジャイルでの開発が行われています。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-size: 150%&quot;&gt;&lt;b&gt;と　こ　ろ　が&lt;/b&gt;&lt;br /&gt;&lt;/span&gt;
&lt;br /&gt;
アジャイルのQAはウォーターフォールの開発とは&lt;br /&gt;
発想が真逆になることもあり。&lt;br /&gt;
最初は目が点になることも多々ありました。&lt;br /&gt;
&lt;br /&gt;
見る間にリリースされるスケジュール感。&lt;br /&gt;
クライテリアの基準。&lt;br /&gt;
&lt;br /&gt;
IEEE829?　ISO9001?&lt;br /&gt;
既存のモデルはアジャイルにそのまま適用できません。&lt;br /&gt;
&lt;br /&gt;
できればテストケースも使いまわしたい。&lt;br /&gt;
漏れなく効率よくまわしたい。&lt;br /&gt;
&lt;br /&gt;
しかし納期と品質という相反する要素をどうやって折り合いを付けるのか？&lt;br /&gt;
のんびりしていると冷めたおいしくないお弁当になってしまいます。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-size: 150%&quot;&gt;&lt;b&gt;残念なお弁当の一例&lt;/b&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150623/20150623124057.png&quot; alt=&quot;f:id:uzabase:20150623124057p:plain&quot; title=&quot;f:id:uzabase:20150623124057p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;ケンカでもしましたか？&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150623/20150623124258.png&quot; alt=&quot;f:id:uzabase:20150623124258p:plain&quot; title=&quot;f:id:uzabase:20150623124258p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;お弁当にする意味が・・・。&lt;br /&gt;
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150623/20150623124520.png&quot; alt=&quot;f:id:uzabase:20150623124520p:plain&quot; title=&quot;f:id:uzabase:20150623124520p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;ゼリーを弁当と言い張る弱さ。&lt;br /&gt;
&lt;br /&gt;
・・・こんなお弁当を出荷するわけにはいきません。&lt;br /&gt;
&lt;br /&gt;
そこで、まだ和書では少ないアジャイルQAの本や各種勉強会などで勉強を進めつつ&lt;br /&gt;
（KindlePCが日本でも使えるようになったので洋書の&lt;br /&gt;
　QA本が買いやすくなりました！これは嬉しい。）&lt;br /&gt;
既存のモデルをSPEEDA向けにアレンジして以下のセットを&lt;br /&gt;
作りおきすることにしました。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;span style=&quot;font-size: 150%&quot;&gt;&lt;b&gt;お弁当作り置き&lt;/b&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;span style=&quot;color: #286f2c&quot;&gt;基礎（下ごしらえ）&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;要求分析→既存製品でしたので簡素化しました。&lt;/li&gt;
&lt;li&gt;ユースケース&lt;/li&gt;
&lt;li&gt;機能分析&lt;/li&gt;
&lt;li&gt;問題分析（魚の骨）
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150623/20150623144912.png&quot; alt=&quot;f:id:uzabase:20150623144912p:plain&quot; title=&quot;f:id:uzabase:20150623144912p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;br /&gt;
SPEEDAの冷蔵庫です&lt;br /&gt;
&lt;br /&gt;
機能の影響範囲をチェックリストにしたがって見ていけば&lt;br /&gt;
基本的なテストケースまでができあがります。&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;br /&gt;
&lt;b&gt;&lt;span style=&quot;color: #286f2c&quot;&gt;案件毎のテストセット作成（おかずづくり）&lt;/span&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;基礎をベースに、プロジェクト毎のテスト要件定義は、&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;マインドマップ:テスト観点の洗い出し
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150623/20150623141643.png&quot; alt=&quot;f:id:uzabase:20150623141643p:plain&quot; title=&quot;f:id:uzabase:20150623141643p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;ブラウザのマインドマップ&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;ユースケース：テスト範囲・開発範囲、影響の見積もり&lt;/li&gt;
&lt;li&gt;シーケンス図：実務の考慮漏れ対策&lt;/li&gt;
&lt;li&gt;状態遷移図：シナリオテストのヒントにする&lt;/li&gt;
&lt;li&gt;デシジョンテーブル：パターン洗い出し&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;などを用意してテストセットに落としています。&lt;br /&gt;
どれも目新しいものではありませんが、&lt;br /&gt;
再利用もしやすく時間もかからず重宝しています。&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;&lt;span style=&quot;color: #286f2c&quot;&gt;盛り付け（テストラン）&lt;/span&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;テスト（お弁当を詰める）&lt;br /&gt;
　　UT：単体テスト&lt;br /&gt;
　　SIT：結合テスト　直交表やシナリオなど&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;体制（料理人の皆様）&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;こうして、温かいうちに召し上がっていただけるように&lt;br /&gt;
こつこつ資産化しています。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150623/20150623143617.png&quot; alt=&quot;f:id:uzabase:20150623143617p:plain&quot; title=&quot;f:id:uzabase:20150623143617p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;召し上がれ！&lt;br /&gt;
&lt;br /&gt;
お弁当QAを体験してみたいエンジニアの皆さん、おいでませ＾－＾&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;hatena-asin-detail&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4817192283/hatena-blog-22/&quot;&gt;&lt;img src=&quot;http://ecx.images-amazon.com/images/I/41VcxPXKoYL._SL160_.jpg&quot; class=&quot;hatena-asin-detail-image&quot; alt=&quot;ソフトウェアテストHAYST法入門 品質と生産性がアップする直交表の使い方&quot; title=&quot;ソフトウェアテストHAYST法入門 品質と生産性がアップする直交表の使い方&quot;&gt;&lt;/a&gt;&lt;div class=&quot;hatena-asin-detail-info&quot;&gt;&lt;p class=&quot;hatena-asin-detail-title&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4817192283/hatena-blog-22/&quot;&gt;ソフトウェアテストHAYST法入門 品質と生産性がアップする直交表の使い方&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;作者:&lt;/span&gt; 吉澤正孝/秋山浩一/仙石太郎&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;出版社/メーカー:&lt;/span&gt; 日科技連出版社&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;発売日:&lt;/span&gt; 2007/07/26&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;メディア:&lt;/span&gt; 単行本&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;購入&lt;/span&gt;: 3人 &lt;span class=&quot;hatena-asin-detail-label&quot;&gt;クリック&lt;/span&gt;: 86回&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/asin/4817192283/hatena-blog-22&quot; target=&quot;_blank&quot;&gt;この商品を含むブログ (20件) を見る&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;hatena-asin-detail-foot&quot;&gt;&lt;/div&gt;&lt;/div&gt; サイン本もってます:-D&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;hatena-asin-detail&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4048672347/hatena-blog-22/&quot;&gt;&lt;img src=&quot;http://ecx.images-amazon.com/images/I/51Vxllc4BBL._SL160_.jpg&quot; class=&quot;hatena-asin-detail-image&quot; alt=&quot;ペンとノートで発想を広げる“お絵描き”ノート術 マインドマップ(R)が本当に使いこなせる本 (アスキームック)&quot; title=&quot;ペンとノートで発想を広げる“お絵描き”ノート術 マインドマップ(R)が本当に使いこなせる本 (アスキームック)&quot;&gt;&lt;/a&gt;&lt;div class=&quot;hatena-asin-detail-info&quot;&gt;&lt;p class=&quot;hatena-asin-detail-title&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4048672347/hatena-blog-22/&quot;&gt;ペンとノートで発想を広げる“お絵描き”ノート術 マインドマップ(R)が本当に使いこなせる本 (アスキームック)&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;作者:&lt;/span&gt; 遠竹智寿子,月刊アスキー編集部,ブザン・ワールドワイド・ジャパン、ブザン教育協会&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;出版社/メーカー:&lt;/span&gt; アスキー・メディアワークス&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;発売日:&lt;/span&gt; 2008/06/30&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;メディア:&lt;/span&gt; ムック&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;購入&lt;/span&gt;: 40人 &lt;span class=&quot;hatena-asin-detail-label&quot;&gt;クリック&lt;/span&gt;: 957回&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/asin/4048672347/hatena-blog-22&quot; target=&quot;_blank&quot;&gt;この商品を含むブログ (66件) を見る&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;hatena-asin-detail-foot&quot;&gt;&lt;/div&gt;&lt;/div&gt;　さらっと読んですぐ使いこなしたい方に&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;hatena-asin-detail&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4798118443/hatena-blog-22/&quot;&gt;&lt;img src=&quot;http://ecx.images-amazon.com/images/I/51hcs7og2fL._SL160_.jpg&quot; class=&quot;hatena-asin-detail-image&quot; alt=&quot;ダイアグラム別UML徹底活用 第2版 (DB Magazine SELECTION)&quot; title=&quot;ダイアグラム別UML徹底活用 第2版 (DB Magazine SELECTION)&quot;&gt;&lt;/a&gt;&lt;div class=&quot;hatena-asin-detail-info&quot;&gt;&lt;p class=&quot;hatena-asin-detail-title&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4798118443/hatena-blog-22/&quot;&gt;ダイアグラム別UML徹底活用 第2版 (DB Magazine SELECTION)&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;作者:&lt;/span&gt; 井上樹&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;出版社/メーカー:&lt;/span&gt; 翔泳社&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;発売日:&lt;/span&gt; 2011/02/25&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;メディア:&lt;/span&gt; 大型本&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;購入&lt;/span&gt;: 1人 &lt;span class=&quot;hatena-asin-detail-label&quot;&gt;クリック&lt;/span&gt;: 5回&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/asin/4798118443/hatena-blog-22&quot; target=&quot;_blank&quot;&gt;この商品を含むブログ (2件) を見る&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;hatena-asin-detail-foot&quot;&gt;&lt;/div&gt;&lt;/div&gt;　Kindle版もあります&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>たのしいフォントえらび 〜 GoogleやDEAN &amp; DELUCA、SPEEDAの事例から 〜</title>
            <link>http://tech.uzabase.com/entry/2015/06/11/164718</link>
            <description>&lt;p&gt;こんにちは。ユーザベースのデザイナー、広田です。企業・業界情報サービス「SPEEDA」を担当しています。&lt;/p&gt;

&lt;p&gt;とうとう、ブログの順番が回ってきました。
UZABASE Tech Blogの記事ネタは、ユーザベースのエンジニアが一堂に集まる週一のミーティング、そこで話す持ち回りのライトニングトークが元になっています。もちろん、それがすべてではありませんが、記事を書く順番としてはそんな感じです。
そして、2月に入社した私にも、ライトニングトークの順番、すなわちブログを書く順番が回ってきたというわけです。&lt;/p&gt;

&lt;p&gt;テックミーティングの参加者は、当然ですが、エンジニアばかり。
なので、私にとってはチンプンカンプンのエンジニア用語が並ぶわけですが、そんな中で私が話せることってなんだろう？と（一応、真剣に）考えた結果、エンジニアにとっても身近であろうフォントについて話すことにしました。&lt;/p&gt;

&lt;p&gt;というのも、入社以来、ずっと気になっていたSPEEDAのロゴのルーツ。その答えを見つけた良いタイミングでもあったので。&lt;/p&gt;

&lt;p&gt;・・・と、ちょっと前置きが長くなってしまいましたが、テーマは「たのしいフォントえらび 〜 GoogleやDEAN &amp;amp; DELUCA、SPEEDAの事例から 〜」に決定しました。&lt;/p&gt;

&lt;h3&gt;目次&lt;/h3&gt;

&lt;p&gt;・&lt;a href=&quot;#section1&quot;&gt;SPEEDAのロゴのルーツ&lt;/a&gt;&lt;br&gt;
・&lt;a href=&quot;#section2&quot;&gt;SPEEDAのお仲間さがし&lt;/a&gt;&lt;br&gt;
・&lt;a href=&quot;#section3&quot;&gt;有名ブランドのロゴは何のフォントを使ってる？&lt;/a&gt;&lt;br&gt;
・&lt;a href=&quot;#section4&quot;&gt;もしもユーザベースが第3の事業を始めたら...&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;&lt;a name=&quot;section1&quot;&gt;&lt;/a&gt;SPEEDAのロゴのルーツ&lt;/h3&gt;

&lt;p&gt;さて、本題のSPEEDAのロゴですが、残念ながらこのロゴの成り立ちを語れる人を見つけることはできませんでした。それで、ずっとモヤモヤした毎日を過ごしていたわけです。これに似たフォントはなんだろう、、、と。そうやってSPEEDAのロゴのフォントのことをずっと想っていたら、とうとう出会ってしまったんです。&lt;/p&gt;

&lt;p&gt;それは、ある日、突然。まるで天から降ってきたかのように。久しぶりに見たフォント本の中にいました。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150531/20150531104840.jpg&quot; alt=&quot;f:id:uzabase:20150531104840j:plain&quot; title=&quot;f:id:uzabase:20150531104840j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
2013年発行の「&lt;a href=&quot;http://www.graphicsha.co.jp/shosai.php?snumber3=1305&quot;&gt;TYPOGRAPHY03&lt;/a&gt;」（グラフィック社）&lt;/p&gt;

&lt;p&gt;このムックのここに。ほら。SPEEDAのロゴにそっくりでしょ？
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150531/20150531105845.jpg&quot; alt=&quot;f:id:uzabase:20150531105845j:plain&quot; title=&quot;f:id:uzabase:20150531105845j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;そう「BANK GOTHIC」というフォントです。
（ムックには「 BANNK GOTHIC」とありますが、これは誤植ですね。）&lt;/p&gt;

&lt;p&gt;このフォントに出会った瞬間、もうね、なんとも言えない晴れ晴れした気持ちになったんですよ。出会うべくして出会った赤い糸＝運命の人？みたいな。それはおおげさですが。。。しかも、フォント名にBANK（銀行）とあるなんて。さまざまな企業の財務情報や業界の動向を提供するSPEEDAにぴったりのフォントですね。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150531/20150531111126.png&quot; alt=&quot;f:id:uzabase:20150531111126p:plain&quot; title=&quot;f:id:uzabase:20150531111126p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;BANK GOTHICはサンセリフ、ウロコのない書体です。その中でも幾何学的図形のような骨格を持つジオメトリック・サンセリフです。
ほら、見てください。ほぼ正方形の形をしていますよね？（青枠に注目）&lt;/p&gt;

&lt;p&gt;BANK GOTHICの特徴を他にも挙げると、GやO、Cに見られる正方形部分、この内側部分が直角になっているのに対して、外側が丸みを帯びている点ですね（赤の丸に注目）&lt;/p&gt;

&lt;p&gt;参考までに、&lt;a href=&quot;http://www.fonts.com/ja/browse/designers/morris-fuller-benton&quot;&gt;fonts.com&lt;/a&gt; から引用したBANK GOTHICの生みの親、Morris Fuller Bentonについて記しておきます。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Morris Fuller Benton – born 1872 in Milwaukee, USA, died 1948 in Morristown, USA – engineer, type designer. After training as a mechanic and engineer, Benton jointed the ATF, where he became type designer and in-house designer with ATF.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;フォント名が明らかになったところで、SPEEDAのロゴの検証をしていきましょう。&lt;/p&gt;

&lt;p&gt;まずは現在のロゴ。これが最終形です。
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150531/20150531112457.png&quot; alt=&quot;f:id:uzabase:20150531112457p:plain&quot; title=&quot;f:id:uzabase:20150531112457p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;そしてこれが一世代前のロゴ。いつまで使われていたのか、正確なところはわかりません。
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150531/20150531112712.png&quot; alt=&quot;f:id:uzabase:20150531112712p:plain&quot; title=&quot;f:id:uzabase:20150531112712p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;今のロゴと比較すると一世代前のロゴは少しスリムでしたね。今のロゴのほうが骨太です。その他にも、PとDに変化が見られますね。現在のロゴのほうが尖った印象になっているとと同時に、より堂々とした感じが伝わってきます。そして男性的。&lt;/p&gt;

&lt;p&gt;ここからは想像ですが、こんな流れでSPEEDAのロゴができあがったのではないかと。
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150603/20150603195800.png&quot; alt=&quot;f:id:uzabase:20150603195800p:plain&quot; title=&quot;f:id:uzabase:20150603195800p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;BANK GOTHICでSPEEDAを組む …（ A）&lt;/li&gt;
&lt;li&gt;（A）をベースに文字の横幅を少しスリムにする（正方形から長方形に）...（B）&lt;/li&gt;
&lt;li&gt;微調整（特にSやE）を繰り返して、一世代前のロゴが完成…（C）&lt;/li&gt;
&lt;li&gt;さらに微調整を繰り返して、今のロゴが完成…（D）&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;&lt;a name=&quot;section2&quot;&gt;&lt;/a&gt;SPEEDAのお仲間さがし&lt;/h3&gt;

&lt;p&gt;SPEEDAのロゴのルーツを知り、俄然、BANK GOTHICが身近になった私。そこで、BANK GOTHICを使ったロゴのお仲間を探してみました。&lt;/p&gt;

&lt;p&gt;Googleで検索してみると、いろいろ見つかります。
いずれもロゴの形を見ての想像でしかありませんが、&lt;a href=&quot;http://www.nintendo.co.jp/ds/&quot;&gt;NINTENDO DS&lt;/a&gt;のNINTENDOやER緊急救命室のER、浅草にあるホテル&lt;a href=&quot;http://www.agoraplace-asakusa.com/&quot;&gt;AGOLA PLACE&lt;/a&gt;などはBANK GOTHICではないかと思います。&lt;/p&gt;

&lt;p&gt;そして、私たちのオフィス近くにもBANK GOTHICを見つけました。
恵比寿駅からオフィスに向かう途中にある恵比寿ビジネスタワー。下の写真をご覧ください。この欧文ロゴがBANK GOTHICっぽいんです。
昨年12月、ユーザベースは外苑前からここ恵比寿に移転しましたが、もしかしたら引っ越し先はこのビルにすべきだったかもしれませんね、、、なんて思ったり。
&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150531/20150531115149.jpg&quot; alt=&quot;f:id:uzabase:20150531115149j:plain&quot; title=&quot;f:id:uzabase:20150531115149j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;&lt;a name=&quot;section3&quot;&gt;&lt;/a&gt;Google、VOGUE、Dean &amp;amp; Delucaなどのブランドロゴはどのフォントを使ってる？&lt;/h3&gt;

&lt;p&gt;ロゴとフォントのことをいろいろ調べていたら、有名ブランドのロゴのフォントも気になってきました。そこで、書籍やインターネットなどで調べてみました。&lt;/p&gt;

&lt;h4&gt;LOUIS VUITTON&lt;/h4&gt;

&lt;p&gt;多くの人の憧れのファッションブランド &lt;a href=&quot;http://jp.louisvuitton.com/&quot;&gt;LOUIS VUITTON&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150602/20150602000621.png&quot; alt=&quot;f:id:uzabase:20150602000621p:plain&quot; title=&quot;f:id:uzabase:20150602000621p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;これはMacにも標準で搭載されているFutura（フツラ、フーツラ）で組まれたフォントです。字と字の間を調整している以外は、ほぼ原型のまま使っているっぽいです。実は、ユーザベースのロゴもFuturaなんですね。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150602/20150602224304.png&quot; alt=&quot;f:id:uzabase:20150602224304p:plain&quot; title=&quot;f:id:uzabase:20150602224304p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;VOGUE&lt;/h4&gt;

&lt;p&gt;続いて老舗の女性ファッション誌 &lt;a href=&quot;http://www.vogue.co.jp/&quot;&gt;VOGUE&lt;/a&gt;。このロゴで使われているのは、Didot（ディド）です。こちらもMacをお使いの方は持っているんじゃないでしょうか？&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150602/20150602002309.jpg&quot; alt=&quot;f:id:uzabase:20150602002309j:plain&quot; title=&quot;f:id:uzabase:20150602002309j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;a href=&quot;http://(http://www.vogue.co.jp/&quot;&gt;http://www.vogue.co.jp/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;あらためて書店で平積みされている女性ファッション誌を見てみると、Didotのように、細いところと太いところの差がはっきりしているロゴが多いですね。特に大人の女性向けファッション誌に。まるで女性の理想的なプロポーション、華奢に見えるのに出ているところは出ている、、、みたいな。そんな印象を受けるフォントです。Didotはそれに加えて丸みもあるので、女性らしいしなやかさも感じます。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150602/20150602224332.png&quot; alt=&quot;f:id:uzabase:20150602224332p:plain&quot; title=&quot;f:id:uzabase:20150602224332p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;DEAN &amp;amp; DELUCA&lt;/h4&gt;

&lt;p&gt;NY生まれのフード＆カフェのお店。見たことのないオシャレなパッケージの食材が並んでいて、本当に楽しいお店です。このロゴはCopperplate Gothicですね。いろんなところで目にする人気のフォントです。こちらも私のMacにはインストールされています。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150602/20150602003156.jpg&quot; alt=&quot;f:id:uzabase:20150602003156j:plain&quot; title=&quot;f:id:uzabase:20150602003156j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;a href=&quot;http://www.deandeluca.com/&quot;&gt;http://www.deandeluca.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150602/20150602224348.png&quot; alt=&quot;f:id:uzabase:20150602224348p:plain&quot; title=&quot;f:id:uzabase:20150602224348p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;Google&lt;/h4&gt;

&lt;p&gt;そして、いつもお世話になっているGoogle。このロゴで使われているのはCatull BQです。ほぼ手を加えず原型のまま使っているっぽいです。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150602/20150602003639.jpg&quot; alt=&quot;f:id:uzabase:20150602003639j:plain&quot; title=&quot;f:id:uzabase:20150602003639j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;a href=&quot;http://www.google.co.jp/&quot;&gt;http://www.google.co.jp/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.myfonts.com%2Ffonts%2Fberthold%2Fcatull-bq%2F&quot; title=&quot;Catull® BQ - Desktop font « MyFonts&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://www.myfonts.com/fonts/berthold/catull-bq/&quot;&gt;Catull® BQ - Desktop font « MyFonts&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://www.myfonts.com/fonts/berthold/catull-bq/&quot;&gt;www.myfonts.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h3&gt;&lt;a name=&quot;section4&quot;&gt;&lt;/a&gt;もしもユーザベースが第3の事業を始めたら...&lt;/h3&gt;

&lt;p&gt;さて、ここからは私の妄想です。「もしもユーザベースが第3の事業を始めたら…」を妄想して、こんなときにはこんなフォントが合うんじゃ？という視点で、フォントを探してみました。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;ユーザベースは、法人向け業界分析情報データベース「SPEEDA」と、経済情報に特化したニュース共有サービス「」という2つのプロダクトの開発・運営を行っています。&lt;/p&gt;&lt;/blockquote&gt;

&lt;h4&gt;もしもユーザベースが「ホラー映画」を作ったら...&lt;/h4&gt;

&lt;p&gt;そこで、こわーいフォントを探してみました。&lt;/p&gt;

&lt;p&gt;さて、どうでしょう？　これはAdobe Creative CloudのTypekitにもあるAdobeのIronwoodというフォントです。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150603/20150603232308.jpg&quot; alt=&quot;f:id:uzabase:20150603232308j:plain&quot; title=&quot;f:id:uzabase:20150603232308j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.fontshop.com/families/ironwood&quot;&gt;https://www.fontshop.com/families/ironwood&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;こうやってみるとそんなに怖そうに見えませんが、少し色を工夫すると、イギリスあたりの誰も住んでいない古い館っぽっく見えてきませんか？　まるでドラキュラの棲家のような。また、不安定な 3本のラインがなかなか良い効果が出ているようで、「裏切り」や「壊れる」といったサスペンス映画の要素も見えてきます。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150604/20150604002217.jpg&quot; alt=&quot;f:id:uzabase:20150604002217j:plain&quot; title=&quot;f:id:uzabase:20150604002217j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;dafont.comを探せば、それはそれは怖いフォントも他にもたくさん見つかるんですが、お勧めしてもいいものとそうでないものの選別が難しいので、ここで紹介するのはやめました。&lt;/p&gt;

&lt;h4&gt;もしもユーザベースが「自然派化粧品」を売り出したら...&lt;/h4&gt;

&lt;p&gt;続いて、同じくAdobe Creative CloudのTypekitにもあるBlakely というフォントを使って、自然派化粧品のロゴを作ってみました。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150604/20150604225039.jpg&quot; alt=&quot;f:id:uzabase:20150604225039j:plain&quot; title=&quot;f:id:uzabase:20150604225039j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.fontshop.com/families/blakely&quot;&gt;https://www.fontshop.com/families/blakely&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上の図はBoldですが、一番細いLightを使うと印象がぐっと変わります。このLightを使って、今度はNewsPIcksでロゴを作ってみました。&lt;/p&gt;

&lt;p&gt;ターゲットは20代女性くらい？　「いつまでもみずみずしいお肌をキープしたい女性へ」「敏感肌のあなたへ」といったところかな。とても涼しげな感じに仕上がったので、今のこの暑い季節に売り出したいところですね。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150604/20150604225617.png&quot; alt=&quot;f:id:uzabase:20150604225617p:plain&quot; title=&quot;f:id:uzabase:20150604225617p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;もしもユーザベースが「子ども服ブランド」を立ち上げたら…&lt;/h4&gt;

&lt;p&gt;最後に、もしもユーザベースが「子ども服ブランド」を立ち上げたら…と題して、楽しくてやさしいフォントを探してみました。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150603/20150603221133.jpg&quot; alt=&quot;f:id:uzabase:20150603221133j:plain&quot; title=&quot;f:id:uzabase:20150603221133j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;
&lt;a href=&quot;https://www.fontshop.com/families/scruff&quot;&gt;https://www.fontshop.com/families/scruff&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;どうでしょうか？ これは scruff というフォントです。
おもちゃ箱をひっくり返したように、とっても楽しそうですよね。&lt;/p&gt;

&lt;p&gt;「S」なんて、おもちゃの電車を走らせる線路に見えてくるし、「f」が2つ並んでいるところは双子の兄弟がひげダンスしているように見えてくる。ほら、他の文字も全部楽しそうですよね。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150603/20150603224352.jpg&quot; alt=&quot;f:id:uzabase:20150603224352j:plain&quot; title=&quot;f:id:uzabase:20150603224352j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;このフォントは、元気な子ども服ブランドや知育の玩具メーカーのロゴにきっと似合うはず。例えば、こんな感じでね。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150604/20150604220204.png&quot; alt=&quot;f:id:uzabase:20150604220204p:plain&quot; title=&quot;f:id:uzabase:20150604220204p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ちなみに、キャッチコピーで使用したフォントは「&lt;a href=&quot;https://www.fontshop.com/families/blakely&quot;&gt;やさしさゴシック&lt;/a&gt;」というフリーのフォントです。日本語のフリーフォントでこれだけ文字の種類が揃っているのは珍しいのでとても貴重です。&lt;/p&gt;

&lt;p&gt;長々とフォントについて書きましたが、最後に、敬愛する日本人フォントデザイナー、小林章さんの言葉を載せて、締めくくりたいと思います。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150531/20150531130901.png&quot; alt=&quot;f:id:uzabase:20150531130901p:plain&quot; title=&quot;f:id:uzabase:20150531130901p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ユーザベースではエンジニアを募集しています！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;大規模で多種多様なデータを扱うことに興味がある方&lt;/li&gt;
&lt;li&gt;とにかく技術が好きな方&lt;/li&gt;
&lt;li&gt;様々なバックグラウンドを持つ人材と働いてみたい方&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;以上に一つでも当てはまる方は、一度オフィスに遊びに来てください！&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.wantedly.com%2Fprojects%2F11497&quot; title=&quot;巨大金融メディアに打ち勝つサービスをつくりたいエンジニアWanted! by 株式会社ユーザベース&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/projects/11497&quot;&gt;巨大金融メディアに打ち勝つサービスをつくりたいエンジニアWanted! by 株式会社ユーザベース&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/projects/11497&quot;&gt;www.wantedly.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;【参考サイト・書籍】&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=http%3A%2F%2Fmatome.naver.jp%2Fodai%2F2133151854135573901&quot; title=&quot;有名企業やサイトのロゴに使用されているフォントまとめ - NAVER まとめ&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://matome.naver.jp/odai/2133151854135573901&quot;&gt;有名企業やサイトのロゴに使用されているフォントまとめ - NAVER まとめ&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://matome.naver.jp/odai/2133151854135573901&quot;&gt;matome.naver.jp&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=http%3A%2F%2Fmatome.naver.jp%2Fodai%2F2135168573243723001&quot; title=&quot;名作フォントと有名ロゴのおいしい関係 - NAVER まとめ&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://matome.naver.jp/odai/2135168573243723001&quot;&gt;名作フォントと有名ロゴのおいしい関係 - NAVER まとめ&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://matome.naver.jp/odai/2135168573243723001&quot;&gt;matome.naver.jp&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;hatena-asin-detail&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4766124758/hatena-blog-22/&quot;&gt;&lt;img src=&quot;http://ecx.images-amazon.com/images/I/51fM19fMW2L._SL160_.jpg&quot; class=&quot;hatena-asin-detail-image&quot; alt=&quot;TYPOGRAPHY(タイポグラフィ)03  デザイナーなら覚えておくべき 厳選フォント350&quot; title=&quot;TYPOGRAPHY(タイポグラフィ)03  デザイナーなら覚えておくべき 厳選フォント350&quot;&gt;&lt;/a&gt;&lt;div class=&quot;hatena-asin-detail-info&quot;&gt;&lt;p class=&quot;hatena-asin-detail-title&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4766124758/hatena-blog-22/&quot;&gt;TYPOGRAPHY(タイポグラフィ)03  デザイナーなら覚えておくべき 厳選フォント350&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;作者:&lt;/span&gt; グラフィック社編集部&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;出版社/メーカー:&lt;/span&gt; グラフィック社&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;発売日:&lt;/span&gt; 2013/05/07&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;メディア:&lt;/span&gt; 大型本&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/asin/4766124758/hatena-blog-22&quot; target=&quot;_blank&quot;&gt;この商品を含むブログ (4件) を見る&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;hatena-asin-detail-foot&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;hatena-asin-detail&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4568504287/hatena-blog-22/&quot;&gt;&lt;img src=&quot;http://ecx.images-amazon.com/images/I/51Dtxr9LBSL._SL160_.jpg&quot; class=&quot;hatena-asin-detail-image&quot; alt=&quot;フォントのふしぎ  ブランドのロゴはなぜ高そうに見えるのか？&quot; title=&quot;フォントのふしぎ  ブランドのロゴはなぜ高そうに見えるのか？&quot;&gt;&lt;/a&gt;&lt;div class=&quot;hatena-asin-detail-info&quot;&gt;&lt;p class=&quot;hatena-asin-detail-title&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4568504287/hatena-blog-22/&quot;&gt;フォントのふしぎ  ブランドのロゴはなぜ高そうに見えるのか？&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;作者:&lt;/span&gt; 小林章&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;出版社/メーカー:&lt;/span&gt; 美術出版社&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;発売日:&lt;/span&gt; 2011/01/17&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;メディア:&lt;/span&gt; 単行本（ソフトカバー）&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;購入&lt;/span&gt;: 11人 &lt;span class=&quot;hatena-asin-detail-label&quot;&gt;クリック&lt;/span&gt;: 235回&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/asin/4568504287/hatena-blog-22&quot; target=&quot;_blank&quot;&gt;この商品を含むブログ (33件) を見る&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;hatena-asin-detail-foot&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;hatena-asin-detail&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4756245676/hatena-blog-22/&quot;&gt;&lt;img src=&quot;http://ecx.images-amazon.com/images/I/51CbPBYN4VL._SL160_.jpg&quot; class=&quot;hatena-asin-detail-image&quot; alt=&quot;新しい価値を生み出すためのブランディングプロセス&quot; title=&quot;新しい価値を生み出すためのブランディングプロセス&quot;&gt;&lt;/a&gt;&lt;div class=&quot;hatena-asin-detail-info&quot;&gt;&lt;p class=&quot;hatena-asin-detail-title&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/4756245676/hatena-blog-22/&quot;&gt;新しい価値を生み出すためのブランディングプロセス&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;出版社/メーカー:&lt;/span&gt; パイインターナショナル&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;発売日:&lt;/span&gt; 2015/01/20&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;メディア:&lt;/span&gt; 単行本&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/asin/4756245676/hatena-blog-22&quot; target=&quot;_blank&quot;&gt;この商品を含むブログを見る&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;hatena-asin-detail-foot&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>ユーザベースの自由な社風を支える「みんなの会」のつくり方（動画環境編）</title>
            <link>http://tech.uzabase.com/entry/2015/06/02/183335</link>
            <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150526/20150526122646.jpg&quot; alt=&quot;f:id:uzabase:20150526122646j:plain&quot; title=&quot;f:id:uzabase:20150526122646j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;企業・業界情報データベース&lt;a href=&quot;http://www.uzabase.com/speeda/&quot;&gt;「SPEEDA」&lt;/a&gt;の開発チームに所属している川口と申します。&lt;/p&gt;

&lt;p&gt;ユーザベースで大事にしている価値観として、「&lt;strong&gt;自由主義で行こう&lt;/strong&gt;」があります。きちんと仕事の結果を出せば、出社時間や服装は自由で、出社の義務もないというものです。&lt;/p&gt;

&lt;p&gt;一方、自由に対する責任の一つとして、毎週一回の全社会議だけは全員出席する必要があります。この全社会議が「&lt;strong&gt;みんなの会（Town Hall Meeting）&lt;/strong&gt;」です。ここでは各チームの進捗報告やリリースされた機能の発表、事務連絡や新メンバーの紹介などを行っています。（以前は「全体進捗会議」という名前でしたが、社内投票の結果、この名前になりました。）&lt;/p&gt;

&lt;p&gt;私が入社した2011年当時、オフィスは東京だけで、全体会議の出席メンバーも20人ぐらいでしたので、会議室に全員入り切るぐらいでした。それからオフィスも2回移転して、上海、シンガポール、香港と海外にも拠点も広がり、全体で160人前後のメンバーになりました。今でも全員が出席するスタイルでの会議は続いているのですが、各海外拠点への生中継を毎回行うようになり、海外メンバーからの発表や質問なども可能にしています。&lt;/p&gt;

&lt;p&gt;このシステムの構築やオペレーションには私もかかわっており、試行錯誤を続けながらバージョンアップしてきました。この記事では、そんな「みんなの会」を支えている現在のシステムについて少しご紹介したいと思います。&lt;/p&gt;

&lt;p&gt;なお、「みんなの会」については、先日公開されたSELECKの記事や、本ブログの竹内（当社チーフテクノロジスト）の記事でもご紹介しています。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fseleck.cc%2Farticle%2F11&quot; title=&quot;ベンチャーからグローバル企業へ　ユーザベースCTOが作った「ニコ動」式の全社会議 | SELECK&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://seleck.cc/article/11&quot;&gt;ベンチャーからグローバル企業へ　ユーザベースCTOが作った「ニコ動」式の全社会議 | SELECK&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://seleck.cc/article/11&quot;&gt;seleck.cc&lt;/a&gt;&lt;/cite&gt;
&lt;iframe src=&quot;http://tech.uzabase.com/embed/2015/06/01/143202&quot; title=&quot;ニコニコメソッドプレゼンを全社会議に取り入れてみたら会議が面白くなった - UZABASE Tech Blog&quot; class=&quot;embed-card embed-blogcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://tech.uzabase.com/entry/2015/06/01/143202&quot;&gt;ニコニコメソッドプレゼンを全社会議に取り入れてみたら会議が面白くなった - UZABASE Tech Blog&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://tech.uzabase.com/entry/2015/06/01/143202&quot;&gt;tech.uzabase.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h3&gt;目次&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1&quot;&gt;Zoomを使って全世界と中継&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2&quot;&gt;スライドの配信もZoomの画面共有で&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#3&quot;&gt;「参加者の顔が見えること」が何より重要&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#4&quot;&gt;Wii Uのマイクも使って音声環境を改善&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#5&quot;&gt;有志メンバーによる同時通訳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#6&quot;&gt;ニコニコメソッドプレゼンで一体感のあるコミュニケーション&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#7&quot;&gt;まとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;&lt;a name=&quot;1&quot;&gt;&lt;/a&gt;Zoomを使って全世界と中継&lt;/h2&gt;

&lt;p&gt;「みんなの会」の中心となるWeb会議システムですが、&lt;a href=&quot;http://zoom.us/&quot;&gt;「Zoom」&lt;/a&gt;という製品を使用しています。いろいろな製品がある中で、「Zoom」では最大100ユーザまで同時接続可能というところが大きな特長です。&lt;/p&gt;

&lt;p&gt;ユーザベースで現在使用しているのは25ユーザまでのプランで、海外拠点の各メンバーが接続するだけでなく、在宅や出張先からのリモートでの参加も出来ています。&lt;/p&gt;

&lt;p&gt;なお、Zoomの無料アカウントでは最大40分で会議が切れてしまうという制限があるため、長時間会議を行う場合はProアカウント（$9.99/Month）が必要になります。&lt;/p&gt;

&lt;p&gt;会議への参加は、主催者からの招待メール中のリンクをクリックすることで行いますが、初めて参加する場合はアプリのインストールも自動的に行われます。&lt;/p&gt;

&lt;p&gt;Windows、Macはもちろん、iPad・iPhoneやAndroid用のアプリも公開されていて、スマートフォンでも後述の画面共有やチャットを含めた一通りの機能が可能です。&lt;/p&gt;

&lt;p&gt;「Zoom」はなかなか高機能でよく出来ていると思うのですが、「Skype」などに比べると若干取っつきにくいためか、日本ではあまり知られていなさそうです。これからの普及に期待しています。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=http%3A%2F%2Fzoom.us%2F&quot; title=&quot;Video Conferencing, Web Conferencing, Online Meetings, Screen Sharing&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://zoom.us/&quot;&gt;Video Conferencing, Web Conferencing, Online Meetings, Screen Sharing&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://zoom.us/&quot;&gt;zoom.us&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;2&quot;&gt;&lt;/a&gt;スライドの配信もZoomの画面共有で&lt;/h2&gt;

&lt;p&gt;「みんなの会」では、東京オフィスのプロジェクター画面に、発表内容をまとめたプレゼンテーションファイルを映します。同時に、「Zoom」の画面共有機能によって、海外やリモートでの参加者にも同じ画面が表示できます。&lt;/p&gt;

&lt;p&gt;リモート表示ではレスポンスが気になるところですが、スライド切り替え時の反映もスムーズですし、画質がオリジナルより大きく劣ることもありませんので、十分実用的だと思います。&lt;/p&gt;

&lt;p&gt;「Zoom」の画面共有では、共有対象のウィンドウをアプリ単位もしくはデスクトップ全体で指定します。「みんなの会」のプレゼンテーションファイルはGoogle Driveのスライド形式（Googleスライド）で作成しており、ブラウザにてプレゼンテーションを行いますので、Google Chromeのウィンドウを共有しています。ケースバイケースですが、他の会議では、お手軽にデスクトップ全体を共有することも多いです。&lt;/p&gt;

&lt;p&gt;ところで、スライドを開いて、メニューから「プレゼンテーションを開始」を実行すると、プレゼンテーションが全画面で表示されますが、Zoomでブラウザウィンドウを共有している場合は、全画面表示は共有対象外となるので、他のユーザにスライド画面が映らなくなってしまいます。&lt;/p&gt;

&lt;p&gt;そこで、Google Chromeを使用する場合のみですが、「スピーカーノートを使って開始」のメニューを実行すると、ブラウザのタブ内にプレゼンテーション画面が表示されます。少しマニアックな話ですが、Zoomを使ってGoogleスライドの画面共有を行う場合はこの方法がおすめです。&lt;/p&gt;

&lt;p&gt;ちなみにGoogleスライドですが、PowerPoint等と比較すると凝ったデザインや動きのものは作成しにくいですが、一つのファイルを複数人で同時に編集することが可能で、マージや差し替えの手間が省けるので、こういった会議の資料作成には非常に便利です。&lt;/p&gt;

&lt;p&gt;なお、PowerPoint等のプレゼンテーションファイルからの変換も可能ですが、レイアウトが崩れることが多いので、注意が必要です。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.google.com%2Fintl%2Fja_jp%2Fdrive%2F&quot; title=&quot;Google ドライブ - 写真やドキュメントなど、ファイルのクラウド ストレージとバックアップ&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://www.google.com/intl/ja_jp/drive/&quot;&gt;Google ドライブ - 写真やドキュメントなど、ファイルのクラウド ストレージとバックアップ&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://www.google.com/intl/ja_jp/drive/&quot;&gt;www.google.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;3&quot;&gt;&lt;/a&gt;「参加者の顔が見えること」が何より重要&lt;/h2&gt;

&lt;p&gt;「Zoom」では、会議の参加者の映像を画面に映すことが可能です。参加者がカメラを持っている場合に限定されますが、やはり声だけ聞こえるよりも、顔の表情も一緒に見えるのは重要なポイントだと思います。&lt;/p&gt;

&lt;p&gt;なお、東京オフィスの場合は会議室に何十人ものメンバーが集まるので、通常のWebカメラでは全員を1つの画面に映すことは困難です。そこでいろいろ試しているので、少し紹介します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;BUFFALOの&lt;a href=&quot;http://buffalo.jp/product/multimedia/web-camera/bsw180abk/&quot;&gt;「BSW180ABK」&lt;/a&gt;というWebカメラは、180°の広角レンズで会議室全体の様子を映すことが出来て便利です。
ただし、ズーム機能も無いため、細かい部分を映すのには向いていません。&lt;/li&gt;
&lt;li&gt;発表者の表情が見えなかったり、質問者が誰か分からないという意見が挙がっていたので、私物のDVビデオカメラを持ち込んでみました。カメラマンが発表者や質問者にズームしたり、会議室全体を映したりと工夫出来るし、映りが良いと好評なようです。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;しばらくはDVビデオカメラを使用してみたいと思いますが、段々と設備が大がかりになってきました。&lt;/p&gt;

&lt;p&gt;なお、MacへのDVビデオカメラの接続ですが、&lt;a href=&quot;http://store.apple.com/jp/product/MD464ZM&quot;&gt;「Thunderbolt - FireWireアダプタ」&lt;/a&gt;と9pin-4pinのFireWireケーブルを使用しています。これで、MacからはWebカメラと同様のビデオデバイスとして認識されますので、Zoomの設定画面にて選択することが可能になります。&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;hatena-asin-detail&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/B00E0D1RWI/hatena-blog-22/&quot;&gt;&lt;img src=&quot;http://ecx.images-amazon.com/images/I/31kRCg1Rh-L._SL160_.jpg&quot; class=&quot;hatena-asin-detail-image&quot; alt=&quot;iBUFFALO マイク内蔵60万画素WEBカメラ 180°広角モデル BSW180ABK&quot; title=&quot;iBUFFALO マイク内蔵60万画素WEBカメラ 180°広角モデル BSW180ABK&quot;&gt;&lt;/a&gt;&lt;div class=&quot;hatena-asin-detail-info&quot;&gt;&lt;p class=&quot;hatena-asin-detail-title&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/B00E0D1RWI/hatena-blog-22/&quot;&gt;iBUFFALO マイク内蔵60万画素WEBカメラ 180°広角モデル BSW180ABK&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;出版社/メーカー:&lt;/span&gt; バッファロー&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;発売日:&lt;/span&gt; 2013/08/25&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;メディア:&lt;/span&gt; Personal Computers&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/asin/B00E0D1RWI/hatena-blog-22&quot; target=&quot;_blank&quot;&gt;この商品を含むブログを見る&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;hatena-asin-detail-foot&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;hatena-asin-detail&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/B008RXYOKY/hatena-blog-22/&quot;&gt;&lt;img src=&quot;http://ecx.images-amazon.com/images/I/21sRgqMdUKL._SL160_.jpg&quot; class=&quot;hatena-asin-detail-image&quot; alt=&quot;アップル Thunderbolt - FireWireアダプタ MD464ZM/A&quot; title=&quot;アップル Thunderbolt - FireWireアダプタ MD464ZM/A&quot;&gt;&lt;/a&gt;&lt;div class=&quot;hatena-asin-detail-info&quot;&gt;&lt;p class=&quot;hatena-asin-detail-title&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/B008RXYOKY/hatena-blog-22/&quot;&gt;アップル Thunderbolt - FireWireアダプタ MD464ZM/A&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;出版社/メーカー:&lt;/span&gt; アップル&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;メディア:&lt;/span&gt; Personal Computers&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/asin/B008RXYOKY/hatena-blog-22&quot; target=&quot;_blank&quot;&gt;この商品を含むブログを見る&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;hatena-asin-detail-foot&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;4&quot;&gt;&lt;/a&gt;Wii Uのマイクも使って音声環境を改善&lt;/h2&gt;

&lt;p&gt;「みんなの会」では、海外を含めて、毎回20台ぐらいのPCがWeb会議に参加しています。&lt;/p&gt;

&lt;p&gt;インターネットを使用しているので、一時的に音声が途切れたりする時もありますが、音声の品質や遅延はあまり気にならないため、その点でもZoomは高評価です。&lt;/p&gt;

&lt;p&gt;ところで、会議室に複数の人が集まってWeb会議に参加する場合、通常ではマイクは一つだけ設置すると思いますが、マイクから離れた場所にいる人の声が聞き取りづらく、聞く側にとってストレスになることがしばしばあります。&lt;/p&gt;

&lt;p&gt;そこで、マイクについてもいろいろ試しているので、少し紹介いたします。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SANWA DIRECTの&lt;a href=&quot;http://direct.sanwa.co.jp/ItemPage/400-MC001&quot;&gt;「400-MC001」&lt;/a&gt;というUSB接続のスタンドマイクは、高集音かつ全指向性の本格的な製品です。
声の大きさにもよりますが、10mぐらい離れた場所に座っている人の発言でもちゃんと拾ってくれるので、なかなか優秀です。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.nintendo.co.jp/wiiu/hardware/accessories/index.html&quot;&gt;Nitendo Wii U&lt;/a&gt;のワイヤレスマイク「WUP-019」ですが、実はWindowsやMacでも使用することが出来ます。マイクのレシーバーをUSB端子に差すだけで、Macから音声入力デバイスと認識されるので、とても簡単です。音声も非常にクリアに聞こえるので、大いに活用しています。&lt;/li&gt;
&lt;li&gt;Wii Uでは2本同時に使用出来るそうなので、Macにワイヤレスマイク「WUP-019」を2台繋いでみましたが、残念ながら1つしか認識しないようです。&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ワイヤレスマイクとスタンドマイクを同時に使用することが出来れば最高なのですが、Zoomではマイク、スピーカーとも1つのデバイスしか設定出来ません。&lt;/p&gt;

&lt;p&gt;そこで、何か手は無いかと探したところ、Macでは以下のソフトウェアを組み合わせることで可能ということが分かりました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://code.google.com/p/soundflower/&quot;&gt;Soundflower&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;「仮想サウンドデバイス」で、例えばMacでインターネット中継を行う時に、同じMacで再生した音楽ファイルを配信するような場合に使用出来ます。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.kawauso.com/ladiocast&quot;&gt;LadioCast&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;複数デバイスからの音声入力をミックスしたり、複数デバイスに出力することの出来るミキサーです。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;LadioCastでワイヤレスマイクと集音マイクをミキシングしてSoundflowerに出力し、Zoomの音声入力デバイスとしてSoundflowerを指定することで、両方のマイクの音声がWeb会議の参加者に聞こえるという仕組みです。&lt;/p&gt;

&lt;p&gt;これによって、発表者がワイヤレスマイクで話しながら、聴衆の拍手や笑い声を集音マイクで同時に拾うことが出来ています。さらに、LadioCastで発表者の声に合わせて音量を調整することで、より聞き取りやすくなっていると思います。&lt;/p&gt;

&lt;p&gt;また、現在のオフィスでは、HDMI出力のプロジェクタにスピーカーが付いており、東京オフィス以外のメンバーの発言はこのプロジェクターから聞こえます。&lt;/p&gt;

&lt;p&gt;ハウリングを避けるため、通常ではマイクの音はスピーカーから聞こえないのですが、LadioCastの設定を工夫して、ワイヤレスマイクの音声のみ、プロジェクターに出すようにしています。東京オフィスのように広い部屋では、発表者の声が聞こえにくいこともあるので、この簡易拡声器機能がとても便利です。&lt;/p&gt;

&lt;p&gt;なお、「Zoom」に参加している各メンバーは、基本的にマイクはミュート状態で、発言時のみマイクをオンにするようにしています。そのままでは、キーボードの操作音や周囲の会話などを拾ってしまうためです。&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;hatena-asin-detail&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/B008F1S3PU/hatena-blog-22/&quot;&gt;&lt;img src=&quot;http://ecx.images-amazon.com/images/I/41GPhvAFODL._SL160_.jpg&quot; class=&quot;hatena-asin-detail-image&quot; alt=&quot;サンワダイレクト WEB会議マイク USBマイク PCマイク 高集音 全指向性&amp;単一指向性 400-MC001&quot; title=&quot;サンワダイレクト WEB会議マイク USBマイク PCマイク 高集音 全指向性&amp;単一指向性 400-MC001&quot;&gt;&lt;/a&gt;&lt;div class=&quot;hatena-asin-detail-info&quot;&gt;&lt;p class=&quot;hatena-asin-detail-title&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/B008F1S3PU/hatena-blog-22/&quot;&gt;サンワダイレクト WEB会議マイク USBマイク PCマイク 高集音 全指向性&amp;単一指向性 400-MC001&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;出版社/メーカー:&lt;/span&gt; サンワダイレクト&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;メディア:&lt;/span&gt; Personal Computers&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/asin/B008F1S3PU/hatena-blog-22&quot; target=&quot;_blank&quot;&gt;この商品を含むブログを見る&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;hatena-asin-detail-foot&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;hatena-asin-detail&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/B00FKSWGVI/hatena-blog-22/&quot;&gt;&lt;img src=&quot;http://ecx.images-amazon.com/images/I/41DTcM%2BHU5L._SL160_.jpg&quot; class=&quot;hatena-asin-detail-image&quot; alt=&quot;Wii U ワイヤレスマイク&quot; title=&quot;Wii U ワイヤレスマイク&quot;&gt;&lt;/a&gt;&lt;div class=&quot;hatena-asin-detail-info&quot;&gt;&lt;p class=&quot;hatena-asin-detail-title&quot;&gt;&lt;a href=&quot;http://www.amazon.co.jp/exec/obidos/ASIN/B00FKSWGVI/hatena-blog-22/&quot;&gt;Wii U ワイヤレスマイク&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;出版社/メーカー:&lt;/span&gt; 任天堂&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;発売日:&lt;/span&gt; 2013/12/12&lt;/li&gt;&lt;li&gt;&lt;span class=&quot;hatena-asin-detail-label&quot;&gt;メディア:&lt;/span&gt; Video Game&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://d.hatena.ne.jp/asin/B00FKSWGVI/hatena-blog-22&quot; target=&quot;_blank&quot;&gt;この商品を含むブログを見る&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class=&quot;hatena-asin-detail-foot&quot;&gt;&lt;/div&gt;&lt;/div&gt;
&lt;a href=&quot;https://code.google.com/p/soundflower/&quot;&gt;https://code.google.com/p/soundflower/&lt;/a&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://code.google.com/p/soundflower/&quot;&gt;code.google.com&lt;/a&gt;&lt;/cite&gt;
&lt;a href=&quot;http://blog.kawauso.com/ladiocast&quot;&gt;http://blog.kawauso.com/ladiocast&lt;/a&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://blog.kawauso.com/ladiocast&quot;&gt;blog.kawauso.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;5&quot;&gt;&lt;/a&gt;有志メンバーによる同時通訳&lt;/h2&gt;

&lt;p&gt;海外のオフィスも繋いで会議を行う場合に避けられない問題として、言語の壁があります。これについても、様々なトライアルを行ってきました。&lt;/p&gt;

&lt;p&gt;例えば、「みんなの会」を資料・発表とも英語で行っていた時期もありました。ユーザベースには英語の得意なメンバーも多いので、各チームとも流暢な英語にて発表が行われていましたが、もちろん全員そうではありません。私は英語が得意ではないので、事前に英訳した原稿を用意して臨んだのですが、ちゃんと伝わっていたのか怪しく、申し訳なかったです。&lt;/p&gt;

&lt;p&gt;現在は、日本語版の資料と英語版の資料を用意して、2画面あるプロジェクターに片方ずつ映すようにしています。なお、Zoomで共有するのは英語版のみで、日本語版の画面はそれ専用のPCで映しています。ページ送りはそれぞれ手動で進めていますが、自動的に同期する仕組みも構想中です。&lt;/p&gt;

&lt;p&gt;発表は当人の得意な言語で行われますが、Zoomのチャットで、有志メンバーによる同時翻訳が行われています。このため、プロジェクター画面に、プレゼンテーション資料とチャット画面を並べて映しています。翻訳を行うメンバーは、会議室に持ち込んだPCからZoomの会議に参加して、日本語の発表や質問は英語に、英語の発表や質問は日本語に訳して、リアルタイムにチャットに投稿しています。&lt;/p&gt;

&lt;p&gt;また、チャットによる文字の通訳だけでは思いが伝わりにくいということで、さらに有志の方に立候補していただき、発表の同時通訳にもチャレンジしています。発表と通訳を交互に行う逐次通訳では倍の時間が必要なので、同時通訳で行うのが理想ですが、システム面での難易度も上がります。&lt;/p&gt;

&lt;p&gt;そもそも、Web会議システムで二カ国語の音声に対応しているものはあまり無いようで、Zoomもサポートしていません。そこで、Zoomとは別の、通訳音声用の独立した会議システムにて配信しています。具体的には、各オフィスの専用PCをSkypeで繋いでおり、海外オフィス側でもSkype用のPCで通訳の音声を受信しています。通訳の音声はオフィス全体にスピーカーで流しており、各メンバーは必要に応じてZoomの音声と聞き分けています。&lt;/p&gt;

&lt;p&gt;このような構成にしている理由は、当初は1台でZoomとSkypeを両方配信しようとしたのですが、配信側も受信側も準備にも時間がかかるし、PCの動作も不安定になってしまったためです。「みんなの会」は全社で行う会議ですので、トラブルが起きた場合でもすぐ復旧出来るように、なるべくシンプルな構成を心がけています。&lt;/p&gt;

&lt;p&gt;なお、資料に沿った発表だけとは限らないし、専門用語が多く出てくる内容もあるので、翻訳を引き受けていただいている方々にはとても感謝しています。当社代表・新野による「白熱教室」という、その場でのディスカッションが主体となることもあるのですが、そういう会では翻訳がかなりハードだそうです。&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;6&quot;&gt;&lt;/a&gt;ニコニコメソッドプレゼンで一体感のあるコミュニケーション&lt;/h2&gt;

&lt;p&gt;「みんなの会」に社員がもっと参加するための仕組みとして、当社オリジナルの“字幕コメントシステム”を取り入れました。これは、Google Chromeの機能拡張を使って、発表内容についての参加者からのコメントを、ニコニコ動画のようにプレゼンテーション画面上に字幕で流すものです。本記事の冒頭に示した画像が、スライドに字幕コメントがつけられている様子です。（ブログで紹介用に弾幕を貼ってもらいました。）&lt;/p&gt;

&lt;p&gt;このシステムは、当社チーフテクノロジストの竹内が一晩で作成したそうです。これについては、当ブログにて竹内から技術背景についてご紹介しました。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;http://tech.uzabase.com/embed/2015/06/01/143202&quot; title=&quot;ニコニコメソッドプレゼンを全社会議に取り入れてみたら会議が面白くなった - UZABASE Tech Blog&quot; class=&quot;embed-card embed-blogcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://tech.uzabase.com/entry/2015/06/01/143202&quot;&gt;ニコニコメソッドプレゼンを全社会議に取り入れてみたら会議が面白くなった - UZABASE Tech Blog&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://tech.uzabase.com/entry/2015/06/01/143202&quot;&gt;tech.uzabase.com&lt;/a&gt;&lt;/cite&gt;
&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fgithub.com%2Fchimerast%2Fniconico-speenya&quot; title=&quot;chimerast/niconico-speenya&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://github.com/chimerast/niconico-speenya&quot;&gt;chimerast/niconico-speenya&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://github.com/chimerast/niconico-speenya&quot;&gt;github.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;全社会議というと真面目で少し堅いイメージがありますので、当初はこのようなコンテンツが受け入れられるのか不安でした。ところが、いざ始めて見ると予想以上に好評で、もはや「みんなの会」に無くてはならないツールになりました。&lt;/p&gt;

&lt;p&gt;例えば、SPEEDAやの新機能のリリースについての報告では、「いいね！」のマークが画面を埋め尽くしたり、バックオフィスからの経費精算手順の説明では、いつも間違っていた人から「すみませんでした」というコメントがあったり…。今までよりもリアクションが遙かにしやすくなり、会議に参加しているという意識が強くなって、「みんなの会」の雰囲気もかなり変わったと思います。&lt;/p&gt;

&lt;h2&gt;&lt;a name=&quot;7&quot;&gt;&lt;/a&gt;まとめ&lt;/h2&gt;

&lt;p&gt;今回の記事では、「みんなの会」のシステムについて、一通りご紹介いたしました。まだまだ完成形とは言えず、課題も多いのですが、その一方でかなり複雑になってしまっているので、よりシンプルにしていきたいと思います。機会があれば、さらに細かい部分についても、詳しく説明してみたいと思います。&lt;/p&gt;

&lt;p&gt;ユーザベースの「世界一の経済メディアをつくる」というミッション実現のため、今後さらに社員数も増え、新しいオフィスも開設されていくと思います。物理的な距離があっても、「みんなの会」には全てのメンバーが同じように参加出来るべきです。完全な実現は難しいかもしれませんが、メンバーのアイデアとテクノロジーの力で、少しでも理想に近付けられればと思います。&lt;/p&gt;

&lt;p&gt;ユーザベースでは、SPEEDAやに携わっていただくエンジニアを募集中です。こういったシステム構築や、企業カルチャーをつくる「みんなの会」などの取り組みに興味のある方も、採用ページやWantedlyからお気軽にご連絡ください。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=http%3A%2F%2Fwww.uzabase.com%2Fcareer%2F%23career-sec1&quot; title=&quot;CAREER | 株式会社ユーザベース | UZABASE, Inc.&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://www.uzabase.com/career/#career-sec1&quot;&gt;CAREER | 株式会社ユーザベース | UZABASE, Inc.&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://www.uzabase.com/career/#career-sec1&quot;&gt;www.uzabase.com&lt;/a&gt;&lt;/cite&gt;
&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.wantedly.com%2Fprojects%2F11448&quot; title=&quot;100年に一度のメディア変革期！世界一のニュースプラットフォームを創ろう by 株式会社ユーザベース&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/projects/11448&quot;&gt;100年に一度のメディア変革期！世界一のニュースプラットフォームを創ろう by 株式会社ユーザベース&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/projects/11448&quot;&gt;www.wantedly.com&lt;/a&gt;&lt;/cite&gt;
&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.wantedly.com%2Fprojects%2F11497&quot; title=&quot;巨大金融メディアに打ち勝つサービスをつくりたいエンジニアWanted! by 株式会社ユーザベース&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/projects/11497&quot;&gt;巨大金融メディアに打ち勝つサービスをつくりたいエンジニアWanted! by 株式会社ユーザベース&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/projects/11497&quot;&gt;www.wantedly.com&lt;/a&gt;&lt;/cite&gt;
&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.wantedly.com%2Fprojects%2F19575&quot; title=&quot;情報社会にイノベーションを起こせ！エンジニアインターン募集 by 株式会社ユーザベース&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/projects/19575&quot;&gt;情報社会にイノベーションを起こせ！エンジニアインターン募集 by 株式会社ユーザベース&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/projects/19575&quot;&gt;www.wantedly.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>ニコニコメソッドプレゼンを全社会議に取り入れてみたら会議が面白くなった</title>
            <link>http://tech.uzabase.com/entry/2015/06/01/143202</link>
            <description>&lt;p&gt;技術チーム竹内(@&lt;a class=&quot;twitter-user-screen-name&quot; href=&quot;http://twitter.com/chimerast&quot;&gt;chimerast&lt;/a&gt;)です。&lt;/p&gt;

&lt;p&gt;作ったものが知らない間に&lt;a href=&quot;https://seleck.cc/article/11&quot;&gt;記事&lt;/a&gt;のネタにされていたので、どんな仕組みで動いているか技術的なところについて書いてみます。どう使われているかの細かい話は、後日ブログ内に別の記事が上がる予定です。&lt;/p&gt;

&lt;p&gt;&lt;i&gt;（6/2 追記：「みんなの会」の動画配信システムについて記事を投稿しました。&lt;/i&gt;）
&lt;iframe src=&quot;http://tech.uzabase.com/embed/2015/06/02/183335&quot; title=&quot;ユーザベースの自由な社風を支える「みんなの会」のつくり方（動画環境編） - UZABASE Tech Blog&quot; class=&quot;embed-card embed-blogcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://tech.uzabase.com/entry/2015/06/02/183335&quot;&gt;ユーザベースの自由な社風を支える「みんなの会」のつくり方（動画環境編） - UZABASE Tech Blog&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://tech.uzabase.com/entry/2015/06/02/183335&quot;&gt;tech.uzabase.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h3&gt;全社会議で「ニコニコメソッドプレゼン」&lt;/h3&gt;

&lt;p&gt;だいぶ昔にWeb業界界隈で話題になった(?)ニコニコメソッドプレゼンを、週一の全社会議で取り入れたところ、プレゼンのエンタメ性が増して以前よりだいぶ面白いものになりました。プレゼンを聞く側の一体感がでて面白くなったのに加え、プレゼンする側としても、今まで聞いてるんだか聞いていないんだかよくわからない状態だったのが、反応が目に見えるようになってやりやすくなりました。&lt;/p&gt;

&lt;p&gt;ニコニコメソッドプレゼンとは、視聴者がスマホ等でコメントを入力して、そのコメントがニコニコ動画のようにプレゼン資料の上に流れる、視聴者参加型のプレゼンです。&lt;/p&gt;

&lt;p&gt;やるとこんな感じになります(全社会議内でやっている社員の自己紹介タイム)↓&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/h0rErlGD0JM&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;


&lt;p&gt;ニコニコメソッドを取り入れることになったきっかけは、全社会議への参加者のコミットメントをどうやったら上げることが出来るかどうかみたいな事を話し合った際に、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;発言しようにも人数が多くなって発言しづらい雰囲気ができあがってしまっている&lt;/li&gt;
&lt;li&gt;海外拠点等のリモートからの参加時に、発言がしづらかったり、会議の盛り上がり具合が伝わりにくい&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;という声があがり、その解決策として、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ニコニコ動画みたいに横から匿名の突っ込みを入れるようにできたら発言の機会が増えるんじゃないか&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;という意見が出たことによるものです。&lt;/p&gt;

&lt;p&gt;ちょうど、視聴者参加型プレゼンツールを作ってみたいなと思っていたこともあり、一晩夜なべして作りました。&lt;/p&gt;

&lt;h3&gt;作ったもの: Chrome機能拡張「NicoNico SPEENYA」&lt;/h3&gt;

&lt;p&gt;(Chromeウェブストアでの公開はしてません)&lt;/p&gt;

&lt;p&gt;全社会議では、色んなチームが進捗報告することもあり、全員で一つのプレゼン資料を編集出来るGoogle Slidesを使用して発表を行っています。&lt;/p&gt;

&lt;p&gt;プレゼンのためのほかのツールを使ったり作ったりすることは、移行コストや作成コストの面で考えられなかったので、Google Slidesをそのまま使うことにして、Chrome機能拡張でその上にコメントを重ねるようなものを作りました。&lt;/p&gt;

&lt;p&gt;コメントをするだけでは面白くないので、いいねボタンをつけて、押すと親指の画像が浮き上がって消えるような機能や、それを応用して任意の画像を送り込むような機能もつけてます。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/c/chimerast/20150531/20150531234517.gif&quot; alt=&quot;f:id:chimerast:20150531234517g:plain&quot; title=&quot;f:id:chimerast:20150531234517g:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;プログラムはGitHub上でひっそり公開しています。一般向けに機能拡張およびサーバを公開することも考えたのですが、チャンネル機能を作るモチベーションがわかないのと、セキュリティの事を考えると使う人ごとにサーバ立ててもらった方が良い気がするので、そのままにしています。&lt;/p&gt;

&lt;p&gt;Forkして拡張していただいたり、面白い機能をつけてPull Requestを送っていただけるとうれしいです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/chimerast/niconico-speenya&quot;&gt;chimerast/niconico-speenya &amp;middot; GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;作るのに使ったもの&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://socket.io/&quot;&gt;Socket.IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/extensions/getstarted&quot;&gt;Google Chrome機能拡張&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/web-animations/&quot;&gt;Web Animations API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; + &lt;a href=&quot;http://expressjs.com/&quot;&gt;Express&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Socket.IO&lt;/h4&gt;

&lt;p&gt;ブラウザで双方向の何かをつくる場合は鉄板の選択ですね。&lt;/p&gt;

&lt;p&gt;Chrome機能拡張側でSocket.IOのサーバへの接続を行い、サーバ側からの通知を待って、コメントやイメージ表示の通知があったらそれを表示するという事をやっています。&lt;/p&gt;

&lt;h4&gt;Google Chrome機能拡張&lt;/h4&gt;

&lt;p&gt;Chromeには、表示される全てのページへJavaScriptを挿入するような機能拡張を作るための拡張ポイントが用意されているのでそれを使いました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/extensions/content_scripts&quot;&gt;Content Scripts - Google Chrome&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これに加えて、ツールバーにボタンを置いて、コメント表示のON/OFFを切り替えられるようにしていたりします。&lt;/p&gt;

&lt;h4&gt;Web Animations API&lt;/h4&gt;

&lt;p&gt;あまり有名ではない機能だと思いますが、HTML5標準のアニメーションAPIです。jQuery.animate()と同じようなものだと思って良いと思います。&lt;/p&gt;

&lt;p&gt;ブラウザネイティブなので、動作が軽かったりリソース消費が少なかったりするみたいです。ただし、まだドラフトなのでサポートしていないブラウザも多いです。&lt;/p&gt;

&lt;p&gt;あまり依存ライブラリを増やしたくなかったのと、どんなもんなのか使ってみたかったのでアニメーションAPIとして採用しました。&lt;/p&gt;

&lt;h4&gt;Node.js + Express&lt;/h4&gt;

&lt;p&gt;こったことはせず、普通のAPIサーバとしての使い方をしています。Expressで待ち受けているURLにPOSTが送信されると、Socket.IOを呼び出して、Chrome機能拡張側に通知を行います。&lt;/p&gt;

&lt;h3&gt;まとめ&lt;/h3&gt;

&lt;p&gt;視聴者参加型のプレゼンは盛り上がります。また、プレゼンする側も面白いプレゼンを作ろうという気になります。&lt;/p&gt;

&lt;p&gt;プログラムの総行数はクライアントサーバ合わせて200行ぐらいです。ありものの機能を使うとさくさくっと作れます。&lt;/p&gt;

&lt;h3&gt;宣伝&lt;/h3&gt;

&lt;p&gt;ユーザベースでは、2015年6月14日(日)に、&lt;a href=&quot;http://e2d3.org/about-e2d3-2/?lang=ja&quot;&gt;E2D3プロジェクト&lt;/a&gt;と一緒にハッカソンを行います。&lt;/p&gt;

&lt;p&gt;スマホでのデータビジュアライズ方法が、世の中で試行錯誤されている中、みんなで考えてみようというハッカソンです。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=http%3A%2F%2Fe2d3.connpass.com%2Fevent%2F14868%2F&quot; title=&quot; &amp;amp; SPEEDA スマートデータエクスペリエンス ハッカソン (2015/06/14 10:00〜)&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://e2d3.connpass.com/event/14868/&quot;&gt; &amp;amp; SPEEDA スマートデータエクスペリエンス ハッカソン (2015/06/14 10:00〜)&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://e2d3.connpass.com/event/14868/&quot;&gt;e2d3.connpass.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;ネタ的に面白いと思うので是非ご参加ください。&lt;/p&gt;

&lt;p&gt;E2D3プロジェクトについてはまた別で記事を書こうと思います。&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>恵比寿のスタートアップエンジニアが集まる「えびスタ！」#2 を開催しました（ユーザベース、クックパッド、VASILY、エウレカ、はてな）</title>
            <link>http://tech.uzabase.com/entry/2015/05/15/170206</link>
            <description>&lt;p&gt;&lt;a href=&quot;http://tech.uzabase.com/entry/2015/04/10/194732&quot;&gt;既報&lt;/a&gt;の通り、恵比寿近辺のスタートアップエンジニアが集まる勉強会「えびスタ！」#2 を開催しました。少し遅れましたが開催レポートをお届けします。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150513/20150513145913.jpg&quot; alt=&quot;f:id:uzabase:20150513145913j:plain&quot; title=&quot;f:id:uzabase:20150513145913j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h1&gt;発表資料&lt;/h1&gt;

&lt;p&gt;第2回となる今回は、「大規模データの料理法」と題してユーザベース、クックパッド、VASILY、エウレカ、はてなのエンジニアが集まり、各社の事例をご紹介しました。発表内容と資料を以下にまとめます。&lt;/p&gt;

&lt;h2&gt;アドベリフィケーションサービス「BrandSafe はてな」の裏側（株式会社はてな 山家 雄介）&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;2014年8月に株式会社はてなの初のアドテクノロジープロダクトとしてリリースされた「BrandSafe はてな」について、システムを構成するアーキテクチャや、はてな特有のデータを活用して高精度にブランド毀損サイトを判定するための技術的アプローチ、DSP上で広告インプレッションがあった全URLをベースにした、膨大なアドベリフィケーションリクエストをさばくためのインフラ的な工夫などについてお話をする予定です。&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;発表資料&lt;/h3&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fdocs.google.com%2Fpresentation%2Fd%2F1_m8XTOt4Rz--aVGN-qDtrmuaGLu9eWuBA-CRAJWBKt0%2Fedit%3Fusp%3Dsharing&quot; title=&quot;アドベリフィケーションサービス「BrandSafe はてな」の裏側&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1_m8XTOt4Rz--aVGN-qDtrmuaGLu9eWuBA-CRAJWBKt0/edit?usp=sharing&quot;&gt;アドベリフィケーションサービス「BrandSafe はてな」の裏側&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1_m8XTOt4Rz--aVGN-qDtrmuaGLu9eWuBA-CRAJWBKt0/edit?usp=sharing&quot;&gt;docs.google.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h2&gt;企業・業界データサービスSPEEDAの複雑怪奇なデータとの格闘（株式会社ユーザベース 北内啓）&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;急激に増加し続けるSPEEDAの企業データを扱う上での課題や取り組み、今後の展望などについて紹介します。&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;発表資料&lt;/h3&gt;

&lt;p&gt;&lt;iframe src=&quot;https://www.slideshare.net/slideshow/embed_code/key/C8bvFGYNjwBTDy&quot; width=&quot;427&quot; height=&quot;356&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;https://www.slideshare.net/tau3000/speeda-47444622&quot; title=&quot;企業・業界データサービスSPEEDAの複雑怪奇なデータとの格闘&quot; target=&quot;_blank&quot;&gt;企業・業界データサービスSPEEDAの複雑怪奇なデータとの格闘&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;http://www.slideshare.net/tau3000&quot; target=&quot;_blank&quot;&gt;Akira Kitauchi&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://www.slideshare.net/tau3000/speeda-47444622&quot;&gt;www.slideshare.net&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h2&gt;iQONのアプリ内のデータ分析基盤の紹介や分析手法について紹介します（今村雅幸 株式会社VASILY）&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;iQONのアプリ内のデータ分析基盤の紹介や分析手法について紹介します&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;発表資料&lt;/h3&gt;

&lt;p&gt;&lt;iframe allowfullscreen=&quot;true&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; height=&quot;596&quot; id=&quot;talk_frame_296543&quot; mozallowfullscreen=&quot;true&quot; src=&quot;//speakerdeck.com/player/aa71354e8c1140278ba2ac59c4f359ae&quot; style=&quot;border:0; padding:0; margin:0; background:transparent;&quot; webkitallowfullscreen=&quot;true&quot; width=&quot;710&quot;&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://speakerdeck.com/kyuns/iqon-bigquery&quot;&gt;speakerdeck.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h2&gt;ベンチャーならではRedShiftの低コスト運用（株式会社エウレカ 鉄本環）&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;pairsではRedShiftを用いてマーケティングデータや、アルゴリズム解析をしていますが、 これを低価格で運用しているTIPSをお話いたします。&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;発表資料&lt;/h3&gt;

&lt;p&gt;&lt;iframe allowfullscreen=&quot;true&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; height=&quot;463&quot; id=&quot;talk_frame_296950&quot; mozallowfullscreen=&quot;true&quot; src=&quot;//speakerdeck.com/player/864b12be51a445e28e5513e9d3dcf821&quot; style=&quot;border:0; padding:0; margin:0; background:transparent;&quot; webkitallowfullscreen=&quot;true&quot; width=&quot;710&quot;&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://speakerdeck.com/tamaki0506/bentiyanaradehafalseredshiftdi-kosutoyun-yong&quot;&gt;speakerdeck.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h2&gt;リアルタイム分析サービス『たべみる』を支える高可用性アーキテクチャ（クックパッド株式会社 井上寛之）&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;「たべみる」は、クックパッドの検索データをウェブから分析できる法人向けのウェブサービスです。 そのアーキテクチャの特徴としてサービスのバックエンドDBとバッチの両方でRedshiftを使っていることが挙げられます。 今回は、Redshiftの可用性を高めるためのクックパッド独自のアーキテクチャについて紹介します。&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;発表資料&lt;/h3&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/3HMWdJOMwi9CkJ&quot; width=&quot;425&quot; height=&quot;355&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt;


&lt;p&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/inohiro/ebi-sta&quot; title=&quot;リアルタイム分析サービス『たべみる』を支える高可用性アーキテクチャ&quot; target=&quot;_blank&quot;&gt;リアルタイム分析サービス『たべみる』を支える高可用性アーキテクチャ&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;//www.slideshare.net/inohiro&quot; target=&quot;_blank&quot;&gt;Hiroyuki Inoue&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;h1&gt;懇親会はエビスビールとピザ＋LT！&lt;/h1&gt;

&lt;p&gt;懇親会ではピザと、恵比寿スタートアップということで&lt;b&gt;エビスビール&lt;/b&gt;をご用意しました。希望者によるLTもとても盛り上がりました。発表いただいた皆さまありがとうございました！&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150513/20150513151035.jpg&quot; alt=&quot;f:id:uzabase:20150513151035j:plain&quot; title=&quot;f:id:uzabase:20150513151035j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h2&gt;LT：GoWorker調査（大貫）&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;データ処理を支えるGoWorkerあたりの紹介など&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;発表資料&lt;/h3&gt;

&lt;p&gt;（確認中）&lt;/p&gt;

&lt;h2&gt;LT：E2D3プロジェクトの紹介（株式会社ユーザベース CTO たけうちひでゆき）&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;Excelで様々なデータ可視化を行えるようになる予定の、E2D3というオープンソースで進めているプロジェクトを紹介します。&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;発表資料&lt;/h3&gt;

&lt;p&gt;&lt;iframe src=&quot;https://www.slideshare.net/slideshow/embed_code/key/n3gL3DWPlosXlz&quot; width=&quot;427&quot; height=&quot;356&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;https://www.slideshare.net/chimerast/e2d3-47364632&quot; title=&quot;E2D3プロジェクトのご紹介@えびスタ！&quot; target=&quot;_blank&quot;&gt;E2D3プロジェクトのご紹介@えびスタ！&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;http://www.slideshare.net/chimerast&quot; target=&quot;_blank&quot;&gt;Hideyuki Takeuchi&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://www.slideshare.net/chimerast/e2d3-47364632&quot;&gt;www.slideshare.net&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h2&gt;LT：mecab-ipadic-NEologd の効果的な使い方（LINE株式会社 佐藤敏紀）&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;「mecab-ipadic-NEologd」は 形態素解析エンジン MeCab のシステム辞書である IPA 辞書を拡張するオープンソースな辞書です。大きな特徴は「大量の新語・固有表現を読み仮名付きで採録されていること」と「最低でも月二回(初旬と中旬)、辞書データが更新されること」です。またライセンスは Apache License 2.0 ですので、安心して製品開発や研究にご利用いただけます。今回は「mecab-ipadic-NEologd」を実務で使う際にどうするべきかをお伝えし、使用例のデモをご紹介いたします。&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;発表資料&lt;/h3&gt;

&lt;p&gt;&lt;iframe src=&quot;https://www.slideshare.net/slideshow/embed_code/key/xfahOOsXcA159j&quot; width=&quot;427&quot; height=&quot;356&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;https://www.slideshare.net/overlast/effective-mecabipadicneologdebisuta-1&quot; title=&quot;mecab-ipadic-NEologd の効果的な使い方&quot; target=&quot;_blank&quot;&gt;mecab-ipadic-NEologd の効果的な使い方&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;http://www.slideshare.net/overlast&quot; target=&quot;_blank&quot;&gt;Toshinori Sato&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://www.slideshare.net/overlast/effective-mecabipadicneologdebisuta-1&quot;&gt;www.slideshare.net&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;h1&gt;恵比寿スタートアップを盛り上げていきます！&lt;/h1&gt;

&lt;p&gt;スタートアップを追いかけている週アスPLUSによると、「スタートアップ集積地」として恵比寿が最近盛り上がってきているそうです。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=http%3A%2F%2Fweekly.ascii.jp%2Felem%2F000%2F000%2F334%2F334134%2F&quot; title=&quot;バイアウトが話題のエウレカほか注目企業多数！ 押さえておきたい恵比寿スタートアップ【2015年5月】&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://weekly.ascii.jp/elem/000/000/334/334134/&quot;&gt;バイアウトが話題のエウレカほか注目企業多数！ 押さえておきたい恵比寿スタートアップ【2015年5月】&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://weekly.ascii.jp/elem/000/000/334/334134/&quot;&gt;weekly.ascii.jp&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;えびスタ！では、恵比寿のスタートアップやエンジニアコミュニティを盛り上げるために今後もイベントを開催してまいります。運営する株式会社ユーザベース・株式会社ニューズピックスにご興味のある方は、以下のWantedlyなどからお気軽にご連絡ください！&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.wantedly.com%2Fcompanies%2Fuzabase-inc&quot; title=&quot;株式会社ユーザベースの最新情報 - Wantedly&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/companies/uzabase-inc&quot;&gt;株式会社ユーザベースの最新情報 - Wantedly&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/companies/uzabase-inc&quot;&gt;www.wantedly.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>「えびスタ！#2 ~大規模データの調理法~ ユーザベースxクックパッドxVASILYxエウレカxはてな」開催のお知らせ</title>
            <link>http://tech.uzabase.com/entry/2015/04/10/194732</link>
            <description>&lt;p&gt;SPEEDA/を提供する株式会社ユーザベースでは、エンジニアの技術力向上と交流を目的として「えびスタ！（恵比寿スタートアップ勉強会）」を開催しています。2015年4月23日（木）に「えびスタ #2」を開催しますのでお知らせいたします。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150410/20150410193802.png&quot; alt=&quot;f:id:uzabase:20150410193802p:plain&quot; title=&quot;f:id:uzabase:20150410193802p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;第2回となる今回は、クックパッド、VASILY、エウレカ、そして特別ゲストとして京都からはてなのエンジニアをお呼びして開催します。各社の事例をもとに、アドテクを支える技術やRedShiftの活用法などについてお話する予定です。&lt;/p&gt;

&lt;p&gt;また後半では軽食（エビスビールとピザ！）を交えたLTや交流会も開催予定です。恵比寿のスタートアップと語り合いたい、他社エンジニアと交流したいという方はぜひお気軽にご参加いただければと思います。（LT参加者も募集しています。LTしていただける方は応募時に「LTしたい！」とコメントください。）&lt;/p&gt;

&lt;p&gt;イベント詳細や申し込みについては以下の connpass ページをご覧ください。&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=http%3A%2F%2Febista.connpass.com%2Fevent%2F13953%2F&quot; title=&quot;えびスタ！#2 ~大規模データの調理法~ ユーザベースxクックパッドxVASILYxエウレカxはてな (2015/04/23 19:00〜)&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;http://ebista.connpass.com/event/13953/&quot;&gt;えびスタ！#2 ~大規模データの調理法~ ユーザベースxクックパッドxVASILYxエウレカxはてな (2015/04/23 19:00〜)&lt;/a&gt;&lt;/iframe&gt;&lt;cite class=&quot;hatena-citation&quot;&gt;&lt;a href=&quot;http://ebista.connpass.com/event/13953/&quot;&gt;ebista.connpass.com&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>IntelliJ IDEA + JRebel セミナーを開催しました</title>
            <link>http://tech.uzabase.com/entry/2015/03/30/175726</link>
            <description>&lt;p&gt; 開発チームの文字です。&lt;/p&gt;

&lt;p&gt;先週の金曜日、株式会社サムライズムの山本裕介さん（&lt;a href=&quot;https://twitter.com/yusuke&quot;&gt;@yusuke&lt;/a&gt;）に弊社オフィスまで来て頂き、IntelliJ IDEA + JRebel のセミナーを開催して頂きました。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150329/20150329161416.jpg&quot; alt=&quot;f:id:uzabase:20150329161416j:plain&quot; title=&quot;f:id:uzabase:20150329161416j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;弊社は SPEEDA /  ともにサーバーサイドの実装に Java を利用しています。私自身や一部メンバーは IntelliJ IDEA を使っているのですが、使い慣れた Eclipse を利用しているメンバーも多いため、今回 Eclipse から IntelliJ IDEA への移行を検討するためにセミナーを開いて頂きました（ちなみに iOS 開発を行っているメンバーは App Code を利用しています）。加えて、SPEEDA 開発チームで導入を検討している JRebel のデモも行って頂きました。&lt;/p&gt;

&lt;p&gt;私が Eclipse から IntelliJ IDEA に移行したのは半年ほど前ですが、既に Eclipse に戻れなくなりつつあります。要因は幾つかあるのですが、パッと思い付くところだと以下でしょうか。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;全体的に動作が軽い・速い&lt;/li&gt;
&lt;li&gt;デバッグ時の変数内容表示が使いやすい&lt;/li&gt;
&lt;li&gt;プラグインが無くてもデフォルトで様々な言語／フレームワークのサポートがある&lt;/li&gt;
&lt;li&gt;Postfix Completion が使いやすい&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;総じて何もセットアップしなくても「痒いところに手が届く」IDE になっているのが魅力だなと感じています。Eclipse 時代には何かとプラグインを自作していましたが、IntelliJ IDEA では大抵のものは標準でサポートされています。&lt;/p&gt;

&lt;p&gt;@yusuke さんのデモを見て私自身も様々な機能を知らなかったことに今更ながら気付きましたが（恥ずかしながら Chronon Debug や Live Edit・BTS 連携などは全く知りませんでした）、社内の開発メンバーも Postfix Completion を始めとした IntelliJ IDEA の様々な機能に驚きの声を上げており、本格的にチームでの導入を検討しようかという声もありました。&lt;/p&gt;

&lt;p&gt;非常に勉強になるセッションでした。@yusuke さん、本当にありがとうございました！&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>Preserving Code Quality and Save Everyone’s Time with SonarQube</title>
            <link>http://tech.uzabase.com/entry/2015/03/20/174914</link>
            <description>&lt;p&gt;Hello. I'm Jason from SPEEDA's development team&lt;/p&gt;

&lt;p&gt;A developer's work (and even life) revolves around writing and testing codes. As a developer, I, like many others, take pride in my codes which are clean, elegant, and bug-free. And so we do our best to achieve this.&lt;/p&gt;

&lt;p&gt;I must admit, though, that even as a seasoned developer, I do have some shortcomings. SonarQube classifies these shortcomings as the &quot;Seven Deadly Sins&quot; which are considered as capital sins committed by developers everyday.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Bugs and potential bugs&lt;/li&gt;
&lt;li&gt;Coding standards breach&lt;/li&gt;
&lt;li&gt;Duplicates&lt;/li&gt;
&lt;li&gt;Lack of unit tests&lt;/li&gt;
&lt;li&gt;Bad distribution of complexity&lt;/li&gt;
&lt;li&gt;Spaghetti design&lt;/li&gt;
&lt;li&gt;Not enough / too many comments&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;For more description you can visit the SonarQube: &lt;a href=&quot;http://docs.sonarqube.org/display/SONAR/Developers%27+Seven+Deadly+Sins&quot;&gt;Developers&amp;#39; Seven Deadly Sins - SonarQube - Confluence&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One way to avoid these pitfalls is through peer review. We should not be afraid to ask others to review our codes so we can be aware of our weaknesses. Similarly, we should also take the time to review other's work. This helps ensure that we deliver quality but this does not guarantee 100% error-proof codes (after all, reviewers are also humans who commit errors). They may improve 90% of the code but will still miss the remaining 10%.&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150320/20150320013622.png&quot; alt=&quot;f:id:uzabase:20150320013622p:plain&quot; title=&quot;f:id:uzabase:20150320013622p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Some people claim that the practice of peer review is a waste of precious human resource. They argue that more experienced developer can contribute more to a project through other means other than reviewing their colleagues' codes. While they may have a point, in my experience, review improves everybody's coding skills because of the reviewers give correct solutions and tips. Meanwhile, the reviewee (or the developer receiving the feedback) learns from the more-experienced colleague. This exercise becomes an avenue for knowledge sharing in the company.&lt;/p&gt;

&lt;p&gt;From the project management perspective, one would like to measure or quantify the developers' improvements in the peer review practice. But since we don't really count how many feedbacks a developer has for his code, we can't really give a number to the project managers.&lt;/p&gt;

&lt;p&gt;But I believe that these problems can be managed through a platform to manage code quality called &lt;b&gt;SonarQube&lt;/b&gt;.&lt;/p&gt;

&lt;h3&gt;What is SonarQube?&lt;/h3&gt;

&lt;p&gt;&lt;i&gt;&quot;SonarQube is the central place to manage code quality, offering visual reporting on and across projects and enabling to replay the past to follow metrics evolution.&quot;&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;It is open source, extensible with custom plugins (and we can even create one ourselves), we can integrate this with other systems (such as Jenkins), and supports 20+ programming language (In our case we will just use Java).&lt;/p&gt;

&lt;p&gt;I've actually implemented this with our current codebase and there were, indeed, some simple misses in the codes (it might have been overlooked by the reviewers). But due to confidentiality, I chose to hide the numbers and the source codes here in this entry.&lt;/p&gt;

&lt;p&gt;This is a screenshot of the dashboard of SonarQube's demo: &lt;a href=&quot;http://nemo.sonarqube.org&quot;&gt;SonarQube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150320/20150320013733.png&quot; alt=&quot;f:id:uzabase:20150320013733p:plain&quot; title=&quot;f:id:uzabase:20150320013733p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;We can see the technical debt (what the developers have to &quot;pay&quot; to fix the issues) is set to 82,176 days. Assuming that 1 person will work in 8 hours a day, it will take that developer to fix everything in 82,176 days. (And also assuming that it won't increase anymore). There are 14,937,000 lines of codes there, and 2,714,682 issues. Issues are categorized as Blocker, Critical, Major, Minor, Info. Depending on your company, you will need to determine how they should be dealt with.&lt;/p&gt;

&lt;p&gt;In the code below, you can see SonarQube gives suggestions as to the best approach for this case. Of course, SonarQube will not always be correct since we may be following the company's coding standard. We can actually adjust the rules of SonarQube to fit our company's coding standard.&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150320/20150320013957.png&quot; alt=&quot;f:id:uzabase:20150320013957p:plain&quot; title=&quot;f:id:uzabase:20150320013957p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;This is another example of a code that doesn't follow JavaBean's Naming convention and the complexity of this code is quite high based from SonarQube's  calculation.&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150320/20150320014035.png&quot; alt=&quot;f:id:uzabase:20150320014035p:plain&quot; title=&quot;f:id:uzabase:20150320014035p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;You can also assign the technical debt tasks to your teammates (You can integrate this to your JIRA or Redmine so it creates tickets which the Project Leader could also manage)&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150320/20150320014054.png&quot; alt=&quot;f:id:uzabase:20150320014054p:plain&quot; title=&quot;f:id:uzabase:20150320014054p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Here we can customized the rules SonarQube is following&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150320/20150320014111.png&quot; alt=&quot;f:id:uzabase:20150320014111p:plain&quot; title=&quot;f:id:uzabase:20150320014111p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;We can also see which codes got duplicated (or copy paste instead of refactoring and reusing the same code)&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150320/20150320014135.png&quot; alt=&quot;f:id:uzabase:20150320014135p:plain&quot; title=&quot;f:id:uzabase:20150320014135p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;And here is from another file with the same codes&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150320/20150320014147.png&quot; alt=&quot;f:id:uzabase:20150320014147p:plain&quot; title=&quot;f:id:uzabase:20150320014147p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;There are still tons of functionalities which SonarQube has but I haven't explored yet.&lt;/p&gt;

&lt;p&gt;Regarding installation, setup is a breeze so I highly recommend you try it on your codebase.&lt;/p&gt;

&lt;h4&gt;To sum up,&lt;/h4&gt;

&lt;p&gt;SonarQube is not just for developers, but for everyone involved in the project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For developers, it helps them check if their code is correct and follows the correct coding standard.&lt;/li&gt;
&lt;li&gt;For QA, it helps them check the test coverage of unit test (they make sure that every code is tested on unit level)&lt;/li&gt;
&lt;li&gt;For Architects, it helps them check if the architecture of the system is correct, and that no codes are having a spaghetti code design.&lt;/li&gt;
&lt;li&gt;For Managers, it helps them see if developers are actually improving (they can monitor if technical debt actually decreases) and can
use this for future decisions (i.e. they can delay the release of a functionality because it's technical debt is too high).&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;&quot;Quality is everyone's responsibility&quot; - Deming, W. Edwards&lt;/h4&gt;

&lt;hr /&gt;

&lt;p&gt;If you are the type of developer who takes pride in your skills and values code quality, or if you are interested in learning new and interesting technologies, then we want you!&lt;/p&gt;

&lt;p&gt;You can try checking this link &lt;a href=&quot;https://www.wantedly.com/companies/uzabase-inc&quot;&gt;&amp;#x682A;&amp;#x5F0F;&amp;#x4F1A;&amp;#x793E;&amp;#x30E6;&amp;#x30FC;&amp;#x30B6;&amp;#x30D9;&amp;#x30FC;&amp;#x30B9;&amp;#x306E;&amp;#x6700;&amp;#x65B0;&amp;#x60C5;&amp;#x5831; - Wantedly&lt;/a&gt; and give us a contact!&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title> を支えるインフラのこれから― Autoscaling を導入してみよう―</title>
            <link>http://tech.uzabase.com/entry/2015/03/12/190251</link>
            <description>&lt;p&gt;インフラ・運用を担当しているカツです。&lt;/p&gt;

&lt;p&gt;のインフラについて、今まで他の人も紹介していましたが(&lt;a href=&quot;http://tech.uzabase.com/entry/2015/03/06/180232&quot;&gt;『AWS CloudWatch Logs を  で試してみた話』&lt;/a&gt;)、
今回は、現在ののインフラを紹介するのではなく、今後、のインフラに関してやろうと思っていることをいくつか紹介しようと思います。&lt;/p&gt;

&lt;h2&gt;Autoscaling の導入&lt;/h2&gt;

&lt;p&gt;はインフラを AWS 上で運用していますが、現在はまだ完全にクラウドの強みを発揮できていません。一定数のインスタンスを運用して、時間帯によって起動するインスタンスを手動で決定しているためです。これではスマートではありません。
今後はリソース負荷状況によって自動的にインスタンスを立ち上げられるように、Autoscalingを導入しようと考えています。&lt;/p&gt;

&lt;p&gt;Autoscalingの導入はすごく簡単です。launch-configurationとauto-scaling-groupを設定すれば終わりです。コンソール画面から設定してもいいですし、コマンドでもすぐできます。&lt;/p&gt;

&lt;p&gt;launch-configurationの作成：&lt;/p&gt;

&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;aws autoscaling create-launch-configuration 
--launch-configuration-name &amp;#34;newspicks_production_lc&amp;#34;
--image-id &amp;#34;awi-xxxxxxx&amp;#34;
--security-groups &amp;#34;ApplicationServers&amp;#34;
--instance-type &amp;#34;c3.xlarge&amp;#34;
--instance-monitoring true
--no-associate-public-ip-address&lt;/pre&gt;


&lt;p&gt;auto-scaling-groupの作成：&lt;/p&gt;

&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;aws autoscaling create-auto-scaling-group
--auto-scaling-group-name &amp;#34;newspicks_production_sg&amp;#34;
--launch-configuration-name &amp;#34;newspicks_production_lc&amp;#34;
--min-size 5
--max-size 30
--desired-capacity 5
--default-cooldown 600
--availability-zones &amp;#34;ap-northeast-1a&amp;#34;
--load-balancer-names &amp;#34;production&amp;#34;
--health-check-type &amp;#34;ELB&amp;#34;
--health-check-grace-period &amp;#34;120&amp;#34;
--vpc-zone-identifier “subnet-xxxxxx”&lt;/pre&gt;


&lt;p&gt;次はScaling Plansを設定します。今で考えているPlansは下記の通りです。
Dynamic Scaling：CloudWatch Alarms（cpu、メモリ、アクセス数など）
Scheduled Scaling ：毎日の 07:30、18:30 に実行する（例）
コマンド：&lt;/p&gt;

&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;aws autoscaling put-scheduled-update-group-action --scheduled-action-name scaleup-schedule-year --auto-scaling-group-name newspicks_production_sg --recurrence &amp;#34;30 7,18 0 0 0&amp;#34; --desired-capacity 10&lt;/pre&gt;


&lt;p&gt;ただ、Autoscalingは導入が簡単ですが、今までのデプロイ方式と監視の仕組みを変えなければなりません。&lt;/p&gt;

&lt;h2&gt;デプロイについて&lt;/h2&gt;

&lt;p&gt;AMIが指定されているため、デプロイ都度でAMIを作り直すのは現実的ではない&lt;/p&gt;

&lt;h3&gt;解決案&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Warファイルなどを踏み台サーバかS3に置く&lt;/li&gt;
&lt;li&gt;Autoscalingが発生時、userdataを利用し、ファイルを持ってくる&lt;/li&gt;
&lt;li&gt;CodeDeployの採用&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;監視について&lt;/h2&gt;

&lt;p&gt;Autoscallingが発生時、起動されたインスタンスが監視対象に入れるのは間に合わない
※Newspicksはcloudwatchで監視しているため（zabbixは一部監視のみ）&lt;/p&gt;

&lt;h3&gt;解決案&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;HyClops for Zabbixプラグインを導入&lt;/li&gt;
&lt;li&gt;zabbixを廃止し、完全にCloudWatchに移行&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;また、これからさらにのインフラ基盤の自動化を進めるため、ansibleの構築コード化の採用、chatopsによって、リリース作業の簡潔化などなど常に進めています。&lt;/p&gt;

&lt;p&gt;ではエンジニアを募集しています！
各種AWSサービスを利用しながら、安定したサービス提供のための開発・運用を日々おこなっています。
興味のある方はぜひご応募待っています！&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.wantedly.com%2Fprojects%2F11448&quot; title=&quot;100年に一度のメディア変革期！世界一のニュースプラットフォームを創ろう by 株式会社ユーザベース&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/projects/11448&quot;&gt;100年に一度のメディア変革期！世界一のニュースプラットフォームを創ろう by 株式会社ユーザベース&lt;/a&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.wantedly.com/projects/11448&quot;&gt;100&amp;#x5E74;&amp;#x306B;&amp;#x4E00;&amp;#x5EA6;&amp;#x306E;&amp;#x30E1;&amp;#x30C7;&amp;#x30A3;&amp;#x30A2;&amp;#x5909;&amp;#x9769;&amp;#x671F;&amp;#xFF01;&amp;#x4E16;&amp;#x754C;&amp;#x4E00;&amp;#x306E;&amp;#x30CB;&amp;#x30E5;&amp;#x30FC;&amp;#x30B9;&amp;#x30D7;&amp;#x30E9;&amp;#x30C3;&amp;#x30C8;&amp;#x30D5;&amp;#x30A9;&amp;#x30FC;&amp;#x30E0;&amp;#x3092;&amp;#x5275;&amp;#x308D;&amp;#x3046; - &amp;#x682A;&amp;#x5F0F;&amp;#x4F1A;&amp;#x793E;&amp;#x30E6;&amp;#x30FC;&amp;#x30B6;&amp;#x30D9;&amp;#x30FC;&amp;#x30B9;&amp;#x306E;&amp;#x6C42;&amp;#x4EBA; - Wantedly&lt;/a&gt;&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>AWS Cloudwatch Logsをで試してみた話</title>
            <link>http://tech.uzabase.com/entry/2015/03/06/180232</link>
            <description>&lt;p&gt;こんにちは、開発・運用を担当している木下です。&lt;br/&gt;
今回はAWS CloudWatch Logsを利用した運用周りの改善について社内LTした内容をベースにブログにまとめました！&lt;/p&gt;

&lt;p&gt;はインフラを完全にAWS上で運用しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://aws.amazon.com/jp/solutions/case-studies/newspicks/&quot;&gt;AWS &amp;#x5C0E;&amp;#x5165;&amp;#x4E8B;&amp;#x4F8B;: &amp;#x682A;&amp;#x5F0F;&amp;#x4F1A;&amp;#x793E;&amp;#x30E6;&amp;#x30FC;&amp;#x30B6;&amp;#x30D9;&amp;#x30FC;&amp;#x30B9; | &amp;#x30A2;&amp;#x30DE;&amp;#x30BE;&amp;#x30F3; &amp;#x30A6;&amp;#x30A7;&amp;#x30D6; &amp;#x30B5;&amp;#x30FC;&amp;#x30D3;&amp;#x30B9;&amp;#xFF08;AWS &amp;#x65E5;&amp;#x672C;&amp;#x8A9E;&amp;#xFF09;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;監視については、APIから発生したエラーはAmazon SESを使用してメールにて通知、リソース監視はCloudWatchを利用しています。&lt;br/&gt;
CloudWatchは任意のメトリクス（計測値）をアップロードし、それに対して閾値を設定し、AmazonSNSを利用してエラー通知をしたり、AutoScalingを利用してインスタンスを立ち上げたりといったアクションが取れます。&lt;br/&gt;
AWSを利用すると、標準でEC2インスタンスのCPU使用率やネットワークトラフィック、SQSのキューサイズ、などなど必要最低限のメトリクスが自動でアップロードされます。
CloudWatchはデフォルトで提供されているメトリクスの監視だけでなく、スクリプトを作成してカスタムメトリクスをアップロードすることもできます。&lt;br/&gt;
では、ディスク使用率、メモリ使用率、サーバーサイドがJavaを使用しているためVMの情報などをCloudWatchにアップロードし、適宜アラームを設定して監視を行っています。&lt;/p&gt;

&lt;p&gt;CloudWatchはAWSから標準で提供されているメトリクスのようなリソース監視には向いています。&lt;br/&gt;
ただし、システム監視は定期的に発生するリソース監視だけでは不十分です。&lt;br/&gt;
例えば不定期に発生するイベントの監視をするにはCloudWatchだけで提供される機能では難しく、別のログ監視のシステムを利用するのが一般的かと思います。&lt;br/&gt;
CloudWatchが提供しているアラーム機能は便利なため、カスタムメトリクスのアップロードスクリプトを工夫していたりもするかもしれません。&lt;/p&gt;

&lt;p&gt;そこで、昨年サービスインし、12月からは東京リージョンでも利用可能となったAWS CloudWatch Logsを試してみました。&lt;/p&gt;

&lt;h5&gt;インストール&lt;/h5&gt;

&lt;p&gt;既存サーバーへのインストールは、下記のpythonスクリプト実行で一発完了でした。&lt;/p&gt;

&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
sudo python ./awslogs-agent-setup.py --region north-east-1&lt;/pre&gt;


&lt;p&gt;このスクリプトで、インストール、デーモン化、対話式でログアップロードの設定までできます。&lt;br/&gt;
chkconfigで起動時設定に入れれば、インスタンスの起動時からログがアップロードされる設定が動きます。&lt;/p&gt;

&lt;h5&gt;設定ファイル情報&lt;/h5&gt;

&lt;p&gt;対話式で設定した内容は/var/awslogs/etc/awslogs.confに格納されます。&lt;/p&gt;

&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;[/var/log/nginx/access.log]
datetime_format = %Y-%m-%d %H:%M:%S
file = /var/log/nginx/access.log
buffer_duration = 5000
log_stream_name = {hostname}
initial_position = start_of_file
log_group_name = access_log&lt;/pre&gt;


&lt;p&gt;直接設定ファイルを変更して追記することもできます。&lt;br/&gt;
同一のLogGroup名で異なるEC2インスタンス（異なるLogStream）から情報をアップすると、LogGroup単位でフィルタリングしたりの操作ができます（後述）&lt;/p&gt;

&lt;p&gt;対話式or設定ファイルに記載すると、しばらくするとAWS Console上でログが確認できるようになります。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150303/20150303013326.png&quot; alt=&quot;f:id:uzabase:20150303013326p:plain&quot; title=&quot;f:id:uzabase:20150303013326p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h5&gt;ログの保持期間&lt;/h5&gt;

&lt;p&gt;CloudWatchのメトリクスは保持期間が2週間でしたが、CloudWatch LogsではLog Groupsの保持期間として1日〜10年、または有効期限なしが設定可能になりました。&lt;br/&gt;
やはりログをアップロードするとなると、長く保持できるのは助かります。&lt;br/&gt;
（ただし、後述するFilterによってアップロードされるメトリクスの保持期間は選べません）&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150303/20150303013441.png&quot; alt=&quot;f:id:uzabase:20150303013441p:plain&quot; title=&quot;f:id:uzabase:20150303013441p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h5&gt;Filterの設定&lt;/h5&gt;

&lt;p&gt;このアップロードされたログからFilterを作成すると、CloudWatchにメトリクスとしてアップロードされます。&lt;/p&gt;

&lt;p&gt;設定例1) ログからERRORを抜き出す&lt;br/&gt;
ログから単純に文言をgrepするようなFilterです。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150303/20150303014218.png&quot; alt=&quot;f:id:uzabase:20150303014218p:plain&quot; title=&quot;f:id:uzabase:20150303014218p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;設定例2) HTTPステータスが200で、応答時間が1秒以上のログを抜き出す&lt;br/&gt;
スペース区切りのログについては、パターン指定して値を抜き出すこともできます。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150303/20150303014457.png&quot; alt=&quot;f:id:uzabase:20150303014457p:plain&quot; title=&quot;f:id:uzabase:20150303014457p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;上記のようなFilterを作成し、右下のTest Patternボタンを押すとどのログがヒットするかも事前にテストできるので、操作はとても簡単でした。&lt;br/&gt;
このFilterの結果をCloudWatchメトリクスとしてアップロードすることができます。&lt;br/&gt;
単純なgrepの場合は、事象が発生すると1とカウントされますが、パターン指定した場合はマッチしたパターンをメトリクスとすることもできるようです。&lt;br/&gt;
（◯◯秒以上かかった処理時間のみをメトリクスとして記録、のような）&lt;br/&gt;
メトリクスからアラームを作成する部分は、通常のCloudWatchと同様です。&lt;/p&gt;

&lt;h5&gt;まとめ&lt;/h5&gt;

&lt;p&gt;ログから事象を発生ベースでメトリクスとして記録する部分がかなり簡易化されました。&lt;br/&gt;
今まで定常的なリソース監視に使用していたCloudWatchを、不定期に発生するイベントの監視としても使いやすくなりました。&lt;br/&gt;
設定、操作もかなり簡単なので、今まで手作りのスクリプトで監視していた部分を一部移行できそうです。&lt;br/&gt;
今後の改善要望としては、ログを時間でしか検索できない部分や、Filterがスペース区切りにしか対応していない部分（正規表現で後方参照したい・・・）などが改善されるとさらに使いやすくなると思います。&lt;/p&gt;

&lt;p&gt;ではエンジニアを募集しています！&lt;br/&gt;
各種AWSサービスを利用しながら、安定したサービス提供のための開発・運用を日々おこなっています。&lt;br/&gt;
興味のある方はぜひご応募待っています！&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.wantedly.com%2Fprojects%2F11448&quot; title=&quot;100年に一度のメディア変革期！世界一のニュースプラットフォームを創ろう by 株式会社ユーザベース&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/projects/11448&quot;&gt;100年に一度のメディア変革期！世界一のニュースプラットフォームを創ろう by 株式会社ユーザベース&lt;/a&gt;&lt;/iframe&gt;&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>情報技術との向き合い方：SPEEDA/を支える価値を生み出す技術の選定手法</title>
            <link>http://tech.uzabase.com/entry/2015/03/02/180612</link>
            <description>&lt;p&gt;UZABASE技術チーム竹内(@chimerast)です。&lt;/p&gt;

&lt;p&gt;ちょっと時間がたってしましましたが、2月7日に&lt;a href=&quot;http://eventdots.jp/event/309318&quot;&gt;dots. Summit 2015&lt;/a&gt; にて、ポエム「&lt;a href=&quot;http://www.slideshare.net/chimerast/speedanewspicks&quot;&gt;SPEEDA/を支える価値を生み出す技術の選定手法&lt;/a&gt;」を発表してきたのでその内容をもう少し突っ込んで書いてみたいと思います。&lt;/p&gt;

&lt;p&gt;今回は、特定の技術や知見のことは全く話さず、何のために技術があるのかという、それ以前の話をしてきました。エンジニアとして、技術を追い求めることはとても大切なことですが、目的を見誤ってしまうと独りよがりになる可能性もありますし、変な方向に技術が伸びてしまいます。&lt;/p&gt;

&lt;p&gt;僕は、多くの人に使われたり影響を与える、末永い良い製品・技術を生み出すには、目的はなんなのか見極めることが重要だと思っています。製品であればその価値が生み出す世界を想像し、技術であれば問題の本質とは何なのかを探求することです。&lt;/p&gt;

&lt;p&gt;発表の後、社外の人何人かからフィードバックをもらい、とても心に響いたという人や、是非資料を社内で展開させてもらいたいという話ももらいましたが、そんなの当たり前だよという人や、そんなことどうでもよいという人も多いんじゃないかと考えながら発表資料を作っていました。ただ、僕自身そしてユーザベースがとても大切にしていることなので話をさせてもらいました。&lt;/p&gt;

&lt;p&gt;ブログにも全内容を書きたかったのですが、前半の価値の話はブログ向きではない気がしたので後半の技術の話について書こうと思います。前半の話は、興味があれば&lt;a href=&quot;http://www.slideshare.net/chimerast/speedanewspicks&quot;&gt;スライド&lt;/a&gt;を見てください。&lt;/p&gt;

&lt;h2&gt;対象読者&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;プログラミングを学び始めたばかりの人&lt;/li&gt;
&lt;li&gt;情報科学をあまり勉強したことがない人&lt;/li&gt;
&lt;li&gt;新しい技術スゲーって言ってる人&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;tl;dr&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;製品を考えるのも技術を勉強するのもその目的を見極めるのがとても大事だよ

&lt;ul&gt;
&lt;li&gt;その技術が解決しようとする問題を先に考えることで技術の理解が早くなるよ&lt;/li&gt;
&lt;li&gt;複数の技術を組み合わせると具合がとても良いよ&lt;/li&gt;
&lt;li&gt;色んな分野の技術を沢山見ると新しい技術の理解が早くなるよ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;よりよい価値を早く届けるために正しく技術を使う&lt;/h2&gt;

&lt;p&gt;技術とはなにかについて考えるとき、「よりよい価値を早く届けるために正しく技術を使う」と考えることが僕にとってはしっくりきます。特に「正しく技術を使う」というところはいつも気にしています。&lt;/p&gt;

&lt;p&gt;技術は正しい使い方をしなかったり、的外れな技術を新たに生み出しても、なにかしらモノが出来てしまうことがあります。ただ、その状態で「よりよい価値を早く届ける」という点を達成していることはまれだと思っています。&lt;/p&gt;

&lt;p&gt;また、手段が目的になってしまっているのを見ると非常に残念に思います。正しい価値を早く届けるためにアジャイル手法を使うのは賛成ですが、その手法に固執しすぎてその目的がないがしろにされている例をたまに見ます。必要であればウォーターフォール気味にやるくらいの気持ちでゆるくやった方が良いと考えています。正直、サービスの基盤の設計からアジャイルでやるのはなんかおかしいと思っていて、経験上、基盤を始めにかっちり設計して作っておいたほうが、上でアジャイルやらスクラムっぽいものがくるくる綺麗にまわる気がしています。&lt;/p&gt;

&lt;p&gt;正しい技術の話をするにあたって、先に新しい技術の事に少し触れます。&lt;/p&gt;

&lt;h3&gt;技術パラダイム「アタラシイギジュツ」に惑わされない&lt;/h3&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/c/chimerast/20150227/20150227200112.png&quot; alt=&quot;f:id:chimerast:20150227200112p:plain&quot; title=&quot;f:id:chimerast:20150227200112p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ネットを見ていたり勉強会に出て話を聞いていたりすると、常に新しい技術の話が出てきます。どこそこのサービスはこの新しい技術を使っていてすごい、みたいな話がわさわさ出てきます。&lt;/p&gt;

&lt;p&gt;ただ、ここで気をつける必要があるのは、「新しい技術」だからそのサービスが多くの人に使われている(売れている)のとは違うということをちゃんと認識するべきです。「新しい技術」が「新しい価値」を生み出した結果、ユーザが増えます。「新しい価値」が間に挟まらなければユーザは増えません。&lt;/p&gt;

&lt;p&gt;新しい技術だからという理由だけですぐ飛びついて使い始めてしまうのは、一番やってはダメなことです。新しい技術なんて次々と出てきます。&lt;/p&gt;

&lt;h3&gt;「アタラシイギジュツ」と正しく向き合うために&lt;/h3&gt;

&lt;p&gt;新しい技術と正しく向き合うためには、それがなんなのかということを考えるのが一番良いです。&lt;/p&gt;

&lt;p&gt;よく言われることですが、情報技術はパラダイムを行ったり来たりしながら発展してきた歴史があります。パラダイムとまでは言わないまでも小さな流行についても行ったり来たりしながら発展していきます。&lt;/p&gt;

&lt;p&gt;例えば、コンピュータの歴史は、分散と集約の歴史です。トランジスタ(真空管?)に始まり、現在のクラウドによる集約まで、分散と集約を何度も繰り返しています。&lt;/p&gt;

&lt;p&gt;ここで重要なのは、それぞれの分散フェーズ、集約フェーズでは同じような考え方に基づいた技術が使われたり生まれてたりしていることです。分散フェーズだったら前の分散フェーズのことが、集約フェーズだったら前の集約フェーズの考え方がある程度通用します。&lt;/p&gt;

&lt;h3&gt;情報技術の世界では歴史がよく繰り返す&lt;/h3&gt;

&lt;p&gt;情報技術の世界では、よく歴史が繰り返されます(自分もまだ30代のペーペーなので歴史を話すのもなんですが)。歴史を繰り返しながら、前の歴史よりは少しずつ良くなっていきます。&lt;/p&gt;

&lt;p&gt;新しい言語が生まれると別の言語での考え方が持ち込まれて同じようなものが構築されたり、新しいOSが生まれると別の似たOSの考え方が持ち込まれたりします。新しいプラットフォームが生まれると似たような周辺技術が周りに次々立ちます。&lt;/p&gt;

&lt;p&gt;最近のiOSやAndroidで話題になる技術や手法を見ていると、なんか十数年前にWindowsで見たなというモノがあったり、最近話題のJavascriptのフロントエンド技術も数年前にJavaやRubyで見たことあったりよくします。IoTの話なんかも一昔前にユビキタスの人たちが言っていたことが多かったり、Dockerなんかもその基礎のコンテナ技術は元をたどれば、1980年代のchroot jailで、何度かVPSやなんやらを経た結果だったりします。Deep Learningも...。挙げればきりが無いです。&lt;/p&gt;

&lt;p&gt;とにかくこの情報技術の世界は、再発見がとても多いです。ある技術が他の技術の流行・発展によって再発見が起きたり、ハードウェア性能の向上によって再発見が起きたりします。アカデミックの世界のモノが、周回遅れで現場に降りてきて流行が起きるという事もあります。&lt;/p&gt;

&lt;h3&gt;技術スパイラルに向き合う&lt;/h3&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/c/chimerast/20150228/20150228233759.png&quot; alt=&quot;f:id:chimerast:20150228233759p:plain&quot; title=&quot;f:id:chimerast:20150228233759p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;技術はスパイラル状に発展していくととらえることが出来ます。スパイラルといっても、進行方向の技術の飛びは大きいけど、隣り合う線の飛び幅は小さいスパイラルです。かつ、重要なのは、ある分野のスパイラルに出てくるパラダイム(流行)系統の数はそんなに多くないことです。&lt;/p&gt;

&lt;p&gt;技術スパイラルの進み方は、隣り合う線(同系統のパラダイム)から最も影響を受け、時間軸で直近の別系統のパラダイムからも影響を受けます。&lt;/p&gt;

&lt;p&gt;歴史をよく知らない新しく情報技術に触れ始めた人が、パラダイムの移動を経験すると、なんか全然違う新しい概念が出てきたように見えてしまうことがあるのですが、進行方向の飛びが大きいだけで、過去を見ると大体その基となる技術があります。そして、その基となる技術からの差分はそんなに大きく無いです。&lt;/p&gt;

&lt;p&gt;また、誰も見たり聞いたことも無いような技術がスパイラル上にいきなり出てくることはないです。必ず何かの考え方をベースにしており、全然別の学問で確立されている技術や事実が元になっていることも多いです(情報科学の分野のアルゴリズムには自然科学から入ってきたものもちらほらありますね。将棋ソフトのBonanzaなんかも面白い例だと思います)。&lt;/p&gt;

&lt;p&gt;誰も見たことも聞いたこともない新しい技術は、基本詐欺かダメな技術です。&lt;/p&gt;

&lt;h3&gt;技術を正しく使う・作る&lt;/h3&gt;

&lt;p&gt;新しい技術というものの正体についてみたところで、技術を正しく使うとはどういうことなのか考えてみます。&lt;/p&gt;

&lt;p&gt;技術は、世の中になにかしらの問題がありそれを解決する為に生まれます。逆に技術が解決しようとしている問題を知ることが出来れば、その技術が何をするものためのものなのかすんなり理解することが出来ます。&lt;/p&gt;

&lt;p&gt;この関係を認識することで、自分自身が問題に直面したときに、どの技術を選択すれば良いかの基準ができます。&lt;/p&gt;

&lt;p&gt;新しい技術も何か特定の問題があって生まれてくるもので、新しい技術が過去の全ての問題を解決してくれると考えるのは、一番間違った考え方です。&lt;/p&gt;

&lt;h3&gt;技術に無理させない&lt;/h3&gt;

&lt;p&gt;技術は基本的に特定の問題に対する解決策として生まれます。逆にその問題以外を解くのには適していない事が多いです。&lt;/p&gt;

&lt;p&gt;技術は特化されたものであるほど、対象がはまれば、より良く早く問題を解決することが出来ます。そのかわりに、他の問題に適用しづらくなります。ここを勘違いして、この問題がとても早く解けたのだから、他の問題も早く解けるだろうと考えてしまうのは間違いです。&lt;/p&gt;

&lt;p&gt;例えば、世の中には汎用言語と半特化型言語(DSLまではいかないやつ)があります。&lt;/p&gt;

&lt;p&gt;Javaは汎用言語で、どんな問題も無難に解決し、それなりに高速に動作しますが、対象によっては他の言語で書く方が簡潔に書けたり、速度が速かったりします。&lt;/p&gt;

&lt;p&gt;PHP(Hypertext Preprocessor)は汎用言語の皮を被った半特化型言語です。HTML(Hypertext Markup Language)を出力することを主目的とする言語です。ちょっとした動的なHTMLを吐き出すことなら、PHPはとても正しい選択肢です。正直、実際にのWeb版を始めに作るときにRESTful APIを叩くだけのフロントとしてPHPを使うことを僕は提案していました（外部に協力を依頼しやすいとか、デザイナと連携しやすいとかといった理由もあります）。他のエンジニアに全力で拒否されましたが。&lt;/p&gt;

&lt;p&gt;ただ、多くの人がご存じの通り、PHPで大きなシステムを作ったりするのは大変です。HTMLと全然関係無いバッチを書いたりするのは狂気の沙汰だと思っています。これはPHPがHTMLに対する半特化型言語であることを考えれば当たり前のことです。&lt;/p&gt;

&lt;h3&gt;技術を組み合わせることを覚える&lt;/h3&gt;

&lt;p&gt;作るシステムを複数の問題に正しく分割し、それぞれの問題に対して得意な技術を割り当ると、非常に高速に開発することが出来ます。作らなければならない部分も減るので、生み出すバグも少なくなります。&lt;/p&gt;

&lt;p&gt;例えば、プログラムを書いて作るものが難しいものでも、インフラの技術で簡単に解決ができるものが多々あります。RDBMSが無い、データ管理を自分で書かなければならない世界を考えてください。RDBMSは一番わかりやすい技術を組み合わせる例です。&lt;/p&gt;

&lt;p&gt;また、機械学習系のライブラリはPythonがとても充実しています。それだったら、機械学習の部分はPythonで書いてJavaなりRubyから呼び出す形にすれば良いと思います。全部一つの言語でやる必要は無いです。&lt;/p&gt;

&lt;p&gt;複数の技術を使うことでその学習コストはどうするんだという話を良く聞かれますが、正しく切り出された問題に正しい技術を割り当てれば、それを解決するために必要な学習コストは非常に低いです。技術のチュートリアルを読んでこれはすごいと思うことが良くあると思いますが、その感覚です。&lt;/p&gt;

&lt;p&gt;逆に、適していない問題を解決する方法を学習しようとするとコストが跳ね上がります。そもそもその技術が想定していない問題を解こうとした場合です。例えば、トランザクションが必要な問題をNoSQLと呼ばれるデータベースで考えようとするととたんに難しくなります。&lt;/p&gt;

&lt;h3&gt;たくさんの違う分野の技術を知ろう&lt;/h3&gt;

&lt;p&gt;技術を組み合わせるためには、複数の技術のことを知り、それぞれの得意な問題を理解する必要があります。&lt;/p&gt;

&lt;p&gt;一から自分の知らない技術を知ることは非常に大変に見えるかもしれませんが、先ほどの技術スパイラルの話の通り、それぞれの技術は何らかの関係があります。基礎の部分をちゃんと押さえておけば、差分を意識すると実はそんなに学習するのは大変ではありません。ある一つの言語をそれなりに極めていれば、他の言語に移るときは低いコストで移れますよね。&lt;/p&gt;

&lt;p&gt;重要なのは基礎の部分をちゃんと押さえることです。それについては先ほどの通り、解決しようとしている問題を認識することが近道です。&lt;/p&gt;

&lt;p&gt;また、同じような問題を解決しようとしている技術をたくさん知ってもあまり意味はありません。たいてい同じような解決法が返ってきます。もし、手続き型言語を勉強したなら、その後は関数型言語、論理型言語、もしくはDSLの作り方等、全然違う系統の言語を学ぶべきです。言語から離れてインフラの知識を身につけるのも良いかもしれません。分散処理向けの言語の考え方が身につくかもしれません。なんにせよそこで得た知識や考え方は元の手続き型言語に戻ったときにも無駄になることなく生きてきます。&lt;/p&gt;

&lt;p&gt;上でも少し触れましたが、一つの分野のスパイラルに出てくる押さえておくべき技術パラダイム系統の本数は少ないです。10もあれば多い方だと思います。効率よく学ぶとそんなに苦もなくそれっぽく身につく気がします。くどいようですが、同じ系統の技術を学んでも知識の幅は広がりません。また、ざっと俯瞰する場合は深く調べ始めると泥沼にはまるので、解決しようとしている問題とその解決方法の組み合わせがわかったら次に行った方が良いかもしれません。細かい所については、基礎さえ押さえておけば類推出来ます。実際に使うときに深く調べたのでも遅くないです。&lt;/p&gt;

&lt;h3&gt;技術を多く知るということ&lt;/h3&gt;

&lt;p&gt;技術は多くの種類を知れば知るほど、新しいものを学習するコストがどんどん下がっていきます。スパイラルの話で書いたとおり、基本的に情報技術は組み合わせとほんの少しの差分で生まれます。ある程度知ると、この技術はあれと、これと、それから影響を受けているんだなとわかるようになります。新しい技術が出てきてもあまりビックリしなくなります。&lt;/p&gt;

&lt;p&gt;また、逆を考えると、多くの種類を知れば知るほど新しい技術も生み出しやすくなります。何か問題にぶち当たったときに、技術を組み合わせて新しい解決方法を生み出すというのは良くあることです。&lt;/p&gt;

&lt;h2&gt;まとめ&lt;/h2&gt;

&lt;p&gt;ユーザベースでは、「ユーザの理想から始める」というルールがあります。これは、ユーザに届ける価値を考えるのが先、ただ、それを考えることで良い技術が育つ、という思いも込められています。目的を考えることで、それにふさわしい広く使われる正しい技術が生まれると考えています。&lt;/p&gt;

&lt;p&gt;技術チームでは、新しいものを作るときには使ったことのない技術を使うことを推奨しています。新しい考え方に触れることで、視野が広がります。&lt;/p&gt;

&lt;p&gt;ただし、&lt;strong&gt;使う技術が問題を解くのにふさわしいか&lt;/strong&gt;必ず考えるという条件をつけています。新しい技術でなんか流行っているからという理由だけで、的外れな対象に対して技術を適用すると全力で叩きます。マサカリ投げます。&lt;/p&gt;

&lt;p&gt;ユーザベースでは、正しく「技術」を使い、創り、「価値」を高速に創造し届けることを心がけています。&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>Apache Wicketのイベントシステム徹底活用（実用サンプルもあるよ）</title>
            <link>http://tech.uzabase.com/entry/2015/02/18/180705</link>
            <description>&lt;p&gt;SPEEDAの開発してます矢野です。社外から参画してます。SPEEDAを書いてないときは、最近はClojureを書いています。&lt;/p&gt;

&lt;p&gt;SPEEDAではApache Wicketを使っています。バージョンも順調に挙げられているので、Wicket 5から導入されたイベントシステムも、最近はかなり活用しています。イベントシステムについてはドキュメントも少なく活用方法がよくわからない、という話もあるようなので、活用方法を紹介します。&lt;/p&gt;

&lt;h1&gt;まずは手始めに&lt;/h1&gt;

&lt;p&gt;Wicketのあらゆるコンポーネント（つまり、Componentのサブクラス）は、イベントの送信者と受信者になることができます。
イベントの送信には、Component#send を使います。&lt;/p&gt;

&lt;pre class=&quot;code lang-java&quot; data-lang=&quot;java&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;final&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span class=&quot;synType&quot;&gt;void&lt;/span&gt; send(IEventSink sink,
                           Broadcast type,
                           T payload)
&lt;/pre&gt;


&lt;p&gt;どのコンポーネントに対してsend()を呼び出すかは、実は重要ではありません。重要なのは、引数のsinkです。イベントは、このsinkに対して送信されます。
そしてpayloadが、送信されるオブジェクトです。「イベント」と呼んで良いかと思いますが、実際にはなんでも、どんなオブジェクトでも送信できます。&lt;/p&gt;

&lt;p&gt;そして、イベントを受け取ったsinkを起点にして、typeで指定した方法で、イベントがコンポーネントツリーに伝播します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Broadcast.BREADTH  幅優先&lt;/li&gt;
&lt;li&gt;Broadcast.DEPTH 深さ優先&lt;/li&gt;
&lt;li&gt;Broadcast.BUBBLE  遡り&lt;/li&gt;
&lt;li&gt;Broadcast.EXACT 特定sink限定&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;詳しい解説はBroadcastクラスのJavadocに書かれているのですが、英語が苦手でも、ちゃんと数値でどの順序にイベントが伝播するか書かれているので、わかりやすいと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ci.apache.org/projects/wicket/apidocs/6.x/org/apache/wicket/event/Broadcast.html#BREADTH&quot;&gt;Broadcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一番多く使うのは、コンポーネントをsinkとしてイベントを送ると、自分自身と、そのすべての子コンポーネントに、幅優先でイベントを伝播させるBREADTHでしょう。というか、ほとんどこれしか使わないように思います。特別に深さ優先が必要だったり(DEPTH)、そもそも伝播して欲しくなかったり(EXACT)するシーンだけ変えるくらい。&lt;/p&gt;

&lt;p&gt;さて、イベントが伝播する途中にいるコンポーネントはすべて、伝播していくイベントを補足できます。そのためには、Componentの &lt;code&gt;onEvent&lt;/code&gt; をオーバーライドします。&lt;/p&gt;

&lt;pre class=&quot;code lang-java&quot; data-lang=&quot;java&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;void&lt;/span&gt; onEvent(IEvent&amp;lt;?&amp;gt; event)
&lt;/pre&gt;


&lt;p&gt;&lt;code&gt;IEvent#getPayload()&lt;/code&gt;を使って、sendに渡したpayloadオブジェクトを取得できます。あとは、このpayloadが、処理したいオブジェクトかどうかチェックして、そうであれば処理すればいいし、そうでなければ単に捨てればいいのです。いずれにせよ、イベントは次のコンポーネントに伝播します。&lt;/p&gt;

&lt;h2&gt;問題&lt;/h2&gt;

&lt;p&gt;ところが、この&lt;code&gt;onEvent&lt;/code&gt;が実にダサい。payloadオブジェクトの種類によって地道にチェックするしかないので、結局、次のようなコードになってしまいます。&lt;/p&gt;

&lt;pre class=&quot;code lang-java&quot; data-lang=&quot;java&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;void&lt;/span&gt; onEvent(IEvent&amp;lt;?&amp;gt; event) {
    Object payload = event.getPayload();
    &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; (payload &lt;span class=&quot;synStatement&quot;&gt;instanceof&lt;/span&gt; MyEvent) {
        MyEvent myEvent = ((MyEvent) payload);
        &lt;span class=&quot;synComment&quot;&gt;// なにかmyEventを使ったすごいCoolな処理&lt;/span&gt;
    }
}
&lt;/pre&gt;


&lt;p&gt;instanceOfでクラスチェックして、キャストして…ダサさのオンパレードで大変です。でもWicketのデフォルトのイベント補足システムは、この&lt;code&gt;onEvent&lt;/code&gt;しかありません！&lt;/p&gt;

&lt;p&gt;ところで、イベントの送信側も受信側も自分で書いたプログラムであれば、他からイベントが来ることもないし、どのイベントpayloadかも把握できているわけですから、チェックせずにすぐにキャストしても良さそうに思えます。この戦術はうまくいきません。WicketのイベントシステムはWicketフレームワーク内部でも使われていて、各コンポーネントは、フレームワークが送信するイベントを受け取っています。それらと区別するためにも、必ずpayloadの種類をチェックする必要があります。&lt;/p&gt;

&lt;h2&gt;ならば書けばよいのだ&lt;/h2&gt;

&lt;p&gt;さすがにいろんなところに、こんなinstanceofとか書いてられません。
幸い、Wicketにはイベント補足システムを拡張する仕組みがあります。&lt;code&gt;IEventDispatcher&lt;/code&gt;というインタフェースがその役目を担います。このインタフェースには、次のようなメソッドが一つだけ定義されています。&lt;/p&gt;

&lt;pre class=&quot;code lang-java&quot; data-lang=&quot;java&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;void&lt;/span&gt; dispatchEvent(Object sink,
                   IEvent&amp;lt;?&amp;gt; event,
                   Component component)
&lt;/pre&gt;


&lt;p&gt;次のように、IEventDispatcherを実装したインスタンスをApplicationのFrameworkSettingsに追加することで、イベントがコンポーネントに届いた時に、どのようにして、どんなメソッドを呼び出すのかを細く制御できます。&lt;/p&gt;

&lt;pre class=&quot;code lang-java&quot; data-lang=&quot;java&quot; data-unlink&gt;getFrameworkSettings().add(&lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; MyGreatEventDispatcher());
&lt;/pre&gt;


&lt;p&gt;SPEEDAでは、この機能を利用して、次のようなイベント補足メソッドをサポートしています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アノテーションを指定することで、どんな名前のメソッドであれイベント補足メソッドになれる&lt;/li&gt;
&lt;li&gt;イベント補足メソッドは一つのクラスにいくつでも書くことができる&lt;/li&gt;
&lt;li&gt;イベント補足メソッドはprivateメソッドでも良い&lt;/li&gt;
&lt;li&gt;イベントディスパッチャは、イベント補足メソッドの引数の型を見て、送信されたpayloadの型が引数と合致するときに、そのメソッドを呼び出す&lt;/li&gt;
&lt;li&gt;イベントディスパッチャは、どのクラスがどのようなイベント補足メソッドを持っているか、記憶する&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;この独自のIEventDispatcher実装によって、SPEEDAでは、次のようにイベント補足メソッドを気軽に設定できています。&lt;/p&gt;

&lt;pre class=&quot;code lang-java&quot; data-lang=&quot;java&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;@EventHandler&lt;/span&gt;
&lt;span class=&quot;synType&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;void&lt;/span&gt; onConditionChanged(CriteriaChanged event) {
    AjaxRequestTarget target = event.getTarget();
    target.appendJavaScript(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;showOverlay()&amp;quot;&lt;/span&gt;);
}
&lt;/pre&gt;


&lt;p&gt;&lt;code&gt;@EventHandler&lt;/code&gt;アノテーションをつけることで、イベント補足メソッドを作ることができます。上記のメソッドは、イベントpayloadがCriteriaChangedだったときに呼び出されます。もう、ダサいinstanceofやキャストとはおさらばです。そのようなチェックはイベントディスパッチャが肩代わりして、すでに解決済みキャスト済みのオブジェクトが引数に渡されるのです。&lt;/p&gt;

&lt;h2&gt;配布してます&lt;/h2&gt;

&lt;p&gt;このイベントディスパッチャは、私が個人で作って使って公開していたものを、少々改造して使い回しているもので、Apache Licenseでもともと公開されていました。今回、新たにgistに公開したので、欲しい方はご自由に活用ください。ファイルは二つだけです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/tyano/d953c2e27bb97b0c9d97&quot;&gt;AnnotationEventDispatcher.java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/tyano/7c2f5a216b23224fff1a&quot;&gt;EventHandler.java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;コンポーネントの疎結合とクラス定義のコツ&lt;/h2&gt;

&lt;p&gt;Wicketはもともと、HTTPの上でありながら、仮想的なオブジェクト指向環境を作り出すことで、デスクトップアプリケーションのようにウェブアプリケーションを開発できるのがウリです。独特のコンポーネントのパッケージ技術により、コンポーネントはCSSやJavaScriptとともに「ひとまとまりとして」配布できました。&lt;/p&gt;

&lt;p&gt;ただ、コンポーネントに発生する事象（イベント）をコンポーネントユーザに伝える手段にかけていて、習慣的には、&lt;code&gt;onSelected&lt;/code&gt; といった、頭にonをつけたabstractメソッドを定義し、ユーザにオーバーライドしてもらうことで、ユーザに制御を移していました。いわば、ここだけは他のクラスと密結合しているのです。&lt;/p&gt;

&lt;p&gt;Wicket 5によってイベントシステムが導入されて以降、実は、コンポーネントは「クラス」「HTML」「CSS」「Javascript」に加え「イベントクラス」とパッケージ化して配布することができるようになりました！例えばダイアログを閉じた時、ユーザが項目を選んだ時などなど、そのための（オーバーライド可能）メソッドを書く代わりに、専用のpayloadを送信すればいいのです。何をしたらどのようなpayloadが送信されるかをクラスの冒頭のJavadocコメント部に書いておけば、コンポーネントは外部と独立して存在することができます。つまり、疎結合です。コンポーネント利用側は、イベントハンドラを書くことで、コンポーネントの更新を受け取ることができます。&lt;/p&gt;

&lt;p&gt;このような関係を実現するためには、ちょっとしたコツがあります。ノウハウあるいは定石のようなものです。&lt;/p&gt;

&lt;h4&gt;コンポーネントは外部からsinkを指定できるべき&lt;/h4&gt;

&lt;p&gt;コンポーネント内部で何か起こりイベントpayloadを送信するとき、どのsinkに送信するかが問題になります。これは、コンポーネント利用側が指定できるのが理想的です。コンストラクタ引数としてsinkを受け取れるのがよいと思いますが、setterメソッドでもよいでしょう。&lt;/p&gt;

&lt;h4&gt;sinkが指定されてない場合はページをsinkとする&lt;/h4&gt;

&lt;p&gt;sinkを指定しないのもユーザの自由です。しかしsend()の呼び出しを行うにはsinkが必要です。この場合、コンポーネントの所属するページ（getPage()で取得できます）に対して、Broadcast.BREADTHでpayloadを送信するのが良いでしょう。こうすれば、ページ上の全コンポーネントに対してpayloadが伝播します。
もちろん、sinkを指定すれば伝播の範囲が狭まるので、ページ全体に伝播させるよりパフォーマンス的に有利です。どちらを選ぶかはユーザに選ばせるべきです。&lt;/p&gt;

&lt;h4&gt;コンポーネントがどのようなpayloadをいつ送信するかはドキュメント化すべき&lt;/h4&gt;

&lt;p&gt;payloadの種類と送信タイミングは、各メソッドに書くより、クラスのJavadocコメント部にまとめておく方が、見やすいですし更新も楽です。&lt;/p&gt;

&lt;p&gt;これらのプラクティスに沿えば、コンポーネントを疎結合にすることができます。onClickのようなメソッドを定義するのではなく、イベントpayloadの送信を行うことの利点は、受け取る側は「どこでも受け取れる」ということです。たとえばページ上の、４段くらい重なったところにあるパネルにあるボタンを押すと、ページのすぐ上に乗っているコンポーネントが合わせて変化する、という場合、onXXXXといったabstractメソッドでは、どうやってページのすぐ上にあるコンポーネントまで伝えるかわかりません。イベントなら簡単です。ページにイベントハンドラとなるメソッドを書けば済むのですから。&lt;/p&gt;

&lt;p&gt;ただし、このようにイベントハンドラを多用すると、ある操作をした時にどこのメソッドが呼び出されるのかわかりにくくなる欠点があります。その面でも、この記事で紹介したAnnotationEventDispatcherを使うのが有利です。引数となるクラスは各イベント独自のものですから、あとは、IDEでそのイベントを使っているメソッドを探せばいいのです。&lt;/p&gt;

&lt;p&gt;Wicketのイベントシステムは日本語の情報がほぼないので、もしかしたら活用してない人が多いかもしれません。しかし、Wicket 5以上を使っているならば、この仕組みを使わない手はありません。活用してください。&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>Dockerコンテナを管理するならKubernetes</title>
            <link>http://tech.uzabase.com/entry/2015/02/13/180743</link>
            <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150212/20150212193607.png&quot; alt=&quot;f:id:uzabase:20150212193607p:plain&quot; title=&quot;f:id:uzabase:20150212193607p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;SPEEDA開発チームの山岸です。&lt;/p&gt;

&lt;p&gt;最近注目を集めているDockerですが、ユーザベースでも一部のチームで開発に役立てています。そのDockerのコンテナを管理するための「&lt;a href=&quot;http://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt;」というオープンソースのフレームワークがあります。&lt;br/&gt;
今回は社内のLTの内容を基に、Kubernetesについて簡単にご紹介したいと思います。&lt;/p&gt;

&lt;h3&gt;Kubernetes とはなにか？&lt;/h3&gt;

&lt;p&gt;KubernetesとはGoogleがオープンソースで公開した、Dockerコンテナのオーケストレーション及び管理するためのフレームワークです。 &lt;br/&gt;
Googleがこれまでサービスをコンテナで運用してきた経験を元に作られており、様々なベンダーが支持を表明しています。&lt;br/&gt;
Google Compute Engine、Microsoft Azure、Vagrant、CoreOSなどの様々な環境で使うことができます。&lt;/p&gt;

&lt;h3&gt;なぜ Kubernetes か？&lt;/h3&gt;

&lt;p&gt;Dockerによって、以下のメリットがもたらされるようになりました。&lt;/p&gt;

&lt;p&gt;・信頼性の高いデプロイ&lt;br/&gt;
・ポータビリティ&lt;br/&gt;
・より簡単な構築と管理&lt;/p&gt;

&lt;p&gt;これにより、1つのアプリケーションコンポーネントの再配置が容易に行えるようになりました。&lt;/p&gt;

&lt;p&gt;しかし、実際の運用では複数のアプリケーションコンポーネントを連携させて、一つのサービスとして提供する必要性が出てきます。特にマイクロサービス的なサービスの構築にはこのようなアプローチが重要となります。&lt;/p&gt;

&lt;p&gt;コンテナ同士の連携を行うためには、以下のような解決しなければならない問題が出てきます。&lt;/p&gt;

&lt;p&gt;・コンテナ間の通信をどのように行うのか？ &lt;br/&gt;
・ホストが異なる場合のコンテナ間の通信をどのように行うのか？&lt;br/&gt;
・通信先のコンテナが障害により落ちた場合にどう対応するのか？&lt;br/&gt;
・各コンテナへのアクセスをどう分配するのか？&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150212/20150212195621.png&quot; alt=&quot;f:id:uzabase:20150212195621p:plain&quot; title=&quot;f:id:uzabase:20150212195621p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;こういった問題は、コンテナをクラスタとして統合し、管理することでうまく解決できます。&lt;br/&gt;
それを行ってくれるのが、Kubernetesです。&lt;/p&gt;

&lt;h3&gt;Kubernetes でできること&lt;/h3&gt;

&lt;p&gt;Kubernetesでできることは大きく分けて3つあります。&lt;br/&gt;
それぞれ簡単にご紹介します。&lt;/p&gt;

&lt;h6&gt;①コンテナを簡単に展開できる&lt;/h6&gt;

&lt;p&gt;まずはじめに、Kubernetesは&lt;strong&gt;Kubernetes Master&lt;/strong&gt;という全体を管理するためのサービスをまとめたノードと、
それによって管理されるコンテナをまとめた&lt;strong&gt;minion&lt;/strong&gt;というノードがあります。&lt;/p&gt;

&lt;p&gt;Kubernetesでは、minion上にグループ化したコンテナを&lt;strong&gt;Pod&lt;/strong&gt;という単位で構築、管理します。&lt;br/&gt;
このPodにより、密結合したコンテナの集合を扱いやすくなります。&lt;br/&gt;
重要な点として、そのコンテナの集合は必ず同一ホスト上に存在しています。そして、同じマシンリソースを共有しています。&lt;/p&gt;

&lt;p&gt;YAMLまたはJSONフォーマットでPodの定義を設定ファイルで保存し、Kubernetes Master上のAPIに対してコマンドを実行することでPodを作成、構築することができます。&lt;/p&gt;

&lt;p&gt;また、&lt;strong&gt;Label&lt;/strong&gt;をコンテナに付けて管理することができます。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150210/20150210032530.png&quot; alt=&quot;f:id:uzabase:20150210032530p:plain&quot; title=&quot;f:id:uzabase:20150210032530p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;このLabelにより、コンテナを種類ごとに分類することでコンテナのグループを抽象化して、デプロイするコンテナを管理しやすくできます。&lt;/p&gt;

&lt;h6&gt;②コンテナの状態をチェックできる&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;Replication Controller&lt;/strong&gt;により指定された数だけPodのReplicaを作成できます。&lt;br/&gt;
また、Replication Controllerはコンテナを死活監視し、障害により落ちた場合に自動起動します。&lt;br/&gt;
この仕組みにより常に指定した数のコンテナが保たれるようになり、Podの並列数を管理することができます。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150210/20150210033023.png&quot; alt=&quot;f:id:uzabase:20150210033023p:plain&quot; title=&quot;f:id:uzabase:20150210033023p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;h6&gt;③コンテナへのアクセスを分配できる&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;Services&lt;/strong&gt;により、設定したPodにアクセスをラウンドロビンで分配することができます。&lt;br/&gt;
これは複数のコンテナで構成されるロードバランサのようなものです。&lt;br/&gt;
これによりサービスを使う側は特定のIPやポートのみ知っていればよく、コンテナの存在を意識させないようにできます。&lt;/p&gt;

&lt;h6&gt;どのように実現しているか&lt;/h6&gt;

&lt;p&gt;上記のようなことをどのように実現しているかKubernetesの全体像を示しつつご説明します。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150211/20150211091900.png&quot; alt=&quot;f:id:uzabase:20150211091900p:plain&quot; title=&quot;f:id:uzabase:20150211091900p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;Kubernetesの中心にはetcdという分散Key-Valueストアがおり、各ノード上のサービスがetcdの設定を常に監視しています。&lt;br/&gt;
何か変更が生じた場合には、etcdに対してその内容を書き込みます。そうすると協調して処理を行わなければならない別のノードのサービスがその内容を元に処理を行うといった具合です。&lt;br/&gt;
例えば、Replication Controllerにおけるコンテナの並列数の管理も、この仕組みの上に成り立っています。&lt;/p&gt;

&lt;p&gt;詳しい内容は、KubernetesのGithubの&lt;a href=&quot;https://github.com/GoogleCloudPlatform/kubernetes/blob/master/DESIGN.md&quot;&gt;Kubernetes Design Overview&lt;/a&gt;にまとまっております。&lt;/p&gt;

&lt;h3&gt;まとめ&lt;/h3&gt;

&lt;p&gt;Googleが長年社内で培ってきたコンテナ運用の経験が活かされていると感じます。&lt;br/&gt;
似たようなことを行えるフレームワークも存在しますが、まだどれも若いステージにいる状況だと思います。&lt;br/&gt;
しかし、今後はDockerなどのコンテナ技術を中心としたサービスの構築が伸びていくと思うので、こういったフレームワークには将来性を感じます。&lt;/p&gt;

&lt;p&gt;ユーザベースでは、新しい技術に興味を持ち、共により良いシステムを作っていける仲間を募集しています。
興味を持った方は是非、&lt;a href=&quot;https://www.wantedly.com/companies/uzabase-inc&quot;&gt;Wantedly&lt;/a&gt;をご覧ください。&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>Quick prototyping data visualization in SPEEDA</title>
            <link>http://tech.uzabase.com/entry/2015/02/09/113059</link>
            <description>&lt;p&gt;Nice to meet you, my name is Jorge Granado from SPEEDA Tech Team.&lt;/p&gt;

&lt;p&gt;At UZABASE we are always trying to find new ways of surprising our clients, and provide them with new analysis tools as well as better data.&lt;/p&gt;

&lt;p&gt;Since early 2013 we have been using Machine Learning algorithms for gathering world business news and information (both in English and Japanese), and connecting it to our company database. That way our clients can easily find all related media information whenever they lookup a company profile. Also, since October 2014, we have added M&amp;amp;A information to our existing data and, of course, linked the information with the mentioned database so all our information stays connected.&lt;/p&gt;

&lt;p&gt;Currently listed corporation market prices are stored with a date key, and this also goes the same for news as well as M&amp;amp;A deals. Why not create a tool where one can see all events located in a stock market price timeline to study its influence? This time we will implement a quick prototype so the analyst team can evaluate the solution and decide on it.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;1. Choosing a library for client data display&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;One of my personal mottos for quickly developing prototypes is the famous &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Reinventing_the_wheel&quot;&gt;do not reinvent the wheel&lt;/a&gt;&quot; approach. So this time, we will try to find a third party library that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;complies with maximum number of the requirements.&lt;/li&gt;
&lt;li&gt;can be extended to fulfil all the remaining necessities.&lt;/li&gt;
&lt;li&gt;has an affordable cost/performance value.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Those requirements are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;being able to represent two or more time-related textual (but independent) events over a time-based data series.&lt;/li&gt;
&lt;li&gt;being able to display the textual data over the numerical series in a readable manner.&lt;/li&gt;
&lt;li&gt;being able to enlarge/reduce the period shown to the user in an intuitive way.&lt;/li&gt;
&lt;li&gt;compatible with most of the current browsers as well as old ones.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As for the last requirement, when your clients are not responsible for the software they can have in their computers and they are tied to corporate rules, you want to support them as much as possible. Remember, clients first. Yes, unfortunately that means that our website should appear 90% or better even for the old IE6 whenever possible.&lt;/p&gt;

&lt;p&gt;Although there are several useful framework/libraries available for combining data and time-organized information, seems like there are not so many options to accomplish most of our requirements in an out-of-the-box manner. Best candidates are:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.highcharts.com/stock/demo/flags-general&quot;&gt;Highcharts&lt;/a&gt;: really interesting commercial library, with support for old browsers. The annotated timeline present some problems for our project, especially regarding UI such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;event data can only be accessed over the graph, cannot be shown separately.&lt;/li&gt;
&lt;li&gt;event flags appear really close to the graph, and that makes them difficult to click and read.&lt;/li&gt;
&lt;/ul&gt;


&lt;center&gt;&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150204/20150204205730.png&quot; alt=&quot;f:id:uzabase:20150204205730p:plain&quot; title=&quot;f:id:uzabase:20150204205730p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/center&gt;


&lt;p&gt;&lt;a href=&quot;https://developers.google.com/chart/interactive/docs/gallery/annotationchart&quot;&gt;Google Annotation Chart&lt;/a&gt;: part of the Google Charts library.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;can show only one event stream per data graph, although more than one graph can be added to the visualization.&lt;/li&gt;
&lt;li&gt;events are shown in a separated table, although only one column can be shown.&lt;/li&gt;
&lt;li&gt;events are not html links by default, this has to be extended.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Some other interesting libraries are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://code.shutterstock.com/rickshaw/&quot;&gt;Rickshaw&lt;/a&gt;: no default annotation support, development is needed. Old browser support not available.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://c3js.org/samples/grid_x_lines.html&quot;&gt;C3&lt;/a&gt;: impressive library, but fails same as previous.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.simile-widgets.org/timeplot/&quot;&gt;SIMILE widgets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dygraphs.com/gallery/#g/annotations&quot;&gt;Dygraphs&lt;/a&gt; although supports annotated timelines, some development would be needed to create an intuitive and friendly visualization.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So finally, Google chart has been chosen, at least for this prototype phase.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;2. Creating a basic data service for first test&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;For the first interaction test we have created a simple JSON format which will be received in the browser to show the data. At this point, we will try to show only news headlines and we will expand the model later.&lt;/p&gt;

&lt;p&gt;The JSON format is as follows:&lt;/p&gt;

&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;  {&amp;#34;article_list&amp;#34;: 
    [
      {
        &amp;#34;date&amp;#34;: &amp;#34;YYYY-MM-dd&amp;#34;, 
        &amp;#34;value&amp;#34;: 1234, 
        &amp;#34;headline&amp;#34;: &amp;#34;String with the news headline&amp;#34;
      }, 
      ...
    ]
  }&lt;/pre&gt;


&lt;p&gt;This will allow us to quickly interact with the graphic library, check the complexity for using the data and inspect the final results.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; &quot;value&quot; can be empty or not, depending on that day stock price. &quot;headline&quot; can be empty is there is a stock price for that day, but no news.&lt;/p&gt;

&lt;p&gt;At SPEEDA we use &lt;a href=&quot;https://wicket.apache.org/&quot;&gt;Apache Wicket&lt;/a&gt; for the platform development. So in order to create a REST service, we will code a simple &lt;a href=&quot;http://wicket.apache.org/guide/guide/resources.html&quot;&gt;JSON Resource entity&lt;/a&gt; extending AbstractResource. To be able to access the service, the final class that extends from our JSONResource will be mounted in our main application class.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; resources do not check for user authorization by default, this will have to be implemented in our final resource class in the &quot;getData&quot; method.&lt;/p&gt;

&lt;pre class=&quot;code lang-java&quot; data-lang=&quot;java&quot; data-unlink&gt;&lt;span class=&quot;synPreProc&quot;&gt;package&lt;/span&gt; com.uzabase.speeda.web.resource;

&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletResponse;

&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; org.apache.wicket.request.Response;
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; org.apache.wicket.request.resource.AbstractResource;
&lt;span class=&quot;synPreProc&quot;&gt;import&lt;/span&gt; org.apache.wicket.request.resource.ContentDisposition;

&lt;span class=&quot;synType&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt; JSONResource &lt;span class=&quot;synType&quot;&gt;extends&lt;/span&gt; AbstractResource {

    &lt;span class=&quot;synType&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;long&lt;/span&gt; serialVersionUID = &lt;span class=&quot;synConstant&quot;&gt;1L&lt;/span&gt;;
    &lt;span class=&quot;synType&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;final&lt;/span&gt; String contentType = &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;;

    &lt;span class=&quot;synPreProc&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;synType&quot;&gt;protected&lt;/span&gt; ResourceResponse newResourceResponse(&lt;span class=&quot;synType&quot;&gt;final&lt;/span&gt; Attributes attributes) {
        &lt;span class=&quot;synType&quot;&gt;final&lt;/span&gt; ResourceResponse response = &lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; ResourceResponse();
        response.setContentType(&lt;span class=&quot;synType&quot;&gt;this&lt;/span&gt;.contentType);
        response.setTextEncoding(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;);

        &lt;span class=&quot;synType&quot;&gt;final&lt;/span&gt; String data = getData(attributes);
        &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; (data == &lt;span class=&quot;synConstant&quot;&gt;null&lt;/span&gt;) {
            response.setError(HttpServletResponse.SC_NOT_FOUND);
        } &lt;span class=&quot;synStatement&quot;&gt;else&lt;/span&gt; {
            Long length = getLength(data);
            &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; (length != &lt;span class=&quot;synConstant&quot;&gt;null&lt;/span&gt;) {
                response.setContentLength(length);
            }
            &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; (response.dataNeedsToBeWritten(attributes)) {
                response.setContentDisposition(ContentDisposition.INLINE);
                response.setWriteCallback(&lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; WriteCallback() {
                    &lt;span class=&quot;synPreProc&quot;&gt;@Override&lt;/span&gt;
                    &lt;span class=&quot;synType&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;void&lt;/span&gt; writeData(&lt;span class=&quot;synType&quot;&gt;final&lt;/span&gt; Attributes attributes) {
                        JSONResource.&lt;span class=&quot;synType&quot;&gt;this&lt;/span&gt;.writeData(attributes.getResponse(), data);
                    }
                });
            }
        }

        &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; response;
    }

    &lt;span class=&quot;synType&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;abstract&lt;/span&gt; String getData(Attributes attributes);

    &lt;span class=&quot;synType&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;void&lt;/span&gt; writeData(Response response, String data) {
        response.write(data);
    }

    &lt;span class=&quot;synType&quot;&gt;protected&lt;/span&gt; Long getLength(String data) {
        &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;synType&quot;&gt;long&lt;/span&gt;) data.length();
    }
}
&lt;/pre&gt;


&lt;p&gt;&lt;b&gt;3. Data adjustements&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Ok, let's add some Javascript code to the &lt;a href=&quot;https://developers.google.com/chart/interactive/docs/gallery/annotationchart#Example&quot;&gt;template at Google site&lt;/a&gt; to process our JSON data:&lt;/p&gt;

&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;google.load(&lt;span class=&quot;synConstant&quot;&gt;'visualization'&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;'1'&lt;/span&gt;, &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;'packages'&lt;/span&gt;:&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;'annotationchart'&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]}&lt;/span&gt;);
google.setOnLoadCallback(drawChart);
&lt;span class=&quot;synIdentifier&quot;&gt;var&lt;/span&gt; chart = &lt;span class=&quot;synStatement&quot;&gt;null&lt;/span&gt;;
&lt;span class=&quot;synIdentifier&quot;&gt;function&lt;/span&gt; drawChart() &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; google.visualization.DataTable();
  data.addColumn(&lt;span class=&quot;synConstant&quot;&gt;'date'&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;'Date'&lt;/span&gt;);
  data.addColumn(&lt;span class=&quot;synConstant&quot;&gt;'number'&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;'Stock value'&lt;/span&gt;);
  data.addColumn(&lt;span class=&quot;synConstant&quot;&gt;'string'&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;'News title'&lt;/span&gt;);

  &lt;span class=&quot;synIdentifier&quot;&gt;var&lt;/span&gt; node, date_parts, date, value, headline;
  &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; (i = 0 ; i &amp;lt; myJSONObject.article_list.length;i++) &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
    node = (myJSONObject.article_list&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;);
    date_parts = node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;.split(&lt;span class=&quot;synConstant&quot;&gt;'-'&lt;/span&gt;);
    date = &lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Date&lt;/span&gt;(parseInt(date_parts&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;0&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;), parseInt(date_parts&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;) -1, parseInt(date_parts&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;2&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;));
    value = node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt; == &lt;span class=&quot;synStatement&quot;&gt;undefined&lt;/span&gt; ? 0 : parseFloat(node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;);
    headline = node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;headline&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt; == &lt;span class=&quot;synStatement&quot;&gt;undefined&lt;/span&gt; ? &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; : node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;headline&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;;

    &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; (value &amp;gt; 0) &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
      data.addRows(&lt;span class=&quot;synIdentifier&quot;&gt;[[&lt;/span&gt;date, value, headline&lt;span class=&quot;synIdentifier&quot;&gt;]]&lt;/span&gt;);
    &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
  chart = &lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; google.visualization.AnnotationChart(&lt;span class=&quot;synStatement&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;synConstant&quot;&gt;'chart_div'&lt;/span&gt;));

  &lt;span class=&quot;synIdentifier&quot;&gt;var&lt;/span&gt; options = &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
    displayAnnotations: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;,
  &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;;
  
  chart.draw(data, options);
  google.visualization.events.addListener(chart, &lt;span class=&quot;synConstant&quot;&gt;'select'&lt;/span&gt;, selectHandler);

&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Don't forget to add a request in the Javascript code to interact with the server and retrieve the JSON!&lt;/p&gt;

&lt;p&gt;And the result...&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150204/20150204163820.png&quot; alt=&quot;f:id:uzabase:20150204163820p:plain&quot; title=&quot;f:id:uzabase:20150204163820p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;Ooops! Looks like we have to order our event list, otherwise the flags over the timeline look odd...
We can easily order the returned array in the server side&lt;/p&gt;

&lt;pre class=&quot;code lang-java&quot; data-lang=&quot;java&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;...&lt;/span&gt;
  JSONArray entryPoints = &lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; JSONArray();
  String[] sortedKeys = annotatedValues.keySet().toArray(&lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; String[&lt;span class=&quot;synConstant&quot;&gt;0&lt;/span&gt;]);
  Arrays.sort(sortedKeys, Collections.reverseOrder());
  &lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; (String entry : sortedKeys) {
      entryPoints.add(annotatedValues.get(entry).asJSON());
  }
  JSONObject response = &lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; JSONObject();
  response.put(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;article_list&amp;quot;&lt;/span&gt;, entryPoints);

  &lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; response.toString();
&lt;/pre&gt;


&lt;p&gt;But this also can be done in the client side and save some memory in the server ;)&lt;/p&gt;

&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;var&lt;/span&gt; ordered_array = myJSONObject.article_list.sort(&lt;span class=&quot;synIdentifier&quot;&gt;function&lt;/span&gt;(a,b) &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; -1 * a&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;.localeCompare(b&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;)&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;);
&lt;/pre&gt;




&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150204/20150204164653.png&quot; alt=&quot;f:id:uzabase:20150204164653p:plain&quot; title=&quot;f:id:uzabase:20150204164653p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;Much better! :)&lt;/p&gt;

&lt;p&gt;&lt;b&gt;4. Add deals and extend timeline&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Now for the remaining part, let's extend the JSON model to support deal data:&lt;/p&gt;

&lt;pre class=&quot;code&quot; data-lang=&quot;&quot; data-unlink&gt;  {&amp;#34;data&amp;#34;: 
    [
      {
        &amp;#34;date&amp;#34;: &amp;#34;YYYY-MM-dd&amp;#34;, 
        &amp;#34;value&amp;#34;: 1234, 
        &amp;#34;news_headline&amp;#34;: &amp;#34;String with the news headline&amp;#34;,
        &amp;#34;news_id&amp;#34;: &amp;#34;String with the article ID&amp;#34;,
        &amp;#34;deal_headline&amp;#34;: &amp;#34;String with the news headline&amp;#34;,
        &amp;#34;deal_id&amp;#34;: &amp;#34;String with the deal ID&amp;#34;
      }, 
      ...
    ]
  }&lt;/pre&gt;


&lt;p&gt;and modify the Javascript to process the new data&lt;/p&gt;

&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; google.visualization.DataTable();
data.addColumn(&lt;span class=&quot;synConstant&quot;&gt;'date'&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;'Date'&lt;/span&gt;);
data.addColumn(&lt;span class=&quot;synConstant&quot;&gt;'number'&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;'News'&lt;/span&gt;);
data.addColumn(&lt;span class=&quot;synConstant&quot;&gt;'string'&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;'News title'&lt;/span&gt;);
data.addColumn(&lt;span class=&quot;synConstant&quot;&gt;'string'&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;'News headline'&lt;/span&gt;);
data.addColumn(&lt;span class=&quot;synConstant&quot;&gt;'number'&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;'Deal'&lt;/span&gt;);
data.addColumn(&lt;span class=&quot;synConstant&quot;&gt;'string'&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;'Deal title'&lt;/span&gt;);
data.addColumn(&lt;span class=&quot;synConstant&quot;&gt;'string'&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;'Deal headline'&lt;/span&gt;);

&lt;span class=&quot;synIdentifier&quot;&gt;var&lt;/span&gt; ordered_array = myJSONObject.article_list.sort(&lt;span class=&quot;synIdentifier&quot;&gt;function&lt;/span&gt;(a,b) &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;synStatement&quot;&gt;return&lt;/span&gt; -1 * a&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;.localeCompare(b&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;)&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;);
&lt;span class=&quot;synIdentifier&quot;&gt;var&lt;/span&gt; node, date_parts,date, value, headline_news, title_news, headline_deal, title_deal;
&lt;span class=&quot;synStatement&quot;&gt;for&lt;/span&gt; (i = 0 ; i &amp;lt; ordered_array.length;i++) &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  node = (ordered_array&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;);
  date_parts = node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;.split(&lt;span class=&quot;synConstant&quot;&gt;'-'&lt;/span&gt;);
  date = &lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Date&lt;/span&gt;(parseInt(date_parts&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;0&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;), parseInt(date_parts&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;) -1, parseInt(date_parts&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;2&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;));
  value = node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt; == &lt;span class=&quot;synStatement&quot;&gt;undefined&lt;/span&gt; ? 0 : parseFloat(node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;);
  headline_news = node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;news_headline&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt; == &lt;span class=&quot;synStatement&quot;&gt;undefined&lt;/span&gt; ? &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; : node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;news_headline&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;;
  title_news = node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;news_headline&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt; == &lt;span class=&quot;synStatement&quot;&gt;undefined&lt;/span&gt; ? &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; : &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;News&amp;quot;&lt;/span&gt;;
  headline_deal = node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;deal_headline&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt; == &lt;span class=&quot;synStatement&quot;&gt;undefined&lt;/span&gt; ? &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; : node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;deal_headline&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt;;
  title_deal = node&lt;span class=&quot;synIdentifier&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;deal_headline&amp;quot;&lt;/span&gt;&lt;span class=&quot;synIdentifier&quot;&gt;]&lt;/span&gt; == &lt;span class=&quot;synStatement&quot;&gt;undefined&lt;/span&gt; ? &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; : &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;Deal&amp;quot;&lt;/span&gt;;
  
  &lt;span class=&quot;synStatement&quot;&gt;if&lt;/span&gt; (value &amp;gt; 0) &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
    data.addRows(&lt;span class=&quot;synIdentifier&quot;&gt;[[&lt;/span&gt;date, value, title_news, headline_news, value, title_deal, headline_deal&lt;span class=&quot;synIdentifier&quot;&gt;]]&lt;/span&gt;);
  &lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;What we are doing is adding a new graph over the first one (with the same values) and then attach the deal flags to it. Not the perfect solution, but this way we can see both news (blue) and deals (red). And it is good enough for a prototype.&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150204/20150204170601.png&quot; alt=&quot;f:id:uzabase:20150204170601p:plain&quot; title=&quot;f:id:uzabase:20150204170601p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;Looks like most of our data is somewhat recent. To tell the library to show only the last 6 months at the beginning there is a useful option:&lt;/p&gt;

&lt;pre class=&quot;code lang-javascript&quot; data-lang=&quot;javascript&quot; data-unlink&gt;&lt;span class=&quot;synIdentifier&quot;&gt;var&lt;/span&gt; d = &lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;Date&lt;/span&gt;();
d.setMonth(d.getMonth() - 6);

&lt;span class=&quot;synIdentifier&quot;&gt;var&lt;/span&gt; options = &lt;span class=&quot;synIdentifier&quot;&gt;{&lt;/span&gt;
  displayAnnotations: &lt;span class=&quot;synConstant&quot;&gt;true&lt;/span&gt;,
  zoomStartTime: d
&lt;span class=&quot;synIdentifier&quot;&gt;}&lt;/span&gt;;
&lt;/pre&gt;


&lt;p&gt;And then it looks much more useful :)&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150204/20150204170828.png&quot; alt=&quot;f:id:uzabase:20150204170828p:plain&quot; title=&quot;f:id:uzabase:20150204170828p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;Finally, we put our Javascript code in a blank Wicket page and the prototype is ready to be shown!&lt;/p&gt;

&lt;p&gt;There is still some pending job:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a market selector (as public companies may appear in more than one stock market).&lt;/li&gt;
&lt;li&gt;a data filter (to be able to shown either &quot;news&quot; or &quot;deals&quot;, or both).&lt;/li&gt;
&lt;li&gt;a function to capture the clicks in the data table and open the article body (using google.visualization.events.addListener).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;but as a prototype is good enough to be shown at the next department meeting.&lt;/p&gt;

&lt;p&gt;＼(＾▽＾*) お疲れ様でした！&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title> クラッシュしないアプリ制作の鉄則</title>
            <link>http://tech.uzabase.com/entry/2015/02/05/120046</link>
            <description>&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150204/20150204153129.jpg&quot; alt=&quot;f:id:uzabase:20150204153129j:plain&quot; title=&quot;f:id:uzabase:20150204153129j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;サービスの開発を行っている大川です。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;本日はのスマホアプリがどんな設計になっているかを紹介します。社内LTネタを元にしています。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;階段の部分はどうやってるの？（&lt;a href=&quot;http://tech.uzabase.com/entry/2014/08/newspicksui.html&quot;&gt;『のUIデザイン』&lt;/a&gt;）&lt;br /&gt;
文字が読みやすいように工夫しているの？&lt;br /&gt;
などいろいろと観点はあるとは思いますが、まずは全体として絶対に守っている「竜骨」とも言うべきコアの設計についてお話しします。どのアプリでも必ず守るべき鉄則となります。&lt;/p&gt;

&lt;p&gt;鉄則とは端的に言うと、&lt;br /&gt;
&lt;b&gt;ビジネスロジックをView, ViewControllerに密結合させない&lt;/b&gt;&lt;br /&gt;
ということです。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;まず大前提として、下記の3レイヤーに分けた設計を行います。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150131/20150131232251.jpg&quot; alt=&quot;f:id:uzabase:20150131232251j:plain&quot; title=&quot;f:id:uzabase:20150131232251j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;プレゼンテーション層は、ユーザーの操作に従ってViewのコントロールを行います。&lt;br /&gt;
ビジネス層は、データそのものや、データの取り扱い責務を担います。Viewへのデータ変更通知も行います。&lt;b&gt;Viewのいかなる変更もビジネス層には影響しません。&lt;/b&gt;iPhone / iPad などのデバイスにも依存しない領域です。&lt;br /&gt;
データアクセス層は、サーバーのAPIに問い合わせを行ったり、ローカルストレージ（PreferenceやSQLite、WeakCacheなど）にアクセスします。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;スマホアプリの最大の特徴は、タッチスクリーンで操作が行われると言うことです。プレゼンテーション層のView, ViewControllerはめまぐるしく生成、消滅を繰り返します。0.5秒も経たずに画面を遷移することもしばしばです。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150201/20150201114808.jpg&quot; alt=&quot;f:id:uzabase:20150201114808j:plain&quot; title=&quot;f:id:uzabase:20150201114808j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;ビジネス層のServiceがViewControllerのインスタンスをがっちり握っているとしたらどうなるでしょう。&lt;br /&gt;
例えばTechnologyカテゴリのニュース一覧をとってこようとしたとき、サーバーに問い合わせに行って帰ってきたときには、ユーザーはもうTechnologyカテゴリを閉じていて、経済カテゴリを見ているかもしれません。つまり、Callback先のTechnologyカテゴリのViewが既に解放されてしまっているということです。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150131/20150131234158.jpg&quot; alt=&quot;f:id:uzabase:20150131234158j:plain&quot; title=&quot;f:id:uzabase:20150131234158j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;メモリ解放が行われた場所にそのままCallbackすれば、必ず&lt;b&gt;クラッシュ&lt;/b&gt;します。1度アプリがクラッシュすると、&lt;b&gt;84%のユーザーが離脱する&lt;/b&gt;というデータもあるようです。&lt;br /&gt;
これは大変な問題です。なんとかしなくてはいけません。&lt;br /&gt;
ここで、GoFのデザインパターンのうちの &lt;i&gt;&quot;Observer Pattern&quot;&lt;/i&gt; が活躍します。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150131/20150131234902.jpg&quot; alt=&quot;f:id:uzabase:20150131234902j:plain&quot; title=&quot;f:id:uzabase:20150131234902j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;Observer Patternを使えば、&lt;b&gt;通知の受取人がいなければそのまま無視するだけ&lt;/b&gt;という構造をつくりだすことができます。&lt;br /&gt;
iOSではNSNotification、AndroidではBroadcastReceiverのような仕組みを使うと良いでしょう。&lt;/p&gt;

&lt;p&gt;また、&lt;b&gt;1つの要求に対して1つの返事を返す、という構造にしなくて良くなる&lt;/b&gt;ため、せっかちなユーザーの操作に影響されてシステム全体が遅くなってしまう問題を回避することができます。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150201/20150201001326.jpg&quot; alt=&quot;f:id:uzabase:20150201001326j:plain&quot; title=&quot;f:id:uzabase:20150201001326j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;プレゼンテーション層とビジネス層はインスタンスの寿命が全然違うので、&lt;b&gt;Observer Patternによる極めて疎な結合をさせるように心がけるべし&lt;/b&gt;、という言い方もできます。
ちなみにViewが解放されるときに必ずObserver解除をしないと、それがクラッシュ要因になってしまいます。&lt;/p&gt;

&lt;p&gt;以上が、スマホアプリでは&lt;b&gt;ビジネスロジックをView, ViewControllerに密結合させない&lt;/b&gt;という鉄則でした。&lt;/p&gt;

&lt;p&gt;さて、もSPEEDAも積極的にエンジニア採用活動をしております。Uzabaseに遊びにきて、詳しい話がききたい方はこちらから！ ↓&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&quot;//hatenablog-parts.com/embed?url=https%3A%2F%2Fwww.wantedly.com%2Fprojects%2F11504&quot; title=&quot;100年に一度のメディア変革期！世界一のニュースプラットフォームを創ろう by 株式会社ユーザベース&quot; class=&quot;embed-card embed-webcard&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://www.wantedly.com/projects/11504&quot;&gt;100年に一度のメディア変革期！世界一のニュースプラットフォームを創ろう by 株式会社ユーザベース&lt;/a&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.wantedly.com/projects/11504&quot;&gt;100&amp;#x5E74;&amp;#x306B;&amp;#x4E00;&amp;#x5EA6;&amp;#x306E;&amp;#x30E1;&amp;#x30C7;&amp;#x30A3;&amp;#x30A2;&amp;#x5909;&amp;#x9769;&amp;#x671F;&amp;#xFF01;&amp;#x4E16;&amp;#x754C;&amp;#x4E00;&amp;#x306E;&amp;#x30CB;&amp;#x30E5;&amp;#x30FC;&amp;#x30B9;&amp;#x30D7;&amp;#x30E9;&amp;#x30C3;&amp;#x30C8;&amp;#x30D5;&amp;#x30A9;&amp;#x30FC;&amp;#x30E0;&amp;#x3092;&amp;#x5275;&amp;#x308D;&amp;#x3046; - &amp;#x682A;&amp;#x5F0F;&amp;#x4F1A;&amp;#x793E;&amp;#x30E6;&amp;#x30FC;&amp;#x30B6;&amp;#x30D9;&amp;#x30FC;&amp;#x30B9;&amp;#x306E;&amp;#x6C42;&amp;#x4EBA; - Wantedly&lt;/a&gt;&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>簡単シンプルなSQLライブラリ『JDBI』</title>
            <link>http://tech.uzabase.com/entry/2015/02/04/170408</link>
            <description>&lt;p&gt;技術チームインターンの前田です。&lt;/p&gt;

&lt;p&gt;アプリケーションを開発していると、データベースと連携する必要が出てくる場合が多いかと思います。&lt;/p&gt;

&lt;p&gt;この記事では、JavaプログラムからRDBMSを利用する際に便利なライブラリを紹介します。&lt;/p&gt;

&lt;p&gt;このライブラリは、私が取り組んだ業務でも使用したもので、JDBIと呼ばれています。&lt;/p&gt;

&lt;p&gt;&lt;b&gt;JDBIとは&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Javaプログラム↔RDBMS間の連携に便利なSQLライブラリです。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JDBIはJDBCの上に構築されているもので、JDBCのAPIの使い勝手の悪さをカバーしてくれます。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;b&gt;JDBIの便利な点&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;JDBIを利用することで、簡単にプログラムのロジックとSQL文を分離することが出来ます。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;プログラム中のオブジェクトとRDBMSのレコード間の対応付けを行う、所謂O/Rマッパーとしても機能します。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;O/Rマッピングの設定に、設定ファイルを使用しません。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;似たような機能を持つフレームワークとしてHibernate、MyBatisなどが挙げられますが、これらはO/Rマッピングのための各種ファイル(~.xml等)の設定が必要であったり、それらを自動設定するためにもツールの使用が必要であったりで、利用がやや複雑な印象を受けます。&lt;/p&gt;

&lt;p&gt;JDBIであれば、そのような設定ファイルや複雑な設定が不要で、シンプルなJavaコードのみで簡単に動作させることができます。&lt;/p&gt;

&lt;p&gt;以下、簡単にその使用例を紹介します。&lt;/p&gt;

&lt;p&gt;例えば、次のようなクラスがあったとします。&lt;/p&gt;

&lt;pre class=&quot;code lang-java&quot; data-lang=&quot;java&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt; Company {
    &lt;span class=&quot;synType&quot;&gt;private&lt;/span&gt; String name;
    &lt;span class=&quot;synType&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;int&lt;/span&gt; num;
    
    &lt;span class=&quot;synComment&quot;&gt;// アクセサメソッドは省略&lt;/span&gt;
}
&lt;/pre&gt;


&lt;p&gt;上記のオブジェクトに対応するテーブルを作成することにします。&lt;/p&gt;

&lt;pre class=&quot;code lang-sql&quot; data-lang=&quot;sql&quot; data-unlink&gt;&lt;span class=&quot;synStatement&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;synSpecial&quot;&gt;TABLE&lt;/span&gt; `company` (
  `name` &lt;span class=&quot;synType&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;synConstant&quot;&gt;20&lt;/span&gt;) ,
  `number_of_employees` int(&lt;span class=&quot;synConstant&quot;&gt;11&lt;/span&gt;)
) 
&lt;/pre&gt;


&lt;p&gt;このとき、Daoは以下のようになります（JDBIではDaoにはインターフェースを使用します）。
この例では、オブジェクトが保持するフィールドの値をDBに挿入するSQL文と、
nameの値から対応するnum_of_employeesを取得するSQL文を書いています。&lt;/p&gt;

&lt;pre class=&quot;code lang-java&quot; data-lang=&quot;java&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;interface&lt;/span&gt; CompanyDao {
    &lt;span class=&quot;synPreProc&quot;&gt;@SqlQuery&lt;/span&gt;(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;SELECT number_of_employees from company WHERE name = :name&amp;quot;&lt;/span&gt;)
    &lt;span class=&quot;synType&quot;&gt;int&lt;/span&gt; findByName(&lt;span class=&quot;synPreProc&quot;&gt;@Bind&lt;/span&gt;(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;) String n);

    &lt;span class=&quot;synPreProc&quot;&gt;@SqlUpdate&lt;/span&gt;(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;INSERT INTO company(name,number_of_employees) values(:name,:num)&amp;quot;&lt;/span&gt;)
    &lt;span class=&quot;synType&quot;&gt;void&lt;/span&gt; insert(&lt;span class=&quot;synPreProc&quot;&gt;@BindBean&lt;/span&gt; Company d);
}
&lt;/pre&gt;


&lt;p&gt;それぞれの処理を詳しく見ていきます。&lt;/p&gt;

&lt;p&gt;@SqlQuery はデータを取得するSQL文を表し、@SqlUpdate はデータを更新するSQL文を表しています。
findByNameメソッドで使用している@Bindアノテーションは、プレースホルダに入るパラメータを指定するために使用します。
この場合だと、引数で与えられたString型のnに格納されている値がSQL文内の「:name」に対応付けられます。
メソッドの戻り値には、取得するデータの型を指定します。
例えば、上記のfindByNameメソッドはString型のパラメータを元にint型のデータを取得したいので、戻り値はint型です。&lt;/p&gt;

&lt;p&gt;insertメソッドには、引数にとったJavaオブジェクトをRDBMSに挿入する処理が書かれています。
@BindBeanアノテーションが付けられているオブジェクトに対して、プレースホルダの「:◯◯」という記述の◯◯に対応するgetterが呼び出されることによって、プレースホルダへの対応付けが行われます。
この場合だと、Company型のdのgetName()とgetNum()メソッドが呼び出されます。&lt;/p&gt;

&lt;p&gt;ここでは動作の説明を書きましたが、このような説明がなくても上記のコードを見ればすぐに動作イメージが掴めるような記述方式になっていると思います。&lt;/p&gt;

&lt;p&gt;実際にDaoを使用してSQL文を実行するクラスを次に示します。&lt;/p&gt;

&lt;pre class=&quot;code lang-java&quot; data-lang=&quot;java&quot; data-unlink&gt;&lt;span class=&quot;synType&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt; Test {
    &lt;span class=&quot;synType&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;synType&quot;&gt;void&lt;/span&gt; main(String[] args) {
        Company company = &lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; Company(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;hoge&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;10&lt;/span&gt;);
        DBI dbi = &lt;span class=&quot;synStatement&quot;&gt;new&lt;/span&gt; DBI(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;JDBC接続URL&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;ユーザ名&amp;quot;&lt;/span&gt;, &lt;span class=&quot;synConstant&quot;&gt;&amp;quot;パスワード&amp;quot;&lt;/span&gt;);
        CompanyDao dao = dbi.onDemand(CompanyDao.&lt;span class=&quot;synType&quot;&gt;class&lt;/span&gt;);
        dao.insert(company);
        System.out.println(dao.findByName(&lt;span class=&quot;synConstant&quot;&gt;&amp;quot;hoge&amp;quot;&lt;/span&gt;));
    }
}
&lt;/pre&gt;


&lt;p&gt;上記のコードでは、「10」とコンソール出力します。&lt;/p&gt;

&lt;p&gt;このように、JDBIではシンプル且つ簡単にデータベースとJavaプログラムを連携することができます。&lt;/p&gt;

&lt;p&gt;ここではオブジェクト→レコードのマッピングを行いましたが、もちろんレコード→オブジェクトへのマッピングも可能です。
また、トランザクション機能などの基本的な機能も備えています。&lt;/p&gt;

&lt;p&gt;現在では様々なO/Rマッピングフレームワークが存在し、状況や好みによってどれを選択するかは変わってくるかと思いますが、このライブラリもその選択肢の一つになり得るものだと思います。&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>Cool Hinemos!　Hinemos5.0にとっても期待している運用エンジニア</title>
            <link>http://tech.uzabase.com/entry/2015/01/29/102935</link>
            <description>&lt;p&gt;初めまして、UZABASEインフラチームの小林です。&lt;br /&gt;
弊社インフラチームは5名（1名海外留学中）で構成されていて、ざっくり言うと、先進技術検証・導入を主担当とするメンバーと、新規リリース対応・運用改善を主担当にするメンバーの2チームに分かれています。
（実際には、主担当と副担当がそれぞれクロスしているので、満遍なく業務に携わっていますが。）&lt;/br&gt;
基本やりたい事を自由に認めてもらえる環境なので、UZABASEに所属しながら海外留学できる環境でもあります。&lt;/br&gt;
で、僕はSPEEDAの運用管理を主な生業としてます。&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h5&gt;早速なんですが、Hinemos ver 5.0 が5月に出ます！&lt;/h5&gt;

&lt;p&gt;新機能等の詳細は、
&lt;a href=&quot;http://www.slideshare.net/Hinemos/hinemos-world2014a1-1hinemos50&quot;&gt;&lt;span style=&quot;color: #2196f3&quot;&gt;【HinemosWorld2014】A1-1_Hinemos5.0 ロードマップ&lt;/span&gt;&lt;/a&gt;
を参照していただきたいですが、
なんと機能追加だけでなく、&lt;a href=&quot;https://twitter.com/hinemos_info/status/540408380070694914&quot;&gt;&lt;span style=&quot;color: #2196f3&quot;&gt;公式キャラクター&lt;/span&gt;&lt;/a&gt;も出来た模様です。&lt;br /&gt;&lt;/p&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/42782990&quot; width=&quot;425&quot; height=&quot;355&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt;


&lt;p&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/Hinemos/hinemos-world2014a1-1hinemos50&quot; title=&quot;【HinemosWorld2014】A1-1_Hinemos5.0 ロードマップ&quot; target=&quot;_blank&quot;&gt;【HinemosWorld2014】A1-1_Hinemos5.0 ロードマップ&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;//www.slideshare.net/Hinemos&quot; target=&quot;_blank&quot;&gt;Hinemos&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;br /&gt;
&lt;span style=&quot;color: #1464b3&quot;&gt;&lt;b&gt;☆公式キャラクターのモニタちゃん&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 80%&quot;&gt;　(Hinemos公式Twitterより拝借)&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150128/20150128110015.png&quot; alt=&quot;f:id:uzabase:20150128110015p:plain&quot; title=&quot;f:id:uzabase:20150128110015p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
Hinemosを公開してから10周年（ver1は2005年8月に公開されました）という事で、気合入ってますね！！
&lt;br /&gt;
&lt;br /&gt;
で、弊社では、SPEEDAの運用でHinemos3.2.1を使用しています。&lt;br /&gt;
2010年9月に発表されたので、もうだいぶ古いバージョン使っている事になります。
ちなみに、Hinemosは「verx.x」までをメジャーバージョン、「verx.x.x」までをマイナーバージョンとしているので、
3.2.1 → 5.0 には3つのメジャーバージョンアップが必要になる事になります。&lt;/p&gt;

&lt;p&gt;そもそも、Hinemosとは監視管理、ジョブ管理、性能管理を行う機能を備えているOSS製品ですが、
UZABASEでは、ジョブ管理で使用しています。（監視管理はNagiosを使用中）&lt;/p&gt;

&lt;p&gt;で、ジョブ監視をする以上は、使用頻度が高いのですが、Hinemos3.2.1では不便な点がちらほら目立ってきました。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Windowsでしか動かない（OS依存）&lt;br /&gt;
でもって、Windows8端末だとうまく動かないのが出てきたり、そもそもMacとか使っている開発者も増えてきていて、
今の弊社の環境で不都合が多くなってきました。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;動作が重い&lt;br /&gt;
今使っているHinemos3.2.1はとても重いんです・・・
最初にジョブ履歴の画面を開くのに数分かかるので、即時障害対応するために常時開きっぱなし、
ジョブを登録・修正する時も数分待つので、ドキドキが止まりません。（ようやく慣れましたが。）&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;なので、そろそろバージョンアップしたいと思っていて、現在最新版の4.1まで上げるとどうなるか、リリースノートから弊社環境ですごく使えそうな部分だけでも抜粋してみると、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hinemos エージェント通信機構の改善（Webサービス化）&lt;/li&gt;
&lt;li&gt;WebサービスAPI完全対応&lt;/li&gt;
&lt;li&gt;編集ロック&lt;/br&gt;
　　ジョブ定義の編集に排他機構を組み込みました。&lt;/li&gt;
&lt;li&gt;日跨ぎジョブ対応&lt;/br&gt;
　　日跨ぎで実行されるジョブが動作するようになりました。&lt;/li&gt;
&lt;li&gt;カレンダパターン&lt;/br&gt;
　　祝日のパターンなどを複数のカレンダで共有できるようになりました。&lt;/li&gt;
&lt;li&gt;大幅な性能改善（3.2→4.0→4.1でそれぞれ性能改善が図られているそうです。）&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;とこれだけでもすごく期待大です。
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;じゃあ、わざわざHinemos5にしなくても良いんじゃない？と思ってHinemos5.0 ロードマップのスライドをみてみると、
（以下の画像は上のスライドから抜粋です。）&lt;/p&gt;

&lt;h4&gt;Webブラウザ対応！！&lt;span style=&quot;font-size: 80%&quot;&gt;(らしい)&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span style=&quot;color: #ff5252&quot;&gt;&lt;b&gt;→Windows依存からの開放！！&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150128/20150128120358.png&quot; alt=&quot;f:id:uzabase:20150128120358p:plain&quot; title=&quot;f:id:uzabase:20150128120358p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;h4&gt;今まで以上のサクサク動作！&lt;span style=&quot;font-size: 80%&quot;&gt;(らしい)&lt;/span&gt;&lt;/h4&gt;

&lt;p&gt;&lt;span style=&quot;color: #ff5252&quot;&gt;&lt;b&gt;→Hinemos開きっぱなしからの開放！！&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150128/20150128120417.png&quot; alt=&quot;f:id:uzabase:20150128120417p:plain&quot; title=&quot;f:id:uzabase:20150128120417p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;と、とてもワクワクする文言が踊っています！（当然それ以外にもおもしろそうな機能がたくさんあります。）&lt;/p&gt;&lt;/p&gt;
&lt;/br&gt;&lt;/br&gt;&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150127/20150127225141.png&quot; alt=&quot;f:id:uzabase:20150127225141p:plain&quot; title=&quot;f:id:uzabase:20150127225141p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150128/20150128115510.png&quot; alt=&quot;f:id:uzabase:20150128115510p:plain&quot; title=&quot;f:id:uzabase:20150128115510p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;




&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150127/20150127225233.png&quot; alt=&quot;f:id:uzabase:20150127225233p:plain&quot; title=&quot;f:id:uzabase:20150127225233p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150128/20150128115502.png&quot; alt=&quot;f:id:uzabase:20150128115502p:plain&quot; title=&quot;f:id:uzabase:20150128115502p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;これはHinemos5で決まりでしょ！
というわけで、今から発表が待ちどおしいです！！&lt;/br&gt;
ただ、いきなり使うと人柱になっちゃったりするのかな？という不安や、現在ジョブ検知機能も一部Nagiosで動いているからそっちの修正するの辛いなぁと思っているのは心の内に秘めておきます。。。&lt;/br&gt;
&lt;/br&gt;
&lt;/br&gt;
さて、そんなUZABASEを一緒に支えてくれるエンジニアを募集しています！気軽にオフィスに遊びに来てください。&lt;/br&gt;
見学、応募は&lt;a href=&quot;https://www.wantedly.com/companies/uzabase-inc&quot;&gt;Wantedly&lt;/a&gt;からお願いします！&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>はじめてのビジュアライゼーション ～Tableau, Highchart.js触ってみた～</title>
            <link>http://tech.uzabase.com/entry/2015/01/22/102741</link>
            <description>&lt;p&gt;ユーザベースで&lt;a href=&quot;http://www.uzabase.com/speeda/&quot;&gt;SPEEDA&lt;/a&gt;の開発を担当しています。
外間です。&lt;/p&gt;

&lt;p&gt;ビジュアライゼーションのニーズが高まり続ける中、
先日僕もビジュアライゼーションで有名な、あの&lt;a href=&quot;http://www.tableau.com/ja-jp/&quot;&gt;Tableau&lt;/a&gt;のセミナーに参加してきました。&lt;/p&gt;

&lt;h6&gt;Tableau&lt;/h6&gt;

&lt;p&gt;Tableauとは簡単に言えば、データを視覚化し分析を助けるBIツールです。
主に以下のような特徴があります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;インメモリで動作が軽い&lt;/li&gt;
&lt;li&gt;様々なデータソースに対応（約40種）&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;また、作成した資料を自由に組み替えてダッシュボードにまとめ、Web上に公開するといったこともできます。
&lt;a href=&quot;http://www.tableau.com/public/&quot;&gt;Tableau Public&lt;/a&gt;というサイトには、ユーザーが公開しているダッシュボードが集められていてかなり遊べます。&lt;/p&gt;

&lt;p&gt;セミナーでは実際にTableau Desktopを使って、基本的な操作方法を学びました。&lt;br/&gt;
僕も試しにSPEEDAが持っている企業データを投入して、世界地図上に企業の売上高を円グラフで表示してみたところ、簡単にできました。&lt;br/&gt;
Tableau Publicからピックアップすると、このようなイメージです。&lt;br/&gt;
&lt;a href=&quot;http://public.tableausoftware.com/shared/4F7DHJRKK?&quot;&gt;Which Mobile OS Dominates in Europe?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;インメモリで軽いのですが、SPEEDAのように大量データを実際に使える形で分析するとなると、だいぶハイスペックなマシンでないと動かないんじゃないか。。
という懸念はありますね。&lt;/p&gt;

&lt;p&gt;当初は無料トライアル版を使って、SPEEDAの様々なデータを多角的に見てみたかったんですが、
そうこうしている間にトライアル期間である2週間があっという間に過ぎてしまいました。。&lt;/p&gt;

&lt;p&gt;とはいえ、今できるビジュアライズの手法としてどのようなものがあるのか
この機会にいろいろと触りたい気持ちはあります。&lt;/p&gt;

&lt;p&gt;ビジュアライゼーションと言えば&lt;a href=&quot;http://ja.d3js.node.ws/&quot;&gt;D3.js&lt;/a&gt;！&lt;br/&gt;
ですが、D3.jsは当ブログでも過去に複数の方が触れているので、今回は別のライブラリに触れたいと思います。&lt;/p&gt;

&lt;h6&gt;Highchart.js&lt;/h6&gt;

&lt;p&gt;&lt;a href=&quot;http://www.highcharts.com/&quot;&gt;Highchart.js&lt;/a&gt;とは、グラフを描画するためのJSライブラリです。&lt;br/&gt;
2009年にリリースされておりご存知の方も多いかと思いますが、僕は触ったことが無かったのでこの機会に触ってみたいと思います。&lt;/p&gt;

&lt;p&gt;Highchart.jsは主に以下のような特徴があります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;グラフの美しさと豊富さ&lt;/li&gt;
&lt;li&gt;JSファイルを1つ読み込むだけで使える手軽さ&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;実際に公式サイトのデモ画面を見てみるとかなりの種類のグラフが用意されていることが分かります。&lt;a href=&quot;http://www.highcharts.com/demo/&quot;&gt;デモ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;実際に僕も簡単なグラフを作成してみました。&lt;br/&gt;
右下のグラフはたったこれだけのコードだけで書けてしまいます。（シンプルなので説明は省きます）&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150121/20150121125202.png&quot; alt=&quot;f:id:uzabase:20150121125202p:plain&quot; title=&quot;f:id:uzabase:20150121125202p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;http://www.uzabase.com/speeda/&quot;&gt;SPEEDA&lt;/a&gt;では別の手法を用いてグラフを表示していますが、さらに多種多様な見せ方を要求された場合、使えそうです。&lt;/p&gt;

&lt;p&gt;今回はここまでですが、実際にデータを投入して様々な表示パターンを試したい好奇心に掻き立てられたので、時間を見つけてやってみようと思います。&lt;/p&gt;

&lt;p&gt;貴重なデータを最大限に活かすためにも、
効果的な見せ方とその手法を学び、ニーズに応えられるよう準備しておきたいものです。&lt;/p&gt;

&lt;p&gt;ユーザベースでは、新しい技術に興味を持ち、一緒に探究してより良いシステムを作っていける仲間を募集しています。
一緒にデータビジュアライズに挑戦したい！という方は、ぜひ一度&lt;a href=&quot;https://www.wantedly.com/companies/uzabase-inc&quot;&gt;Wantedly&lt;/a&gt;をご覧ください。&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>世界一ハッピーでワクワクする会社を目指して ～SPEEDA, を生んだ企業文化～</title>
            <link>http://tech.uzabase.com/entry/2015/01/15/102658</link>
            <description>&lt;div style=&quot;background: white;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;SPEEDA開発チームの中島です。&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;UZABASEでは、現在SPEEDA/という2つの経済に特化したサービスを展開しており、どちらも自社開発をしています。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;今日は、UZABASEが何を目指し、何を大事にしているか、働き方や開発スタイルなども含め紹介したいと思います。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;h3 style=&quot;background: white;&quot;&gt;&lt;strong&gt;UZABASEが目指すもの：ミッション&lt;/strong&gt;&lt;/h3&gt;
&lt;div style=&quot;background: white;&quot;&gt;&lt;br /&gt; 「世界一の経済メディアを作る」&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;UZABASEのメンバーそれぞれで多様なイメージがあると思いますが、私が考える「世界一の経済メディア」とは、世界中のビジネスパーソンが何らかの経済情報を取得する際、まずUZABASEにアクセスする、という状態です。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;より具体的に言うと、&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;『世界中のあらゆるビジネス情報の整理やコンテンツの自社作成を行い、UZABASEのプロダクト全てがシームレスに横連携され、知見のある専門家が常に傍にいるかのようなイノベーティブな経済プラットフォームを「人×システム」の力で展開し、世界のデファクトスタンダードであること』&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;を目指しています。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;&lt;br /&gt; 実際にSPEEDA事業においては、世界中で利用されるサービスへと成長させるべく、昨年から海外進出を開始し加速させています。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;h3 style=&quot;background: white;&quot;&gt;&lt;strong&gt;UZABASEが大事にしているもの：7つのルール&lt;/strong&gt;&lt;/h3&gt;
&lt;div style=&quot;background: white;&quot;&gt;&lt;br /&gt; ミッションを実現するため、私達が何を大事にし、どのような想いを持って働いているかについて話をします。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;UZABASEには出社時間や服装、出社義務などの決まったルールはなく全てが自由です。私自身、会社にスーツで出社したことは、ほとんどありません。ただし、唯一守らなければならない原則として「7つのルール」があります。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;創業から3年間ぐらいは全くルールがありませんでしたが、社員が増えていく中で、各自の見えている景色の違いなどから、少しずつすれ違いが生じることも出てきたため、UZABASE全員が統一してもつ価値観を整備し、行動指針のようなものを策定したものが「7つのルール」です。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;仕事をする上で、何らかの行動・意思決定をする際、判断に迷った際などは、この7つのルールに立ち返り、反しないようにする、ということを決めています。7つのルールをベースに議論ができれば、意見の食い違いがあったとしても必ずいい方向に向かうと私たちは信じています。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;　【7つのルール】&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;　　1. 自由主義で行こう&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;　　2. 創造性がなければ意味がない&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;　　3. ユーザーの理想から始める&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;　　4. スピードで驚かす&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;　　5. 迷ったら挑戦する道を選ぶ&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;　　6. 渦中の友を助ける&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;　　7. 異能は才能&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;　　※詳細は&lt;a href=&quot;http://www.uzabase.com/company/#company-sec2&quot;&gt;http://www.uzabase.com/company/#company-sec2&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;7つのルールがどう実践されているのか、実例も含め3つ紹介したいと思います。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;&lt;strong&gt;■自由主義で行こう&lt;/strong&gt;&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;自由な環境の下でこそクリエイティブな発想が生まれ、かつ最高のパフォーマンスが出せる、と私たちは信じているので、出社義務や時間、服装に決まりはなく、働き方や開発スタイルも自分たちがベストだと思うやり方を実践することが可能です。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;マーケットのニーズや競合情報、会社の状況など、守秘義務やプライバシーに関わるところ以外は全て情報共有されており、その情報を元に現場の人間がオーナーシップを持って意思決定できるようになっています。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;重要なことは自分を律すること、コミットに対して結果責任を持ってベストエフォートすること、高速でPDCAを回していくことです。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;それができていれば、どうやりたいかの手法に関しては完全に自分たちのやりたい方法で実践できます。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;開発スタイルを例にあげると、完全にアジャイルな手法でプロジェクトを進めているチームもあれば、アジャイルやウォーターフォールなど、プロジェクトによってスタイルを変更しているチームなど、チームによってやり方は様々です。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;&lt;strong&gt;■創造性がなければ意味がない&lt;/strong&gt;&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;Work smarter, More creativeというSPEEDAのキャッチコピーにも表れていますが、労働集約型にならないよう、システムでできることは全てシステムの力で解決し、人の手でしかできないより付加価値の高い部分を人の力でやろうという思想のもと、システムでできる範囲を広げていくため、クリエイティブな発想を日々の働き方やプロダクトに反映しています。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;システムの力でイノベーションを起こすためには技術力を磨くことも重要なので、技術チーム全体の技術力の底上げを図る一環として、外部の有識者を招待して「技術勉強会」を定期的に開催しています。また、イノベーションを起こす役割としては、難題の解決や新しいビジネスの種を創造する「イノベーションチーム」を組織するなど、技術力のある会社となるべく様々な取り組みをしています。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;また、UZABASEでは年に1回Think Beyond Meetingというイベントを開催しています。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;このイベントは創業の2008年から続いており、社員全員が参加し、任意のチーム編成でアイディアを考えて発表する場で、有用な提案は実践されます。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;テーマは、会社のミッションと合致していて会社を少しでもよりよくするものであれば何でもよく、新事業やコミュニケーション活性化のアイディア、日々のオペレーション改善案など、毎年創造性溢れる様々な発表があります。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;これは、私たちがイノベーティブな会社でありたい、という思いで続けているイベントの一つで、より異なるバックグラウンドを持った才能が組み合わさり、創造性にあふれるアイディアが生まれる土壌となっています。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;&lt;strong&gt;■異能は才能&lt;/strong&gt;&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;技術チームの日々の業務においては、よりクリエイティブな発想をプロダクトに反映するべく、異なる才能、異なる国、異なる文化的背景、異なる嗜好を持つ人材を組み合わせてチーム編成をしています。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;例えば、私のSPEEDA開発チームには、フィリピン人、スペイン人、大企業出身の人、ベンチャー出身の人など、様々なバックグラウンドの人がいます。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;私自身、UZABASEに入る前はオーストラリアへの留学や、梨農園で働いたことがあるなど、ジョインした当時ITは全くの未経験でした。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;国が違うと言語の問題などもあり、短期的にはコミニケーションコストが高くなることもありますが、様々な意見が交差することにより、中長期的にみるとイノベーティブな仕組み・プロダクトが発生しやすい環境であると感じています。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;h3 style=&quot;background: white;&quot;&gt;&lt;strong&gt;UZABASEが大事にしているもの：みんながハッピーでいられる会社&lt;/strong&gt;&lt;/h3&gt;
&lt;div style=&quot;background: white;&quot;&gt;&lt;br /&gt; 私は創業の2008年からUZABASEに在籍していますが、最初の頃に代表の梅田が話していた言葉で強く印象に残っているものがあります。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;「仕事だけの人生ってつまらないよね。プライベートも大事にして、仕事とプライベートを高次元でバランスさせて、互いが原動力となり両輪がしっかりとまわっていく、そんな状態が理想だし、それを実現させるために起業したんだ。だから、生産性の向上をひたすら追及し、みなが高いパフォーマンスを発揮することによって世界一休みが多い会社にしたい。」&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;この言葉のように、私たちは、仕事だけではなくプライベートも充実させることを重視して働いています。それは、仕事をがんばった結果家庭が崩壊した、なんて悲しい状況を生み出す会社でありたくないし、社員みんながハッピーでいられる会社でありたいからです。なので、例えば家族や自分の大切な人が病気になるなど何かあった場合は、そちらを最優先にしよう、そして周りのメンバーで全力でフォローしよう（渦中の友を助ける）という文化が根付いています。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;仕事とプライベートを両立させることは簡単なことではありませんが、それを目指し、挑戦し続けていく会社でありたい。&lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;background: white;&quot;&gt;こうしたミッション、バリューに共感し、イノベーティブで世界中の人々に利用されるサービスを作っていく事にワクワクする人、ぜひ一緒に働きましょう。興味を持った方は&lt;a href=&quot;https://www.wantedly.com/companies/uzabase-inc&quot;&gt;Wantedly&lt;/a&gt;からご応募ください！ &lt;/div&gt;</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>SPEEDAに導入して分かった、CDNの劇的な効果</title>
            <link>http://tech.uzabase.com/entry/2014_10_01_archive.html_1</link>
            <description>&lt;p&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; display: inline !important; float: none; background-color: #ffffff;&quot;&gt;インフラチームの金屋です。&lt;/span&gt;&lt;br style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot; /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; display: inline !important; float: none; background-color: #ffffff;&quot;&gt;ユーザベースのインフラを担当しています。&lt;/span&gt;&lt;br style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot; /&gt;&lt;br style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot; /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; display: inline !important; float: none; background-color: #ffffff;&quot;&gt;今回は身近に利用しているけど、使っていることに気付かない&lt;/span&gt;&lt;br style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot; /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; display: inline !important; float: none; background-color: #ffffff;&quot;&gt;インターネットの影の立役者であるＣＤＮについて書きます。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;CDNとは？&lt;/h2&gt;
&lt;div style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot;&gt;&lt;em style=&quot;background-color: #f3f3f3;&quot;&gt;Contents      Delivery   Network&lt;/em&gt;&lt;/div&gt;
&lt;div style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot;&gt;&lt;em style=&quot;background-color: #f3f3f3;&quot;&gt;コンテンツを  配信する  ネットワーク&lt;/em&gt;&lt;/div&gt;
&lt;div style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot;&gt; &lt;/div&gt;
&lt;p&gt;簡単に言うと、次の機能を持っています&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Webコンテンツ(サイト、画像、動画等)を&lt;/li&gt;
&lt;li&gt;全世界のインターネットへ配信する&lt;/li&gt;
&lt;li&gt;専用に整備された高速ネットワーク&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;CDNは何のためにあるのか？&lt;/h2&gt;
&lt;p&gt;地理的・物理的に遠隔地からのアクセスをキャッシュ、経路最適化で高速化するのが目的です。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;（イメージ）&lt;br /&gt;[通常]　日本 &amp;lt;=======10秒=======&amp;gt; 米国&lt;br /&gt;[CDN]　日本 &amp;lt;==CDN(2秒)==&amp;gt; 米国　500%高速化&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;なんで遠隔地だと遅くなるのか？&lt;/h2&gt;
&lt;p&gt;インターネット上のWebサイトへのアクセスの流れは&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;www.abc.com を名前解決してグローバルIPに変換&lt;/li&gt;
&lt;li&gt;グローバルIP で接続する&lt;/li&gt;
&lt;li&gt;ルーターがパケットを中継して、宛先のグローバルIP(サーバ)まで届ける&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一般的に遠いほど、中継点（ホップ）が多く、通信に時間（コスト）が掛かり、遅延します。&lt;/p&gt;
&lt;p&gt;日本から近いサイト(Yahoo Japan)と遠いサイト(米Yahoo) で比べてみます。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;近いサイト(Yahoo Japan)へのping応答&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;C:\&amp;gt;ping www.yahoo.co.jpwww.g.yahoo.co.jp [182.22.70.251]に ping を送信しています32 バイトのデータ:182.22.70.251 からの応答:バイト数 =32 時間 =8ms TTL=53182.22.70.251 からの応答: バイト数 =32 時間 =7ms TTL=53182.22.70.251 からの応答: バイト数 =32 時間 =7ms TTL=53182.22.70.251 からの応答: バイト数 =32 時間 =7ms TTL=53182.22.70.251 の ping 統計:    パケット数: 送信 = 4、受信 = 4、損失 = 0 (0% の損失)、 &lt;em&gt;&lt;strong&gt;ラウンド トリップの概算時間 (ミリ秒):  最小 = 7ms、最大 = 8ms、平均 = 7ms&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;遠いサイト(米Yahoo)へのping応答&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;C:\&amp;gt;ping www.yahoo.com&lt;br /&gt;fd-fp3.wg1.b.yahoo.com [106.10.139.246]に ping を送信しています 32 バイトのデータ:106.10.139.246 からの応答: バイト数 =32 時間 =72ms TTL=49106.10.139.246 からの応答: バイト数 =32 時間 =72ms TTL=49106.10.139.246 からの応答: バイト数 =32 時間 =72ms TTL=49106.10.139.246 からの応答: バイト数 =32 時間 =72ms TTL=49&lt;br /&gt;106.10.139.246 の ping 統計:    パケット数: 送信 = 4、受信 = 4、損失 = 0 (0% の損失)、 &lt;em&gt;&lt;strong&gt;ラウンド トリップの概算時間 (ミリ秒):  最小 = 72ms、最大 = 72ms、平均 = 72ms&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt;&lt;br /&gt;※ラウンドトリップ：通信の往復にかかる時間遠いサイトの方が約10倍時間が掛かっています。&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;実際の経路を比べてみましょう。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;近いサイト(Yahoo Japan)の経路→11回経由&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; C:\&amp;gt;tracert www.yahoo.co.jp&lt;br /&gt;　　www.g.yahoo.co.jp [182.22.39.242] へのルートをトレースしています経由するホップ数は最大 30 です:&lt;br /&gt; 1     1 ms     2 ms     1 ms  10.10.5.126&lt;br /&gt;  2     1 ms     1 ms     1 ms  10.0.0.254&lt;br /&gt;  3     3 ms     3 ms     3 ms  106.162.241.131&lt;br /&gt; 4     3 ms     3 ms     3 ms  106.162.241.161&lt;br /&gt; 5     4 ms     3 ms     4 ms  sjkBBAR001-2.bb.kddi.ne.jp [106.162.241.141]&lt;br /&gt; 6     7 ms     7 ms     6 ms  sjkBBAC06.bb.kddi.ne.jp [182.248.174.1]&lt;br /&gt; 7    11 ms     3 ms     4 ms  otejbb206.int-gw.kddi.ne.jp [210.234.225.5]&lt;br /&gt; 8     4 ms     4 ms     4 ms  cm-ote257.int-gw.kddi.ne.jp [118.155.197.52]&lt;br /&gt; 9     5 ms     4 ms     4 ms  125.29.25.94&lt;br /&gt; 10     7 ms     7 ms     7 ms  118.151.224.242&lt;br /&gt; 11     7 ms     7 ms    13 ms  182.22.34.86&lt;br /&gt; 12    10 ms    10 ms     8 ms  f4.top.vip.ssk.yahoo.co.jp [182.22.39.242]&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;※全て日本国内&lt;/strong&gt;      　　　　　　　　　　&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;遠いサイト(米Yahoo)の経路→19回経由&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;C:\&amp;gt;tracert www.yahoo.com&lt;/p&gt;
&lt;p&gt;fd-fp3.wg1.b.yahoo.com [106.10.139.246] へのルートをトレースしています経由するホップ数は最大 30 です:&lt;/p&gt;
&lt;p&gt;1     1 ms    &amp;lt;1 ms     1 ms  10.10.5.126 2     1 ms     1 ms     1 ms  10.0.0.254&lt;/p&gt;
&lt;p&gt;3     3 ms     4 ms     3 ms  106.162.241.131&lt;/p&gt;
&lt;p&gt;4     3 ms     3 ms     4 ms  106.162.241.161&lt;/p&gt;
&lt;p&gt;5     4 ms     3 ms     4 ms  sjkBBAR001-2.bb.kddi.ne.jp [106.162.241.141]&lt;/p&gt;
&lt;p&gt;6     8 ms     4 ms     8 ms  sjkBBAC06.bb.kddi.ne.jp [182.248.174.1]&lt;/p&gt;
&lt;p&gt;7     6 ms     4 ms     3 ms  otejbb206.int-gw.kddi.ne.jp [210.234.225.85]&lt;/p&gt;
&lt;p&gt;8    10 ms    17 ms    17 ms  ix-ote212.int-gw.kddi.ne.jp [106.187.6.134]&lt;/p&gt;
&lt;p&gt;9    15 ms    17 ms     4 ms  Vlan527.ihar1.OVC-Tokyo.as6453.net [116.0.90.65]&lt;/p&gt;
&lt;p&gt;10     4 ms    19 ms    13 ms  Port-channel2.ihar2.OVC-Tokyo.as6453.net [116.0.91.1]&lt;/p&gt;
&lt;p&gt;11     5 ms     4 ms     4 ms  if-3-1-0-11.tcore1.TV2-Tokyo.as6453.net [180.87.180.21]&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;※１～12：日本国内でラウンドトリップが少ない&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;12     *        *        *     要求がタイムアウトしました。&lt;/p&gt;
&lt;p&gt;13    70 ms    75 ms    70 ms  if-6-2.tcore1.SVW-Singapore.as6453.net [180.87.12.109]&lt;/p&gt;
&lt;p&gt;14    70 ms    71 ms    70 ms  if-2-2.tcore2.SVW-Singapore.as6453.net [180.87.12.2]&lt;/p&gt;
&lt;p&gt;15    77 ms    81 ms    82 ms  180.87.15.122&lt;/p&gt;
&lt;p&gt;16    71 ms    91 ms    71 ms  ae-5.msr1.sg3.yahoo.com [203.84.209.87]&lt;/p&gt;
&lt;p&gt;17    78 ms    78 ms    77 ms  ae-2.clr2-a-gdc.sg3.yahoo.com [106.10.128.5]&lt;/p&gt;
&lt;p&gt;18    71 ms    71 ms    71 ms  et-18-25.fab3-1-gdc.sg3.yahoo.com [106.10.128.25] 19    88 ms    88 ms    88 ms  po-11.bas1-1-prd.sg3.yahoo.com [106.10.128.69]&lt;/p&gt;
&lt;p&gt;20    73 ms    72 ms    72 ms  ir1.fp.vip.sg3.yahoo.com [106.10.139.246]&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;※13～20：日本国外でラウンドトリップが多い　　　　　　　　　&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（地理的・物理的に遠く、相手先のネットワーク環境に依存）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;→この遅延をキャッシュと経路最適化で高速化し、解消する&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 style=&quot;margin: 0px 0px 1em; position: relative; font-style: normal; font-weight: bold; font-variant: normal; font-stretch: normal; font-size: 18px; line-height: normal; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; color: #000000; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot;&gt;通常経路とCDNの概念図&lt;/h2&gt;
&lt;p&gt;&lt;img class=&quot;hatena-fotolife&quot; title=&quot;f:id:uzabase:20150114195558p:plain&quot; src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114195558.png&quot; alt=&quot;f:id:uzabase:20150114195558p:plain&quot; /&gt;&lt;/p&gt;
&lt;ul style=&quot;padding: 0px 2.5em; margin: 0.5em 0px; line-height: 21.8400001525879px; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot;&gt;
&lt;li style=&quot;padding: 0px; margin: 0px 0px 0.25em; text-indent: 0px;&quot;&gt;通常経路だと、遅延が大きくなる（経由が多く、各国の通信環境に依存）&lt;/li&gt;
&lt;li style=&quot;padding: 0px; margin: 0px 0px 0.25em; text-indent: 0px;&quot;&gt;ＣＤＮだと、エッジサーバのキャッシュと最適経路で安定した高速ネットワークで遅延が小さい&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 style=&quot;margin: 0px 0px 1em; position: relative; font-style: normal; font-weight: bold; font-variant: normal; font-stretch: normal; font-size: 18px; line-height: normal; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; color: #000000; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot;&gt;CDN経由でのアクセス概念図&lt;/h2&gt;
&lt;p&gt;&lt;img class=&quot;hatena-fotolife&quot; title=&quot;f:id:uzabase:20150114195710p:plain&quot; src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114195710.png&quot; alt=&quot;f:id:uzabase:20150114195710p:plain&quot; /&gt;&lt;/p&gt;
&lt;ul style=&quot;padding: 0px 2.5em; margin: 0.5em 0px; line-height: 21.8400001525879px; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot;&gt;
&lt;li style=&quot;padding: 0px; margin: 0px 0px 0.25em; text-indent: 0px;&quot;&gt;日本国内のPCから、米国に存在するホスト「abc.com」へアクセスすることを想定&lt;/li&gt;
&lt;li style=&quot;padding: 0px; margin: 0px 0px 0.25em; text-indent: 0px;&quot;&gt;エッジサーバが応答することで、高速化＋ホスト負荷軽減のメリットもある&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot;&gt; &lt;/div&gt;
&lt;div style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot;&gt;
&lt;h2 style=&quot;margin: 0px 0px 1em; position: relative; font-style: normal; font-weight: bold; font-variant: normal; font-stretch: normal; font-size: 18px; line-height: normal; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; color: #000000;&quot;&gt;改めてCDNとは？&lt;/h2&gt;
&lt;div&gt;
&lt;div&gt;&lt;em style=&quot;background-color: #f3f3f3;&quot;&gt;Contents      Delivery   Network&lt;/em&gt;&lt;/div&gt;
&lt;div&gt;&lt;em style=&quot;background-color: #f3f3f3;&quot;&gt;コンテンツを  配信する  ネットワーク&lt;/em&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;
&lt;div&gt;これまでの内容を合わせると、次のように言うことができます。&lt;/div&gt;
&lt;div&gt;
&lt;ul style=&quot;padding: 0px 2.5em; margin: 0.5em 0px; line-height: 1.4;&quot;&gt;
&lt;li style=&quot;padding: 0px; margin: 0px 0px 0.25em; text-indent: 0px;&quot;&gt;&lt;strong&gt;Webコンテンツ(サイト、画像、動画等)&lt;/strong&gt;を&lt;/li&gt;
&lt;li style=&quot;padding: 0px; margin: 0px 0px 0.25em; text-indent: 0px;&quot;&gt;&lt;strong&gt;世界中に分散配置されたエッジサーバのキャッシュ&lt;/strong&gt;を利用して&lt;/li&gt;
&lt;li style=&quot;padding: 0px; margin: 0px 0px 0.25em; text-indent: 0px;&quot;&gt;専用に&lt;strong&gt;経路最適化された高速なネットワーク網&lt;/strong&gt;を通じて&lt;/li&gt;
&lt;li style=&quot;padding: 0px; margin: 0px 0px 0.25em; text-indent: 0px;&quot;&gt;全世界のインターネットへの&lt;strong&gt;配信を高速化&lt;/strong&gt;する仕組み&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt; &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot;&gt;
&lt;h2 style=&quot;margin: 0px 0px 1em; position: relative; font-style: normal; font-weight: bold; font-variant: normal; font-stretch: normal; font-size: 18px; line-height: normal; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; color: #000000;&quot;&gt;SPEEDAでの効果&lt;/h2&gt;
&lt;/div&gt;
&lt;div style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot;&gt;当社サービスのSPEEDAで検証した結果が下記の通りです。&lt;/div&gt;
&lt;div style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: 21.8400001525879px; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff;&quot;&gt;
&lt;p&gt;&lt;img class=&quot;hatena-fotolife&quot; title=&quot;f:id:uzabase:20150114195814p:plain&quot; src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114195814.png&quot; alt=&quot;f:id:uzabase:20150114195814p:plain&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;どの地域でも200%以上高速化されている（日本国内も含めて）&lt;/li&gt;
&lt;li&gt;特に中国(右端)が顕著&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;中国特有の環境が影響&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;金盾(グレートファイアウォール)という中国国内の情報検閲システムや、 南北問題（中国国内でもアクセスが遅い）などでネットワーク遅延が大きい&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;CDN導入後の一般的な変更点・注意点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;アクセス元IPアドレスがエッジサーバのIPになる&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;本来のリモートホストはHTTPヘッダで付与&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;「X-forwarded-for」や「Origin-IP」など&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Webサーバでのアクセス制限やプログラム側での処理に注意&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;静的ファイルがキャッシュされる&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;ファイル名に日付を付けるなど、ユニーク化しないとキャッシュ有効期限まで反映されない等の問題が発生する可能性がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;まとめ&lt;/h2&gt;
&lt;p&gt;以上、一般的なCDNの効果と仕組みを説明しました。&lt;/p&gt;
&lt;p&gt;もちろんメリットだけでなく費用やアプリケーション改修も発生するので、&lt;/p&gt;
&lt;p&gt;しっかりと検証して、費用対効果を見極めることが重要です。&lt;/p&gt;
&lt;/div&gt;</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>第1回 えびスタ！ ~ 恵比寿スタートアップ勉強会 ~  レポート</title>
            <link>http://tech.uzabase.com/entry/2014/12/1.html</link>
            <description>&lt;p&gt;先日12月18日、恵比寿にある UZABASE 新オフィスにてエンジニア向け勉強会「えびスタ！ 」第 1 回を開催させて頂きました。&lt;/p&gt;

&lt;p&gt; 移転したばかりの新オフィスで初めて開催する勉強会ということで不安な点もありましたが、50 人という定員枠に対してなんと 50 人オーバー近い参加登録を頂き、盛況のうちにイベントを終えることが出来ました。参加者の皆さん、ありがとうございました！&lt;/p&gt;

&lt;p&gt; 本記事では当日の様子をレポートしたいと思います。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114193254.jpg&quot; alt=&quot;f:id:uzabase:20150114193254j:plain&quot; title=&quot;f:id:uzabase:20150114193254j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;今回のアジェンダは以下のとおりです。
前半はクックパッド、Retty、VASILY、 UZABASE から 4 名のエンジニアによるプレゼンテーション。後半は皆でわいわいエビスビール（恵比寿だけに）やピザをつまみながらの QA セッション + 懇親会でした！&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114193427.png&quot; alt=&quot;f:id:uzabase:20150114193427p:plain&quot; title=&quot;f:id:uzabase:20150114193427p:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&amp;lt;プレゼンテーション&gt;&lt;/p&gt;

&lt;p&gt; 1.マイクロサービスアーキテクチャについて     小野 大器 様（クックパッド）&lt;/p&gt;

&lt;div style=&quot;width: 65%&quot;&gt;
&lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;9cccdbb069500132d347425d7b9918bb&quot; data-ratio=&quot;1.33333333333333&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;&lt;/div&gt;


&lt;p&gt; クックパッドからは小野様に、クックパッドが何故マイクロサービスアーキテクチャを採用したかということと、実際に行っている取組みについてご紹介頂きました。&lt;/p&gt;

&lt;p&gt; クックパッドがマイクロサービスアーキテクチャを採用するにあたった経緯として&lt;/p&gt;

&lt;p&gt;  ・ビジネスの変化（ブラウザからモバイルへの変遷といった環境の変化）
 ・巨大化するモノリシックなアプリではテストやデプロイに時間がかかり過ぎる&lt;/p&gt;

&lt;p&gt; などの理由を挙げられていました。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114193459.jpg&quot; alt=&quot;f:id:uzabase:20150114193459j:plain&quot; title=&quot;f:id:uzabase:20150114193459j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;えびスタ以前から「最近マイクロサービス気になる…！」という声を周りで聞いていたので、そのような方にとってはとても勉強になるセッションだったのはないでしょうか。&lt;/p&gt;

&lt;p&gt; 2.Dev が AWS と出会って DevOps を目指した話  梅田 昌太 様（Retty）&lt;/p&gt;

&lt;p&gt; Retty からは 梅田様に、サービスの成長とユーザーの増加に伴う問題にへの対応と今後、そしてアプリケーションエンジニア出身の DevOps として AWS とどう関わっているのかについてお話頂きました。&lt;/p&gt;

&lt;p&gt; ユニークユーザーが 10 万人以下のサービス黎明期から 200 万~ 400 万人の人気サービスにまで成長していく過程で 、インフラアーキテクチャをどのように変化させて対応していったのかついて取り上げていらっしゃいました。&lt;/p&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/42827917&quot; width=&quot;425&quot; height=&quot;355&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt;


&lt;p&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/shotaumeda1/devawsdev-ops&quot; title=&quot;Devがawsと出会ってdev opsを目指した話&quot; target=&quot;_blank&quot;&gt;Devがawsと出会ってdev opsを目指した話&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;//www.slideshare.net/shotaumeda1&quot; target=&quot;_blank&quot;&gt;Shota Umeda&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114194230.jpg&quot; alt=&quot;f:id:uzabase:20150114194230j:plain&quot; title=&quot;f:id:uzabase:20150114194230j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;またインフラで利用されている ElasticBeanstalk についての詳しい説明もされていました。
ElasticBeanstalk は AWS から無料で提供されている アプリケーション管理サービスです。AWS内のアプリケーションに対してデプロイの詳細を自動的に設定してくれます。
参加者には ElasticBeanstalk を利用されている方はほとんどいなかったのですが、このセッションを聞いて気になったという方も多かったのではないでしょうか。&lt;/p&gt;

&lt;p&gt;3.プッシュ通知大戦争  今村 雅幸 様（VASILY）&lt;/p&gt;

&lt;p&gt; VASILY からは今村様に、iQON で行われているアプリのプッシュ通知に対しての取り組みをご紹介頂きました。(ちなみに VASILY さんは UZABASE と同じビルの 1 フロア下のご近所さんです）&lt;/p&gt;

&lt;p&gt; プッシュ通知のメリットとそれに付随する課題にはじまり、代表的な ASP サービスの比較から、自前でプッシュ通知サービスを実装するにあたりおこなった様々な工夫（配信の最適化・スケーラビリティーの確保の仕方・通知の分析など）まで、プッシュ通知まわりでのノウハウについてお話頂きました。&lt;/p&gt;

&lt;p&gt; テスト配信における秘話などタメになる話が満載でした。&lt;/p&gt;

&lt;div style=&quot;width: 65%&quot;&gt;&lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;0555bea0692d0132d347425d7b9918bb&quot; data-ratio=&quot;1.33333333333333&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;&lt;/div&gt;




&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114194709.jpg&quot; alt=&quot;f:id:uzabase:20150114194709j:plain&quot; title=&quot;f:id:uzabase:20150114194709j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;4. を支える技術と怖い話  文字 拓郎（UZABASE）&lt;/p&gt;

&lt;p&gt; 弊社からは 3 ヶ月前に  チームに join したばかりの文字が、急成長を続けるサービスの裏側がどのようなアーキテクチャで構成されており、どのような工夫を行っているのか、実際にあった事件なども交えてご紹介。&lt;/p&gt;

&lt;p&gt; 今までにあった怖い話として、荒ぶる Redis、暴走する Phantom JS、互換性肥満などといった事件の原因及び、解決策としてどのような工夫を行ってきたのかについてお話しました。&lt;/p&gt;

&lt;div style=&quot;width: 65%&quot;&gt;
&lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;ea4cc40068f40132fd470a025a0ea166&quot; data-ratio=&quot;1.33333333333333&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;&lt;/div&gt;


&lt;p&gt;プレゼンテーションのあとはエビスビールとピザを頂きながら、しばし休憩を挟んで、後半の QA セッションへ。&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114194930.jpg&quot; alt=&quot;f:id:uzabase:20150114194930j:plain&quot; title=&quot;f:id:uzabase:20150114194930j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&amp;lt;QAセッション&gt;&lt;/p&gt;

&lt;p&gt; QA セッションでは本日登壇された 4 名によるカジュアルな質疑応答が行われました。ガリガリにテック寄りの質疑応答が行われたわけではなく、ゆるい雰囲気の中で、ビール片手に冗談を交えながらの進行でした。
質問は、会場にいる参加者全員に対して、スマートフォンを用いて 4 択のアンケートで回答をとり、その結果をスクリーンに表示して共有する、という形で行われました。弊社杉浦恒例のリアルタイム参加型です！&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114194942.jpg&quot; alt=&quot;f:id:uzabase:20150114194942j:plain&quot; title=&quot;f:id:uzabase:20150114194942j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;登壇者の方には代表して、各自選んだ回答に対しての意見や、なぜその回答を選んだのか、などのお話をしていただきました。ユーモラスな回答も多かったのですが、時には登壇者の方の熱いお話を聞くこともできました。&lt;/p&gt;

&lt;p&gt; 質問内容は、好きなエディタは何かという質問から、普段聞きづらいような攻めた質問まで様々で、エンジニアジョークが飛び交うセッションでした。登壇者の意見を聞いて、他のエディタや他の言語に浮気してみようかな、なんて思った方もいたかもしれませんね。&lt;/p&gt;

&lt;p&gt; また、登壇者以外の参加者がアンケートページで入力したコメントもスクリーンに表示されるようになっていて、そのコメントに対しての笑いも起こり、会場全体で盛り上がっていました。&lt;/p&gt;

&lt;p&gt; その後は同じ会場内で懇親会を行いました。参加者の方と主催企業エンジニアの垣根なく、皆様思い思いに交流されていました。
集合写真を撮れなかったのが心残りです…&lt;/p&gt;

&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114195026.jpg&quot; alt=&quot;f:id:uzabase:20150114195026j:plain&quot; title=&quot;f:id:uzabase:20150114195026j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114195039.jpg&quot; alt=&quot;f:id:uzabase:20150114195039j:plain&quot; title=&quot;f:id:uzabase:20150114195039j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span itemscope itemtype=&quot;http://schema.org/Photograph&quot;&gt;&lt;img src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20150114/20150114195049.jpg&quot; alt=&quot;f:id:uzabase:20150114195049j:plain&quot; title=&quot;f:id:uzabase:20150114195049j:plain&quot; class=&quot;hatena-fotolife&quot; itemprop=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;幸いなことに「次回はいつですか」というお声も多数頂けたので、是非次回も開催したいと思います！恵比寿オフィス引っ越し後まもなくの勉強会で到らないところも多々ありましたが、次回の勉強会では今回の反省を活かしてより良いものにしたいと思います！&lt;/p&gt;

&lt;p&gt; みなさまご参加ありがとうございました！&lt;/p&gt;
</description>
            <guid isPermalink="false"/>
        </item>
        <item>
            <title>オフショア開発 @ Framgia Vietnam</title>
            <link>http://tech.uzabase.com/entry/2014/12/framgia-vietnam.html</link>
            <description>&lt;p&gt;&lt;span style=&quot;background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;SPEEDA QAチームの藤田です。&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;background-color: white; color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;オフショアでのテスト自動化PJ立ち上げのため&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;に11月中旬より1か月間　&lt;a href=&quot;http://framgia.com/jp/&quot;&gt;Framgia Vietnam&lt;/a&gt; に来ています。&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;Framgia さんには、以前からUzabaseの社内システムの開発を依頼していましたが、今回は&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;社内システムだけでなくSPEEDAの自動テストコードを実装いただくべく一緒にベトナムで仕事しております。&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;せっかくなのでちょっと今までの投稿とは異色ですが、Framgiaさんとのオフショア開発についてまとめようと思います。&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;今後オフショアを考えてる方には参考になる？とうれしいです。&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;strong style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;信頼できるオフショアパートナー　&lt;/strong&gt;&lt;strong style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;ベトナムのFramgiaさん&lt;/strong&gt;&lt;strong style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;。&lt;/strong&gt;&lt;br /&gt;&lt;strong style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;br /&gt;&lt;/strong&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;「なぜFramgiaさんと一緒に開発するのか？」という理由はいろいろありると思うのですが、&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;ベトナムという国としての特性とFramgiaさんの会社としての魅力が大きいと感じています。&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;オフショア開発を進める&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;ポイントとなるベトナムの&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;基本情報。&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;物価、&lt;span style=&quot;line-height: 18.4799995422363px;&quot;&gt;労働コスト&lt;/span&gt;が日本の3~4分の1&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;平均年齢が若い（27~28才）&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;親日&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;IT業種はとても人気がある&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;みんなポジティブで明るく、面倒みの良い&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;国民性&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;Framgiaさんの場合、平均年齢が27才以下らしく、実際に170人くらいの社員みなさんが若くパワーあふれる感じです。&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;優秀な学生のリクルートには力を入れているとのことで、国費留学で海外で学んだ超エリートもいるとのこと。&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;Framgiaさんではラボ型開発を推進しています。&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;ラボ型は、契約した期間で担当メンバーを確保することができ優秀なエンジニアを常に確保することができます。&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;日本と2Hの時差のあるベトナムでは、日本に合わせてみなさん1日は基本的に以下のスケジュールで仕事しています。&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;稼動時間が同じなので、いつでもオンラインでチャットや会議をできます。&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px; text-decoration: underline;&quot;&gt;AM 7:45 全社の朝礼&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;朝は、日本のクライアントに合わせて早いです。&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;毎日1人ずつモーニングスピーチを英語でし、&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;最後は日本のあいさつの練習を全社で実施。&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;やる気UP！&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;AM 8:00 チームの朝会&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;どのチームも、&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;最後は「モー・ハイ・バー　&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;わっしょい！」の掛け声で終了。みんな同じ時間に朝会をするので掛け声が社内のそこら中から聞こえます。&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;やる気UP！2回目。&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;AM 8:10~PM17:00? 開発集中&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;チームは席が近く、いつでもコミュニケーションはその場ですぐできるのでミーティングが少なく仕事に集中できる時間が長い。&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;モチベーションやチームビルディングはどこでも大きな課題ですが、ここではそんな悩みないのでは？と思えるくらいに&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;みなさん明るく仲良しで、とても仕事に集中しやすい会社の文化があります。&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;もちろん技術力UPにも熱心で、チーム対応Hackathon、コードコンテストなどのイベントが企画されていたり、トレーニングルームが用意されておりプロジェクトに携わるメンバーが必要スキルを短期で習得できる体制ができています。&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;ということで、長期で一緒に仕事をしこれからのオフショア開発の可能性をほぼ毎日感じ、更にベトナムとFramgiaが好きになってしまいました。（暖かいし、食べ物もめっちゃおいしいし。。。）&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div&gt;
&lt;p&gt;&lt;strong style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;立上げはやっぱりオンサイト！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;私は、春からオフショア開発に参加しましたが、&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;今までを振り返って思うのはやはりコミュニケーションが難しいという部分です。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;テスト自動化PJの立ち上げでは、&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;メンバーが自分たちで開発環境をつくり、コードを書いていけるように、&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;「コンセプトを共有 ＞ 必要最小限のドキュメントを作成&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;＞&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;実際に一緒にやってみる」&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;を&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;繰り返しました。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;その中でよりワークしそうなフローを一緒に相談したり、躓いている部分を共有しました。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;割とスムーズに自動テストの実装を依頼できる体制ができたのも、&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;オンサイトだったからこそ。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #666666; font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt;また、ベトナムでFramgiaメンバーと仕事がしたい！！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #666666; font-family: Trebuchet MS, Trebuchet, Verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 18.4799995422363px;&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;img class=&quot;hatena-fotolife&quot; title=&quot;f:id:uzabase:20141218135804j:plain&quot; src=&quot;http://cdn-ak.f.st-hatena.com/images/fotolife/u/uzabase/20141218/20141218135804.jpg&quot; alt=&quot;f:id:uzabase:20141218135804j:plain&quot; width=&quot;340&quot; /&gt;&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;p class=&quot;separator&quot; style=&quot;margin: 0px; clear: both;&quot;&gt;&lt;span style=&quot;color: #444444; font-size: small;&quot;&gt;自動化を手伝ってくれたFramgiaエンジニア Ngocさん&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div align=&quot;center&quot;&gt;with　社内&lt;span data-blogger-escaped-style=&quot;font-family: 'Trebuchet MS', Trebuchet, Verdana, sans-serif; line-height: 18.4799995422363px; text-align: start;&quot;&gt;Hackathonの告知ポスター！&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;</description>
            <guid isPermalink="false"/>
        </item>
    </channel>
</rss>
